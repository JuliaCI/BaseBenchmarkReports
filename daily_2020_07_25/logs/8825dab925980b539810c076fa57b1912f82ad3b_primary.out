cset: moving following pidspec: 20057
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.548916498 seconds)
loading group "shootout"... done (took 1.184905051 seconds)
loading group "string"... done (took 0.40099872 seconds)
loading group "linalg"... done (took 7.502965663 seconds)
loading group "parallel"... done (took 0.14198809 seconds)
loading group "find"... done (took 1.345956443 seconds)
loading group "tuple"... done (took 1.823975983 seconds)
loading group "union"... done (took 12.108445361 seconds)
loading group "dates"... done (took 1.243812778 seconds)
loading group "micro"... done (took 0.190663602 seconds)
loading group "simd"... done (took 4.133226472 seconds)
loading group "io"... done (took 0.985984704 seconds)
loading group "random"... done (took 8.426966942 seconds)
loading group "problem"... done (took 1.515410604 seconds)
loading group "array"... done (took 18.055752231 seconds)
loading group "misc"... done (took 1.443438435 seconds)
loading group "scalar"... done (took 37.338523306 seconds)
loading group "sort"... done (took 2.825047799 seconds)
loading group "sparse"... done (took 11.199900879 seconds)
loading group "collection"... done (took 16.565844497 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480405003 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.11950769 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.123320587 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.112556579 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.1373944 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115753645 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119127173 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081321209 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.854427787 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144391919 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.108285443 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41758167 seconds)
done (took 5.125841033 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.163637475 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086533161 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074804489 seconds)
  done (took 1.271079722 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060299497 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127853773 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061875231 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.061638633 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062156221 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.061647462 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.061637696 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061497656 seconds)
  done (took 1.611790637 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069526721 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063082632 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061038791 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.062848386 seconds)
  done (took 1.37170904 seconds)
done (took 5.605501599 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229653572 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.096380812 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.277772806 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.384308336 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.441258365 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.085850229 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.069098515 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.064481354 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.123510599 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32565814 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098901154 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.174967716 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.084787856 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.166382093 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.963886892 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113748065 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.079832819 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.116336338 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087856481 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126703398 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.398683892 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072529782 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.068992071 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065071939 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.062613531 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.624294949 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665568366 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125030742 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.077868259 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097152704 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.111790518 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.662631579 seconds)
  done (took 10.288507022 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090656406 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086745123 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06353046 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119212655 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.088825719 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.064006326 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069404716 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.062170241 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084961076 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.118899134 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085343452 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.094276888 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.060811325 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064056674 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.070665811 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.192098949 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075666396 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.074796417 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.062827414 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074497163 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.101250542 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.072736957 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073523148 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073725004 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.122909286 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.163910515 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.090805929 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.092925537 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061405557 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07535768 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.109633889 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.121306765 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061903103 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.060777924 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.114705638 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091185859 seconds)
  done (took 4.35544036 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.91123722 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085489508 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.096284735 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.596097243 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.060925601 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.144283624 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230687482 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071289329 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.419284963 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.136228156 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.132552111 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.136516146 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.108220619 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063833505 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.191249837 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080826434 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.108463195 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.329029704 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.061768233 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.061321689 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.060807183 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065156167 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062576129 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.058112773 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064826176 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.085795605 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.081042601 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.168486444 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.734042564 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.229114727 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.060034506 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.15152176 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.07904877 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.34808436 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.061742354 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074230747 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.366311373 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.113765339 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.059220649 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15714879 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.106659561 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.05741447 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.103933939 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069757178 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.061532455 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.06142339 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.061754131 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066796412 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070372447 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.094855186 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.060281339 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.058914336 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.150291175 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.057491149 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.059292795 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.060883315 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.143556324 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.059646265 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.129074715 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.057014683 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.060189122 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.086964264 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.0610554 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.078377386 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.088038647 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.321923215 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.019880627 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.059955584 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.209217931 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.070319775 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.05804183 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062782608 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.059481739 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.060556245 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.05878021 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064664631 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.062283873 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.059994965 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09946905 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.058310156 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.061109639 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.058144123 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062843983 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.089355367 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.057510862 seconds)
    (85/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.427284442 seconds)
    (86/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.088668679 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.056777206 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.057296701 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.067558556 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09552312 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.058791755 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.062967577 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.059211371 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.058978591 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.058031847 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.058817755 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.060537849 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.055826675 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.323084215 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067972717 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109406564 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.026857512 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068636021 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065006033 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069329127 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066866303 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066652245 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063737492 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066696327 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064985234 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061672124 seconds)
    (112/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060754131 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.1084858 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063815845 seconds)
  done (took 20.733151169 seconds)
done (took 37.401852307 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.252202118 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078777896 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079389035 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079090074 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07857674 seconds)
  done (took 1.804099515 seconds)
done (took 3.041087677 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.10662253 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062373306 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098396885 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095778258 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063619451 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060423949 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.093063861 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060038312 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.092686761 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.094761089 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.096848344 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.095780083 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060082553 seconds)
  done (took 2.312936095 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06814771 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07861185 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07797235 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058628835 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067751989 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076795956 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058411145 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076115303 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082393996 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077329167 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077180768 seconds)
  done (took 2.016163782 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067367638 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078815117 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079246333 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060033036 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06903984 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077163716 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058674391 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07689486 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08077144 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077565918 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07711398 seconds)
  done (took 2.011491718 seconds)
done (took 7.552187718 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066702848 seconds)
  done (took 1.259636119 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.523311268 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.499141638 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066452904 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085586261 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181689297 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096303654 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.224579925 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070590162 seconds)
  done (took 8.124438638 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096945291 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066284667 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066271303 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066116087 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06522792 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066054841 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066145867 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064092672 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065026131 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06567851 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064205433 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064580392 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065804841 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.065168999 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065095603 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.064948172 seconds)
  done (took 2.371991019 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094616271 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091322555 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.06979329 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07062443 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068009646 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.06766974 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069746319 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069235328 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066218004 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068172362 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070883694 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069125359 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068500407 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059822035 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069715159 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071093199 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066519999 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069532526 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070527224 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071645369 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070291465 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059920649 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068599519 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069656405 seconds)
  done (took 3.007861725 seconds)
done (took 15.973334124 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112860886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073516966 seconds)
  done (took 1.384899237 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.069344644 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069545444 seconds)
  done (took 1.35485118 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075662187 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059356652 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081860486 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069733391 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058394203 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058055681 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077605726 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058500222 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058382305 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058585567 seconds)
  done (took 1.872812355 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063360923 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.06970604 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0655802 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067741948 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065470847 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059709673 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063078255 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060364185 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06756467 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058616748 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06375685 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078764102 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063325108 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08021422 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063033588 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064094365 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065943425 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062759286 seconds)
  done (took 2.402488214 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059775162 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060765824 seconds)
  done (took 1.347395724 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064551628 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060120029 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063648477 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063882846 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060543411 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059208145 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059580072 seconds)
  done (took 1.649825199 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.406206528 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115231191 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332179121 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065153267 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07557018 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.241909929 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060429011 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065050284 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.064755163 seconds)
  done (took 2.687723078 seconds)
done (took 13.926245763 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078941377 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.079676704 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.08528398 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.413033628 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.08846819 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063399288 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109144473 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177082887 seconds)
done (took 2.33543875 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213740262 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.448717979 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.946150566 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.062521038 seconds)
  done (took 3.683548662 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324719291 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080481683 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073159368 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062837496 seconds)
  done (took 1.781775264 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063727249 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068240438 seconds)
  done (took 1.364073589 seconds)
done (took 8.28276521 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085732044 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060461906 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060164805 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060150612 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.059885953 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.06043521 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060011293 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.060133016 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060245595 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06016459 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059899465 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059870456 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.059688013 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.059560015 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06000528 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060167478 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060225985 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059931756 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060173575 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059843092 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060115404 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059816841 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060443389 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06010002 seconds)
  done (took 2.728184435 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080301014 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062471036 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064454219 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063967954 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064725043 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063559308 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063437837 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061887585 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063837292 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061589153 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063776844 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.063926069 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061552565 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064149775 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062588752 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064370555 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063704096 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062459697 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06207415 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063977172 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063488656 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061912756 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064729244 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063936407 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064209118 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063952591 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062009694 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062367852 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063849209 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063853086 seconds)
  done (took 3.163708853 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.062774795 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056488531 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057381839 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06600022 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.0567738 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057526205 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057486226 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056650287 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057061111 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058332708 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057509893 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056589272 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057727801 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056882412 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056813824 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058049713 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.060735951 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074523403 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.056961446 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057073926 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060175519 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057258428 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056824891 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056917013 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057705313 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057049658 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056710724 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057523601 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056947775 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.05759941 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056831381 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060149229 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.060868291 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.056748219 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065707067 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.060737413 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.056938366 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060524047 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.05830019 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056758496 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056516277 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056472057 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056592996 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057228197 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065293481 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057211371 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058178275 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057558311 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057212116 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057081029 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056922606 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059104803 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.061485288 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058537053 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056775398 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058183841 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056589413 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057751454 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056998231 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056884211 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056896642 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060177832 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058943374 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057495488 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074102112 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058624538 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.065180703 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.056707526 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06061576 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059972544 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057623211 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072221101 seconds)
  done (took 5.491671302 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086127253 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086301729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061776004 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061429438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057589414 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057986733 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06509242 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057535597 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061592252 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076275266 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057364049 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061548259 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06165395 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061048636 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057873275 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061712779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065589548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057476348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057234217 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061153914 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057769469 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065085348 seconds)
  done (took 2.662172002 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.138949279 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063436343 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099287895 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073436823 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06577444 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07357932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062928043 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062953217 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063187552 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063662145 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06365545 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062888149 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065377735 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06334661 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06369383 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063153729 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063388978 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063231623 seconds)
  done (took 2.531028775 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076061082 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063663807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084525346 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062511163 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062454553 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062500341 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066697958 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067493822 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062388878 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062754254 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067347314 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062316341 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062151248 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062606917 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062152565 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062363033 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062315222 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062613727 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067471188 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066377923 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066538871 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067373986 seconds)
  done (took 2.69886928 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074395403 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062065459 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075523709 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063941265 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057787605 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057642306 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062536709 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061553229 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062738482 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06092336 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061373887 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057595689 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063595815 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061923814 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063628998 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06179096 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06105506 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0620086 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061487591 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057814103 seconds)
  done (took 2.504950897 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085013355 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060507823 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060262611 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079314343 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060387107 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060234652 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078462041 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060200575 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060032051 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081244703 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060099479 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060524711 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07839235 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078052241 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060159053 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078221678 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078073998 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078749621 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060456037 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060146323 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081231469 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060230214 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078060516 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060297095 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060620297 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060596055 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060278727 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078246728 seconds)
  done (took 3.175081366 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071456705 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06020224 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060179564 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060637562 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060124173 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060211182 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06058425 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060215959 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060965387 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060138357 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059786928 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059746812 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060018055 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060165317 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059974808 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059740931 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059950578 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060437408 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0607341 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060577157 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060356994 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060017988 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060266408 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060391677 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059917581 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.059694025 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061111207 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060468753 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.05987691 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060036925 seconds)
  done (took 3.079537312 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072550556 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069044058 seconds)
  done (took 1.403564248 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061700904 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073105446 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056847436 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067076703 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065815633 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060324692 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066853192 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065764267 seconds)
  done (took 1.77361307 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.067207215 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086175324 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059695761 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060300157 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063153275 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114585873 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.072937483 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.067807814 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072633802 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060208994 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059628277 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070387209 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058166252 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.069299282 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060556222 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066033977 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06424432 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068652502 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069482833 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057061963 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068665595 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059769006 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057428647 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.059862316 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.058903482 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064397557 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072008796 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068922441 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06595232 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056280633 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075762917 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.057910513 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058548806 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065818988 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062859551 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057675847 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091301575 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058045653 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063910023 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057363224 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068704702 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075861863 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069605377 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074310917 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059198653 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059980014 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057269434 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059685077 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060179416 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065587652 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057732034 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063460379 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057027372 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059502622 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067093538 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057780713 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06411683 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065496054 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068911583 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066266965 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065276357 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070957786 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06540239 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067299959 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059269916 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075128156 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059744632 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.06856589 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070664409 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.05893197 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070919448 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057440595 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056437962 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057624277 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088451429 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059835207 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058872758 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057626026 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05775523 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.05926718 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066110117 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063836402 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063256434 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061650663 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071507877 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065312778 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057690898 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065986036 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074097372 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059854756 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057590017 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072280963 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059611296 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057672658 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073606363 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065635558 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.05940569 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058893201 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059452115 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070002527 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.058604801 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056038185 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063949833 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059046456 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060795483 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062848093 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063578306 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057073742 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065482613 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062134229 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.058287284 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055427379 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060235692 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.057658011 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055448664 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064540346 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.056604574 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070125453 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061750177 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068752802 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.06884989 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.065403358 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070273525 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.056145445 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.055108727 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.072097471 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.195744341 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060557912 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075919283 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058628163 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067863551 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058663877 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060426635 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066647589 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057554561 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061045646 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058637232 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.06502505 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059741015 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060095591 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06191081 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065558791 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068728507 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059790186 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065378496 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058378829 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072114432 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066724797 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061276763 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062402261 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058117872 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068981944 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063476548 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066828794 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057959685 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059110453 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.05919853 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066948323 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066472504 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060194461 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067976902 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061570303 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058501892 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.05824667 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059663691 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060873082 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062248747 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059407339 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064165239 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.064902108 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.07114474 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068882903 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065172905 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0570368 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.05780003 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059430203 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057289111 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061328067 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065707159 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070712219 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068171251 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07601283 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.057837347 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065845875 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.05956468 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073270326 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069008026 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.05888739 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063406102 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056540662 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059612545 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065925154 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067921909 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.070728237 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070363069 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061345066 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061913733 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057402178 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070993644 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058086335 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064609226 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066397185 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063097286 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057903479 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059476493 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065676934 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06118727 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057920395 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.07137505 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064882566 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057581806 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069986379 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058013325 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067155329 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057460397 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060005954 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061680315 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059917091 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065586404 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071360584 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056729747 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058283874 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071462762 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.05989592 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.05973324 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063968814 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070539327 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.060868349 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064185915 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066734088 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06580157 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060638866 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065090229 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057856203 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.064837601 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.06068727 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067213676 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.056956834 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072785041 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056070067 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069714007 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.057111306 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066159161 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057043296 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064500436 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057321951 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.071576088 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.05847249 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057408757 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067142344 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.05537139 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.064600108 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055928249 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060527927 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061721579 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064061713 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.058137183 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.19924523 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060545016 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066195814 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062308389 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066574937 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066397544 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061813057 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058117314 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.064874639 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067938506 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065967919 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059351212 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060103698 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058487741 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066117365 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.059972006 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059347585 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064884345 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061504496 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062825671 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060059063 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060145597 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060775409 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064918659 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066524881 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073977643 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065669321 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063638483 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065914231 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057480015 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071555487 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057782672 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063882624 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056776173 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065658242 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065915502 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057768922 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075577154 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059363581 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065284424 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069421301 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065054206 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060579622 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074442158 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062286841 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064272826 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064266198 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061091436 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063879195 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059994288 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064594331 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065723326 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066795448 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058911279 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064009225 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06586324 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059509098 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.06707755 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059438609 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064046228 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059925335 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056849942 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061398801 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067939124 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061335104 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062407305 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058093846 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056610147 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058039278 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065925552 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061417602 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064619395 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071061647 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056481844 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059216334 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057618298 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062207684 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074408296 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066162331 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064019865 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061310864 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056785433 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059892099 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.05959532 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.05772957 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061565568 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05661116 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057460864 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066610994 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059285703 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060723228 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057878991 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058955034 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065441082 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063044842 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058247035 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063297975 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057712087 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061439983 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.05720001 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059995443 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061100942 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057516959 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060207066 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066383861 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071901617 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063346911 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065073351 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058588618 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064159546 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070556719 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065812116 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058271271 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064932955 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056583905 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073878415 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064596342 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063718563 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065101176 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058270187 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07131001 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.059513582 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.064754073 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069443131 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057620213 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064115983 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055993291 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069170998 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.059656542 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.055824496 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063041359 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062346297 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.198938825 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069636147 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059743315 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065690339 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064406743 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061021583 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060378304 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060012926 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065346297 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072352542 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059884313 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063145888 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064428033 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064560811 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.061717126 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068345508 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064833705 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059158126 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059819532 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060335435 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059051212 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068814013 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058437622 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061500741 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.060821638 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057752956 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063397733 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072519722 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066456766 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066165848 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057462148 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057398059 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073478243 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060182762 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061881753 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064366809 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065488587 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06912401 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065621967 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072457352 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058264096 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.062993473 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069011243 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058582488 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057662786 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060844791 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059746147 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065849459 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066238188 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063244378 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059799414 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06338999 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068760969 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059000854 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06147719 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063307876 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058680079 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06696805 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064248922 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064818987 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.0595127 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057536776 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06012155 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065104573 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063415054 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065360112 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058816385 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065672505 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070673408 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064052398 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061793385 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057520793 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061876558 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065240242 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063269661 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057781285 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061376183 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060511769 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06592851 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065806852 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062235802 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057426162 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072992712 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064766672 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06586031 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059820881 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060099109 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058148594 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057499828 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067670948 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057624458 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059781524 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062014277 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060104818 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07354194 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06493393 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071614441 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058557514 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060913106 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057170303 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065770512 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061584619 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057896042 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066624162 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057016089 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071415815 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.068255287 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066261796 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057652683 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061323755 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064744172 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070095852 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065882245 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.064964598 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061484758 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06605198 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059537094 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.066623488 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056672536 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055819042 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065385091 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063217297 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.067227698 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.056260903 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.065117246 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.058315134 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.062844558 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06335013 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057859115 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.05784826 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057924643 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.201789876 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062400371 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066365699 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062197016 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073501454 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.05957828 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068424532 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065668482 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067565927 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069856134 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070064043 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065154196 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059209913 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064171999 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065124307 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059607256 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061880543 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062126986 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078483286 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060072445 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060499188 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071510901 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066422528 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057407565 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066476487 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061946247 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.066721109 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059624158 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067550486 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063529058 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059443233 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061527171 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061597194 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056843282 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058036351 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05846982 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066618738 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.061691401 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057717625 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075444106 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059661994 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065279518 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067820228 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.063832798 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059859309 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057149447 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058876174 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068413052 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071198303 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060647112 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064196455 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059550918 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065632642 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056451327 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064703267 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064386513 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06478709 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057458119 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058037612 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070136797 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070870699 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061415586 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066247934 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065364131 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059542931 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077819406 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064665775 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058912559 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067222219 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060263172 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056999823 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057333973 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059866183 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070877543 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057591658 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060860901 seconds)
  done (took 39.557627785 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098688177 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.05874945 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057563141 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057570251 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069794469 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058611562 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057845361 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058824383 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060956914 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060593433 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057578282 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057675211 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069317301 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071981306 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068921633 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062176716 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057688455 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059230245 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057557889 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058639411 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068368446 seconds)
  done (took 2.690508548 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067921009 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073563431 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070231709 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07472701 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066240522 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062495297 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069409566 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062733407 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070180314 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067742546 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070559912 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062615688 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067520189 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067656179 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067834994 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062579712 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07014725 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065947398 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062332023 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069391027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06253421 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069630516 seconds)
  done (took 2.822447401 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.060680377 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058199892 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064686985 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057159196 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.05701268 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060841752 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057005707 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060528238 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.05999866 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.060127024 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064542577 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057911985 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.056754895 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.061865863 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056815727 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.057750284 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.099430162 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058220511 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058258318 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.056916444 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062900697 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.065153003 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.056845518 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057139771 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060305326 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06098319 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.056868982 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060243382 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058010642 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060692003 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058172675 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.056869316 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064578279 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064231064 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060410995 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060695282 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059072738 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058118845 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057159452 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057174605 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064006254 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.058533691 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057372881 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.05868708 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064841057 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057150309 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.0568628 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064629222 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.05709705 seconds)
  done (took 4.301054595 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072187262 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106251993 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06321267 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086446012 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071291434 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064774691 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06293268 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088600361 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.058384788 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059381561 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072612606 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07262302 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061240796 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062739328 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064669248 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060873826 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061475712 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060250538 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063789038 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060719368 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.0641902 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06447855 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071165717 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071976918 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062096185 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059757922 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060354615 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062365931 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071327833 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064592372 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062272683 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063103267 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071835784 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.062953549 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060232563 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060195727 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072599725 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060789873 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060353344 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059049913 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060211077 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062218743 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064228595 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072747002 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060898783 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06562356 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060931614 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058451049 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071822789 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060453366 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065331541 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073238931 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062037612 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061243352 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062739434 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072163019 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060896755 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059111105 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060888198 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071199426 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058611374 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061838053 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072715052 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060279988 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064530295 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072735534 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065044416 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062159908 seconds)
  done (took 5.952236244 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070978081 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087799826 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069500172 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069085171 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06822636 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068453746 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068402217 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068492677 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068574696 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06927434 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068744676 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107148241 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064112066 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073489567 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068045131 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068537501 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068249969 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068206791 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068729915 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068183919 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068148813 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069150116 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068863106 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069301864 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071542681 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064079269 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068195312 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068672015 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069113105 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068708716 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071580737 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.06843356 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068195421 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069186126 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071474809 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068525959 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058368129 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068179522 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068860901 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068640205 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064136169 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069080216 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068165703 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064010691 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068911985 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068400823 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069112988 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071562081 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07723789 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069159221 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068957829 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069330003 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068356155 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068938131 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069288574 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077212444 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069625558 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069725504 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068575476 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069227696 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069279696 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07748924 seconds)
  done (took 5.719768431 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076714563 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067040858 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07736738 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059780766 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057070924 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066997044 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058019555 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057368465 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065584188 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066098211 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067839944 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067434386 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069948241 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067577081 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06731873 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069485201 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06692281 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067130753 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065871871 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067179624 seconds)
  done (took 2.715366042 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071990193 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075909497 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063937657 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067279238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.062680876 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067163722 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.061712516 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062979221 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063403817 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063009936 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068543418 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069031694 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06347794 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06715856 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068318468 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067252585 seconds)
  done (took 2.43055772 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065905033 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066979819 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065643699 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059162432 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062470408 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058247238 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.058387663 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.056891351 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.057978916 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.071785493 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058610093 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070137587 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059291421 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057634666 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058509103 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064428947 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.057954132 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.058742398 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059604744 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.06420873 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065229234 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060239041 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062545706 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058763997 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063489471 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065596955 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06022566 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062096015 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058668444 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059049787 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064656549 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065818917 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058677959 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059448297 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057578063 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058929404 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059270068 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.05939451 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064318965 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058914432 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057241793 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063188813 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059602354 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.05988041 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058108183 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059138198 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057810692 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064082723 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059141535 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064134921 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058592294 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061170529 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059090258 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066177288 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061401 seconds)
  done (took 4.733687995 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074860893 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064419486 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058558488 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057436791 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062546609 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062860464 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062679281 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062326606 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062830233 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057206554 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062831821 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06170927 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062795193 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062846924 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063067689 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06242242 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056964813 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.062536044 seconds)
  done (took 2.507358468 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07057799 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063331357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.066989883 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062755529 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062286698 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061459938 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057622434 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057898964 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057688833 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061959622 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062264307 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.061586461 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057979885 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.061627915 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062405286 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062126077 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061779742 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057698164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062078149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057849532 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062149748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057575269 seconds)
  done (took 2.721878787 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086311348 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081019019 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120497138 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076818419 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084193901 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068336273 seconds)
  done (took 1.889720473 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088730343 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10052311 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062283725 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062708429 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072575514 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06590052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065473886 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065900993 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072767235 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070909345 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065899114 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072605402 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072494988 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068103351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072894951 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075852756 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065884031 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066327727 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062541117 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075735988 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066146416 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072619151 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066499177 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066087241 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065997747 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086687855 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075767528 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070577348 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07145768 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072922286 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07586233 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066343414 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072579132 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070937196 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062572705 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072730049 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065941785 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076302905 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072711159 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068577799 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062273346 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072860544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072919984 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06796546 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076532004 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066130925 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067997966 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066117549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066417916 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078816622 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072799141 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068318699 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072901468 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076038681 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076193182 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078455664 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070822079 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068328093 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073372711 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070999514 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068238614 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072902407 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06834663 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070758676 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076062798 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068146614 seconds)
  done (took 6.06880871 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096914117 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062772916 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06632913 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071410172 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068128876 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066201923 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066304971 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066024259 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065821955 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063320805 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100191622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066540841 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068401534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06839245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066058421 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066106383 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066485267 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068204702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063068933 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078759278 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065936028 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06821706 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068314564 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068443463 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070598861 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075479152 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065769305 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066343012 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065926838 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065861607 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068243828 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065964791 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068040317 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062335126 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068226926 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065930096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065560615 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067987091 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065927117 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072799154 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067928323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075836125 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065800206 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065821628 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070457341 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065940999 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065778265 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06293682 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065813257 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062562981 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071290695 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071107593 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070650947 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068134054 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066072925 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066805359 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066544416 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06580594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066317097 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077004061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068331825 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065984937 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078493961 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066044462 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065799183 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06808618 seconds)
  done (took 5.921595574 seconds)
done (took 122.476568366 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206466924 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17896655 seconds)
  done (took 1.744936078 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071515351 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091720739 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070835119 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128274375 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066380491 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100308926 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099480407 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070538637 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06608406 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066082864 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065860452 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068810102 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131236204 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066244779 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065830449 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068861525 seconds)
  done (took 2.674513276 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101909267 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.176517938 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103549049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064172931 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099042153 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071333736 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063630707 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.0746777 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067733106 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067186023 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071634394 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069706416 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066944373 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069346911 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067632254 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071264897 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066636164 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071125833 seconds)
  done (took 2.822398487 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091385441 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08408872 seconds)
  done (took 1.557900698 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157457414 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101401149 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139681493 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.313469505 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131172484 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27283504 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128659711 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127758556 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.109685683 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121040092 seconds)
  done (took 2.984086653 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099181795 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161106998 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293032713 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113313362 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070037769 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.082045783 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114292193 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.075736612 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.0749924 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074948442 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.074948156 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074088266 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.091929424 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071551551 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071564268 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071600133 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.095179923 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070252209 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07059974 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.071345926 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.094710858 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064783673 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071632157 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070270906 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072545415 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072790343 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065685437 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064603416 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.070736361 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070376356 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073529344 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.078304777 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072788147 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.098358338 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068242679 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.0991283 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.06980166 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068613369 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070262644 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068832755 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072358377 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072481703 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072786277 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072127204 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065735175 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069571055 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06599602 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064424516 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074509587 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065508438 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074576065 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073766291 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.098186578 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065833256 seconds)
  done (took 5.823731269 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105665858 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103339019 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06540703 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107195721 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09850102 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064954321 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099731737 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093473448 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101406996 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064444875 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063907293 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066157439 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072417348 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.07507249 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110505856 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102405668 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066578125 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064879045 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102169695 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102013469 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063517647 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095260378 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091674606 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101262928 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063046497 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064702728 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.062989239 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.063987537 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069851152 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07164777 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064133447 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072339816 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.076706205 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071516333 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062840757 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.062994721 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063173591 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.071782676 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072390115 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072405009 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.070910007 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063106664 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06307876 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063615356 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064702113 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062625481 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070925492 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.072317312 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.071284214 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063236676 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.063699156 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06300211 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064088582 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072096576 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.070976011 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072761505 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072792901 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063165057 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063201914 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06517128 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073038646 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072724475 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072576555 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064258422 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07319305 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063286123 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073220461 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07606687 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063275159 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063667861 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063441099 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063526064 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064180999 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070550355 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07066669 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063778358 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063124723 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06337889 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072798222 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071084453 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062819874 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070001878 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062815501 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063199652 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063879638 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063473914 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.070402001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.072014735 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064324952 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06335132 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063482484 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063525525 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06266521 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.070274336 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07202392 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.071730331 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.0711527 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063782791 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.070948101 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070190103 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063773585 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.070274299 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06284505 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063174585 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063205251 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.06983733 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.069467221 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.071163119 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.061956528 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06171466 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.069155306 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.203603318 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064959991 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071909888 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074498607 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072285358 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.063783907 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077106875 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064200475 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073771757 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064270192 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073390481 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064308289 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071636869 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064130146 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.063513228 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063948112 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072058053 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064954937 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063509111 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063802593 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063836782 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07202758 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07515807 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06479775 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071264606 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.072123954 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064667165 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071254971 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064082959 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073351033 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064002922 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064006541 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063317552 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074113182 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064396024 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063605108 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064219765 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073829091 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063663171 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073531522 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070858962 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06301429 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075050474 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073507462 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.071488163 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.073875957 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064300358 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063372425 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06344244 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063852952 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070411925 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071872802 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064081846 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06344059 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070750142 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.072800892 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.063096062 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.070614107 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07118912 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.071122216 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063810236 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063726456 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07418883 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07309377 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071148461 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070995688 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0718194 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063543944 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070523689 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071729971 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063475702 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076404522 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063562668 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075152719 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071624604 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070611923 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071873619 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.073097878 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07301379 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073232282 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.075496134 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063003689 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063464207 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071089915 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063310055 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06332251 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07115482 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064163553 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063788337 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075470217 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063859122 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073267622 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063221136 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072137402 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062917927 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064029265 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075685565 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063158491 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063840174 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070748289 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063145306 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.070266581 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072638097 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070234737 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062803966 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063206886 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070866212 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07037702 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.061723093 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.061727595 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062467994 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.068657353 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.068016769 seconds)
  done (took 17.195333888 seconds)
done (took 36.200552726 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.199983657 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15127604 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185185441 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110266959 seconds)
  done (took 2.130929624 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096754505 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094091917 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076769617 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060114947 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.080295452 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060043813 seconds)
  done (took 1.895799649 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277751729 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192542591 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169439297 seconds)
  done (took 2.05887451 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209469804 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187336525 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445600165 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280637556 seconds)
  done (took 2.643743185 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.128102929 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.076681359 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059491886 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.069791969 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.108808642 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.141985137 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.086480582 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.111185022 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070823064 seconds)
  done (took 2.337400215 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128726178 seconds)
done (took 12.647724509 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.205515076 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.256687797 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114094855 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.09456324 seconds)
    (5/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.082504726 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067389072 seconds)
    (7/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.072061608 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063337331 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.232685202 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068815967 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15808127 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.140607062 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070914763 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.332978593 seconds)
    (15/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.171073685 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.217568489 seconds)
    (17/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.208032352 seconds)
    (18/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.11523825 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.169872342 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069982817 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069114958 seconds)
    (22/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078158356 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.061783239 seconds)
    (24/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065686827 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.080000922 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086330087 seconds)
    (27/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.134838636 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067705551 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.199749028 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.18724295 seconds)
    (31/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061253374 seconds)
    (32/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069663676 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.199469547 seconds)
    (34/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.20004074 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.082157564 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073081665 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075516408 seconds)
    (38/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.06853977 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.068435589 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067371987 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.21670148 seconds)
    (42/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.163404178 seconds)
    (43/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068707939 seconds)
    (44/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069349315 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.154220604 seconds)
    (46/309) benchmarking ("sort", BigInt, false)...
    done (took 0.232507987 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.05999678 seconds)
    (48/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.130164316 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089409513 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.079486236 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067018708 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.232548961 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.072716206 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123656073 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.145889147 seconds)
    (56/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101010172 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.156919545 seconds)
    (58/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06164114 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186864559 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.061775276 seconds)
    (61/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.189780339 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068612186 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091282324 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064397262 seconds)
    (65/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151400958 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071834835 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.068625489 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.125713129 seconds)
    (69/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06142903 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.059802327 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.068411876 seconds)
    (72/309) benchmarking ("sort", Float64, false)...
    done (took 0.124989809 seconds)
    (73/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.133458382 seconds)
    (74/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.236608493 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.058774464 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072910518 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11279531 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.128588358 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.332262714 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062100313 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106075276 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073215652 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061832783 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.161456722 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.080908308 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122975519 seconds)
    (87/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.162049103 seconds)
    (88/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066116097 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.080569296 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076825459 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.116666144 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061788987 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.12773494 seconds)
    (94/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158604381 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.114681308 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.134732909 seconds)
    (97/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061376115 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067932018 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067398713 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086664106 seconds)
    (101/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071503278 seconds)
    (102/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.062059893 seconds)
    (103/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075053297 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.062124777 seconds)
    (105/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069179513 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.109071442 seconds)
    (107/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.0689986 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148091885 seconds)
    (109/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060375648 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.06720874 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088453041 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064214208 seconds)
    (113/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.067447738 seconds)
    (114/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069618999 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.197729533 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069460404 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.165835958 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114702427 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.059701082 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.060564679 seconds)
    (121/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.153677655 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19350788 seconds)
    (123/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065362341 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071516688 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133589909 seconds)
    (126/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.062970232 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069425214 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068830642 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.060906803 seconds)
    (130/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.060114412 seconds)
    (131/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.132257378 seconds)
    (132/309) benchmarking ("sort", Int8, false)...
    done (took 0.163753028 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.059990691 seconds)
    (134/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068157517 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.165117 seconds)
    (136/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.073725107 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.1632847 seconds)
    (138/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149662962 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069997975 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112811595 seconds)
    (141/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.072702963 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.060935679 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0710948 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070878873 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.060165852 seconds)
    (146/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0714064 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068652999 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070503967 seconds)
    (149/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.060350851 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.060169501 seconds)
    (151/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.060608893 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068691236 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061148512 seconds)
    (154/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.060837131 seconds)
    (155/309) benchmarking ("sort", Float32, false)...
    done (took 0.12637906 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.060201436 seconds)
    (157/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.06927186 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111321061 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.08419723 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066069331 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059560634 seconds)
    (162/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.067029728 seconds)
    (163/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.156200693 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.193402049 seconds)
    (165/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.061431304 seconds)
    (166/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.129900906 seconds)
    (167/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.059864052 seconds)
    (168/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151189084 seconds)
    (169/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.060013465 seconds)
    (170/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.068431233 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.059595615 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.061157705 seconds)
    (173/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195422746 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08392542 seconds)
    (175/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.130497366 seconds)
    (176/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148326812 seconds)
    (177/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.060357316 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135629483 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064248681 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060070352 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069022246 seconds)
    (182/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060185787 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069671209 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.059869963 seconds)
    (185/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.13091582 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069645213 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.061706008 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.060611344 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.215077068 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06307102 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.061503519 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.068676327 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.135281705 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.132517134 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062382739 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06102129 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06043312 seconds)
    (198/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.062357364 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087573307 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.081066973 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08583719 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.061722508 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.073026562 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.062861607 seconds)
    (205/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062237885 seconds)
    (206/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061389903 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061018053 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067110863 seconds)
    (209/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.060893516 seconds)
    (210/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062353245 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.17897326 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06874159 seconds)
    (213/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.140653121 seconds)
    (214/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085464416 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067263052 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060314924 seconds)
    (217/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.061083685 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.067360183 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.061193482 seconds)
    (220/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131523204 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.080768018 seconds)
    (222/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.121664496 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072296661 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072632021 seconds)
    (225/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.060653096 seconds)
    (226/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087526171 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.061455646 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133004431 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.081775021 seconds)
    (230/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.072318727 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061491554 seconds)
    (232/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065803083 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.059550035 seconds)
    (234/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078696792 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069060312 seconds)
    (236/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.060102723 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.060631938 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061388187 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.081252095 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087338105 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.061329898 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.209860321 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.060451932 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.060373485 seconds)
    (245/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06207757 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.05991728 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083340786 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.178780545 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.060812832 seconds)
    (250/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.059965495 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.059897305 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.062752398 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068728715 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.060231995 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.157568386 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.059704406 seconds)
    (257/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.061438469 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.060684589 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06155525 seconds)
    (260/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06056122 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.062056889 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16008184 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.061462858 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.060650825 seconds)
    (265/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.072958779 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126118957 seconds)
    (267/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.061431667 seconds)
    (268/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072319626 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.059882208 seconds)
    (270/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.063551836 seconds)
    (271/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.059974178 seconds)
    (272/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.074979723 seconds)
    (273/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.061108712 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.066928161 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.061364253 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.088901349 seconds)
    (277/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061217658 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139296799 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.060293711 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06091843 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.060480813 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139073161 seconds)
    (283/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088107235 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.059978761 seconds)
    (285/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070794396 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.081782906 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.060915903 seconds)
    (288/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.066536013 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.059901834 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071059921 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.059879587 seconds)
    (292/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.062624585 seconds)
    (293/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.060915149 seconds)
    (294/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.068505676 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.060603101 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115215416 seconds)
    (297/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.060180279 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.123739293 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.067606455 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.060630591 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06127296 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.061515309 seconds)
    (303/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060422287 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.059976739 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.063777173 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.063576053 seconds)
    (307/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.059543535 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.059282509 seconds)
    (309/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.060634894 seconds)
  done (took 30.980397295 seconds)
done (took 32.422980197 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084219456 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08426764 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069088917 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.080069528 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076051184 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090118719 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.068452449 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07307082 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075556299 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.074035146 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.073833548 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.066686315 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.069713509 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070004932 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.067608886 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083389742 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.073928162 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.068235379 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.068587669 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060195296 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069158315 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.060600845 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060050359 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.066585264 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.072055847 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068104161 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069884915 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.069782082 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.060796468 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.060749701 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065389559 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069910249 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063177191 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073532521 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070137628 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.068942149 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070020319 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.072877228 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.060474126 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061401753 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070957591 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.060764862 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.068485871 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.066857056 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.065418833 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067850444 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.068616069 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.072929351 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082533059 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064293439 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071304733 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.071306179 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.071838152 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.066516588 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065346026 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.068563714 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.066408529 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083346264 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069082246 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064282028 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070509908 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.069282938 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.066637305 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.068485597 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.068643947 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.070859224 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073110192 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.066863376 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070641024 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067260955 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.060742562 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069003367 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065050953 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.060404311 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.071304999 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.072879029 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.059664055 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.064803036 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.068341204 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.068320015 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.060513238 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.063884854 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.059794985 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.064946563 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063946686 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.066569243 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.065505168 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.06816221 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060327459 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.068854645 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.067577961 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.06880098 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060290097 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074067891 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.060601752 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.066931891 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.060609256 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.060580155 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.059870244 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.065877641 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.060237615 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06451627 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069735797 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.059790663 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065231607 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074021529 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.060490843 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.06781889 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060107296 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060219647 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.071479535 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.070906954 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.060493313 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06436699 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060102228 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.065941846 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060150744 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.060432228 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06023608 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06082033 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065000747 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.060955994 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064646871 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.065732741 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073557347 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060677195 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068142645 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064557205 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060175688 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.066650082 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060326711 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06002099 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.059313162 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.072676513 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063175313 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.059487359 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.064976141 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063202605 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.06742793 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.05888808 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.068156926 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.065435796 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.20112918 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067754607 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061160719 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072643376 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064716166 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064599971 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.060474163 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0610078 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.059948606 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.060763434 seconds)
done (took 11.876233314 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063542617 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.101473412 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.068961044 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.076939438 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073547583 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.061407932 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065664823 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.078860459 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.063748789 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.079507865 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.081358633 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081055924 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.087801308 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060263699 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.060950812 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06167736 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060113611 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.066968846 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.076766375 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.081449353 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.089320094 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06056523 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070156179 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.075914534 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.071596066 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.079523706 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062420667 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062007263 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.063998307 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.07608173 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.083700207 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.060434531 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06170533 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.075303096 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075052888 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069513305 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.061575128 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066289072 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.061862592 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.060742025 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.062484445 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.075898583 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.06539492 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069716081 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062103687 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062648865 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.061806322 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065394774 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.071745143 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.06515676 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.068837798 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.073162148 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063612723 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061357479 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.059797791 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065513738 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06137142 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062154438 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.061344803 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061501102 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.061065438 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063117292 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.061975167 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.061736505 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.064225252 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064532349 seconds)
  done (took 6.004785015 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080108473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.087977336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.076930487 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077510058 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.060713571 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061310637 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.061357227 seconds)
  done (took 2.042158505 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063244121 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074459929 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07717067 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077630707 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.0705647 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.078461256 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.061404989 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089686372 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.060696924 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073241668 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.106504373 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078109107 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064965597 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072602549 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.061179632 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069193163 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.061327593 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069093197 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069966403 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077419883 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065543965 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.0872311 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074198784 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.061586473 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.081831988 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.06670012 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.060879321 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.061441172 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062624102 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.062521265 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062538481 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.099366579 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.066128139 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074897238 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062738876 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.061171757 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067484772 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06469275 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065032212 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.067339317 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067308808 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063023977 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.060504188 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063381 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064173184 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.065213731 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060448509 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.062593196 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062633383 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073132647 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.060812994 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066114305 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065048839 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067003381 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067382567 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066110264 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069468805 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.062970667 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073362228 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069590666 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062789462 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070631681 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07009555 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067550622 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070051841 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.06556453 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066647006 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067430322 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062498716 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.063488396 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063024864 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070277338 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061120407 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.063652381 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064781956 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.063174511 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.065855037 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.077775196 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077449697 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.073451922 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063210199 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.062933083 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065812566 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.077414464 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066269104 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062713465 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064919739 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06067796 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.065589804 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.062746447 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067106314 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.062798272 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.069638454 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.063884877 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065072655 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070451721 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061320122 seconds)
  done (took 8.117993952 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066835924 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.062678937 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.063537686 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.062548977 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062711384 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06246697 seconds)
  done (took 1.944192226 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.08769715 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062465651 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.07523488 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063061045 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.095841614 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.069469765 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.069682244 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071101501 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.074772897 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.073970085 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070239524 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.072453084 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069152908 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064184127 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069509846 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.06357532 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069930597 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066225574 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.073149659 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064359404 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075622694 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064190447 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064429668 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.073954267 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065030053 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063527895 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06249995 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.073731197 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.073314973 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073408683 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.063883065 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065181406 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069620793 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070728833 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.069805361 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069512294 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062464294 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.067710811 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064516633 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.0658056 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.071841968 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064565617 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06503512 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067785235 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070901079 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069480306 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.067967079 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065997381 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069787677 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.06766615 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.067941688 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063170192 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065302859 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.067658717 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070358122 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070812923 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.06806966 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069532354 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.063938638 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069599296 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062620554 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065161734 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070677865 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065100684 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.06803838 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.067867939 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069961513 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064265763 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064272196 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062468448 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.067830451 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062649996 seconds)
  done (took 6.457267466 seconds)
done (took 26.086063729 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.984524902 seconds)
  done (took 2.492474727 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.558304302 seconds)
  done (took 2.100353162 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.716326383 seconds)
  done (took 8.257540519 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.28619459 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.335036268 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696908753 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.126857552 seconds)
  done (took 3.018738423 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704393656 seconds)
  done (took 2.253282028 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228008097 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.214309291 seconds)
  done (took 2.000433389 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342764362 seconds)
  done (took 1.883155902 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.05911147 seconds)
  done (took 2.597121437 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.228884873 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.153092203 seconds)
  done (took 1.932913704 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.438822206 seconds)
  done (took 1.979901145 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.238281792 seconds)
  done (took 5.783787588 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231469919 seconds)
  done (took 1.817083059 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228520729 seconds)
  done (took 1.778402598 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.690339217 seconds)
  done (took 3.236178811 seconds)
done (took 42.682483605 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078372197 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.07911536 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.078873168 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07535656 seconds)
  done (took 1.834132093 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071323375 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065081163 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.06877367 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069523627 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.066586223 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.067318246 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.067759438 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065202186 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066894473 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065255723 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.063589228 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.064974546 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.067787535 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.064577536 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.067585284 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069207098 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.064867091 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065060769 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.067662338 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.064524716 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.067538325 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.06461832 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.063332054 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.064004084 seconds)
  done (took 3.139175037 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075156813 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.067659864 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.069918654 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.066626434 seconds)
  done (took 1.833437727 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07322996 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081184028 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082473632 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087100387 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.071059802 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.071969979 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.079218961 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080013336 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.060326114 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.082916812 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063042657 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.061897924 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.061780751 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.081460691 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079312115 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058238487 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.059726574 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.071529442 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.070828465 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.073225119 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.062928184 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.060520205 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071336223 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.0714816 seconds)
  done (took 3.268828182 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076998795 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.060386509 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.074475782 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087191921 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088591424 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.060513149 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075183411 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088496051 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134298038 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.060502747 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.066209247 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.060970367 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100744167 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.060908808 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076156042 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105399576 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108789136 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.064036315 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093297883 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.060560085 seconds)
  done (took 3.165366826 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073744693 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.064361125 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065156001 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.060230452 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.071327658 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.067247846 seconds)
  done (took 1.966256511 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06516216 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.062383675 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.062374237 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.061308947 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.066656262 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062213941 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.060822082 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.062544193 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.062388277 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.061767017 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062082256 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061194368 seconds)
  done (took 2.307212546 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156873531 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064242132 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065305884 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.062537666 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.065918531 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061147159 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076367113 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.063761093 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079578692 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.061571634 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.061408285 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.063642024 seconds)
  done (took 2.441317594 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098711957 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124246536 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091690943 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068231383 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164544959 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089997301 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.085947719 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.117869628 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089285007 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.065185617 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088876283 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129956484 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090873673 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.094305449 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077704888 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119997695 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104725469 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083223921 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108545619 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077721776 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.066390982 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127882883 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06602767 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088264192 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096749901 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.093968377 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105195214 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128417545 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079785167 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.085430797 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078602291 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070934018 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101107894 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.079927076 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.09322006 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08979087 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094198603 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081257074 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083877148 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115426801 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148719955 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095858995 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09596347 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129086285 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074342795 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.103559317 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078361103 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094673102 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10023264 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089162728 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071203802 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087750542 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102124602 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097512193 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.077831646 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077931418 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112061708 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.093692887 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091288054 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07538393 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101246647 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.082809888 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101894499 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25852726 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135709795 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100680492 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131861325 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119244072 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091118259 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.08523433 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.087740644 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071845079 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107148831 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094162831 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130363562 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105124161 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095592309 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.091537991 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078560071 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104212834 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110192459 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089723562 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090463517 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140389545 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104836104 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086516884 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088892064 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.135048242 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067738598 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142579498 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085487703 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116068483 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093295071 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133587656 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087612689 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.079426599 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101320376 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099490671 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085626048 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098989172 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080385546 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109218643 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088656545 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096381715 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.077501229 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08642379 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082632209 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.093008907 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071205136 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099629168 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111374961 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109663794 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071136135 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104858129 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082176918 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.072829337 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088710473 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133707481 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078726135 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071348054 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143760014 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.088493894 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.111018888 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104174721 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.078333555 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257907653 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133373291 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089178348 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086185725 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073176558 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149509273 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072463903 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114657344 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077534519 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098341915 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100838303 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128011512 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134014625 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091575965 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074548324 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088107528 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.10269557 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083429429 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081768029 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073435782 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.104673627 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121232941 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.096331793 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076655302 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.088938474 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.065636366 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10901021 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072528445 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080107999 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091668619 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.083741001 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.085854443 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137815417 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.080904403 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104338247 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093548707 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.063913475 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087720007 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150086482 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0794672 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.106790853 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11291674 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080218042 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.064858363 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092855491 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.069592787 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10461613 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.088924623 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102706106 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075071917 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103019475 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065209788 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070834144 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125665277 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098052944 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085289902 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.126875986 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100404356 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.084561495 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.099728702 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093198128 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091566323 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097244992 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.251657083 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102989558 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07055811 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125710191 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087912606 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074251552 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083741413 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076018978 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.07452078 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096138423 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111261883 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08534884 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097299549 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099857217 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086738354 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106468478 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085980655 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075510688 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126317074 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073198071 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071340835 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084543483 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10220062 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08549572 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.129481974 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.075785542 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132079034 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089125993 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077762863 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111470977 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.065897244 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067012233 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.077741039 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088586816 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112157078 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075913362 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074811124 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11459504 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128107521 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093982433 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099378922 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06533743 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087392968 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131186634 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.109901984 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078141985 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106407143 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080812 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125613322 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092742984 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116212112 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102338642 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10691101 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.088260329 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.07780025 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070352021 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084371251 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10719958 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083116395 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078577196 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064528698 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.070817483 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088351332 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087319739 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107792051 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083298125 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129485755 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069390744 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096279176 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250683047 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104327403 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08701901 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092339369 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089390932 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089271236 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088498128 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089020248 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070349603 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122496545 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099305987 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075305235 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085918134 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091622823 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103335484 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105588556 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106206385 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090347743 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103907853 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118818426 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095671878 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080605624 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081332407 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090514281 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081864967 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07776771 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10111455 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109069671 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094735128 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105223245 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.091799605 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.089024583 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103776232 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089640557 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085342867 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.11457779 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148368321 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.098542189 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100480497 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082005332 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103301047 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102116279 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109212743 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107674834 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10615537 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067793636 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072613569 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067322957 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103667308 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076123451 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113852489 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073317048 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103357235 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093483842 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076847244 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064251166 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098532289 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089782867 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078612419 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119668733 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110116065 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07009784 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08776591 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102535118 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079196108 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11970311 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098113035 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096258264 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.067752438 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085939063 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.069185812 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255977904 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098621791 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075182393 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.07408723 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067214115 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103828705 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080769423 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106132455 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085522796 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097249498 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116976004 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129006074 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084168066 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092970137 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114367217 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109681574 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.078849806 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109080942 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132146525 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116536035 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077942311 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081537646 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102841999 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10231488 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098095192 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073660555 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076073078 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105660126 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110065166 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.064961418 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081275606 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067315739 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081412294 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10921397 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091812941 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0791346 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114265127 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072157092 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104692599 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092353809 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120150684 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118708985 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140445832 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093607588 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081287057 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073662963 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120231345 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.069343406 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113545632 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10920688 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084396081 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.065496237 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080393521 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.092848333 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.624230235 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105333899 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07263918 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13159544 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083214796 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110648196 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081055094 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113332478 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085285983 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097294479 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086292995 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273953578 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080059705 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107950703 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.17053324 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107027758 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104426146 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071024187 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08295374 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070142822 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.075800119 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079199369 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083899549 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106422015 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082011147 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101744431 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.076288986 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.10345765 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088353779 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085316283 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.09486692 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077249209 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135046904 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084641195 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118775277 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103853434 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075168286 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071725598 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084062062 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.097159271 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079357174 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091487964 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.075711946 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073407953 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148107102 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09893513 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082006991 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099171901 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.08760443 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083812189 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08896662 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11406224 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106497328 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070047115 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084274321 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100615438 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075952496 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.071761532 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093238237 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066475699 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086181175 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095370149 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093096959 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086694988 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.09949155 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075414048 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083964164 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106782888 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082647946 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07428358 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073951896 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073773142 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073382454 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100429792 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104689988 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109781315 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104418448 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086723805 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090015466 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.075034525 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.214417821 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225370813 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094371718 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.10155383 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073698711 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127296748 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085756395 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085297482 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092896989 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097612136 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150160135 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07142008 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10586529 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090135094 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106359998 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083659462 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10380886 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092421695 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089079454 seconds)
  done (took 48.712866882 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.092359791 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143433379 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150224194 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077244635 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091102148 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11508658 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204133868 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187238503 seconds)
  done (took 2.734037918 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064986488 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.076595923 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098758634 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078090127 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.061732878 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.062523043 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.198597047 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.076862246 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.060983342 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097788776 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071240514 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063194705 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.407115696 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.060590289 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062032217 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069891039 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.061738895 seconds)
  done (took 3.330082678 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.358218553 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598461309 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.337086417 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.069874251 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.910544738 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085433472 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.288994236 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131547025 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075529982 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553469861 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.363365451 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126017326 seconds)
  done (took 18.567026978 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072217926 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069499641 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.073475794 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07315556 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069022525 seconds)
  done (took 2.017703786 seconds)
done (took 96.907666468 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078251023 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.161952081 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.062683671 seconds)
  done (took 1.92204071 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081021339 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.07659812 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.07650974 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074122275 seconds)
  done (took 1.981250953 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071124499 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.070950741 seconds)
  done (took 1.808570064 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238284415 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157312391 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087485344 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079770265 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075152895 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075533918 seconds)
  done (took 1.906117173 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069891342 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067125504 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067610459 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.067972533 seconds)
  done (took 1.936107315 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065909877 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063443587 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.063907577 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066339531 seconds)
  done (took 1.925067177 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.080344018 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078699152 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073672371 seconds)
  done (took 1.897917801 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.09249395 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091130893 seconds)
  done (took 1.849607721 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077378192 seconds)
  done (took 1.742891615 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086881623 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.093654655 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.147970222 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107557682 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14606136 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.130707731 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.073164298 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074788381 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069118844 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.067365926 seconds)
  done (took 2.662769939 seconds)
done (took 21.856074457 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076275832 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.360103722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.354536715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080508789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671434811 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.350921885 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.963441109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085770942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.093175631 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063320885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.078893259 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.643231952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.954007539 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317770958 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.941135927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317548001 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645734542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0633836 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062497552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063273936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.946147761 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062468695 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063458712 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063170579 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674857177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367584897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.063936313 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317109448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0626326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065541109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351093334 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064513158 seconds)
  done (took 15.931850351 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067819646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114642594 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.067303615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.077861214 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065043902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064415681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.065672457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.063509904 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103134286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063366139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079419527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.062878765 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067492336 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.064770761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08297791 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.063632463 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06501466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064376 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063939759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066705492 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081553712 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06317902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06471394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063892871 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06450527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076270644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06509878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0636365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063661733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066270791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067561803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065419069 seconds)
  done (took 3.922235737 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116974144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121069041 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068174484 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100624182 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114049466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065181285 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142383698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086495491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107720908 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063413713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079815714 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063207831 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097566967 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065305242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083524807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064114143 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065239253 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064152862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063489884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064700312 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081816707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063620248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064748827 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064050537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065058052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078280209 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065039837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063940083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063852807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066605099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067909785 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06514891 seconds)
  done (took 4.19331032 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066735815 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067414318 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075332937 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076544338 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062832717 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064454154 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066032574 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.062269142 seconds)
  done (took 2.230389737 seconds)
done (took 27.962244915 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075273549 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063364704 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066556516 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081805085 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.06837461 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.065953317 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060355553 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.068907847 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.066687169 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.066729271 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.067944472 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.061666299 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.064862984 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060119099 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.067125448 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.061782544 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068022638 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066308076 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.066477082 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.067467956 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064125175 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.067146241 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.069252348 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067117115 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.066853373 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.066949613 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071248895 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067400812 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062803819 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.064843657 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.063897588 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.072571454 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06841312 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069069356 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.061913197 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062259954 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066164413 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064124805 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.06821385 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071207759 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.063617512 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071169203 seconds)
  done (took 4.458396633 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082690161 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084076917 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.076690967 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.076335386 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094146514 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.076678187 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081240758 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073289912 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.071481043 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.080556872 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068013411 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075200351 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072729486 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06703287 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.071535516 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069034731 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.073917767 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068996673 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.072474073 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07206241 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081258928 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06670011 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074387875 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.073461466 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069030707 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074404914 seconds)
  done (took 3.643854143 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070172603 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.078829686 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086442976 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141630678 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106628693 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074439432 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.075293258 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087877399 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09121882 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.062822977 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066693153 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.08685086 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086432197 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.069120426 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.101812569 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079157697 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.07763217 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.064820308 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069652452 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091265323 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083132322 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079857584 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.088523366 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078894642 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062399722 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.064888834 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068996253 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076135235 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069478665 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073948117 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.066957619 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.065746346 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063451222 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.073575194 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.066644594 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062028133 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085901153 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074048824 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.074963746 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103467956 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071035821 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.063645785 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089882932 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122104307 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.062288505 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.065925002 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.066182361 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.073669918 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.063646717 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090233112 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076226356 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062139353 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.062887598 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06331677 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.063734973 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077880203 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064790046 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06421904 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073114718 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068259511 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083447935 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.067312055 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081008724 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.062324769 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.072278434 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063512365 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.063900961 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.061213924 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092142551 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068937987 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1094555 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.063328767 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061054931 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073740137 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07257288 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068426544 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06212401 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079687541 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072852265 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066038679 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073468373 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065185224 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065754007 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09296987 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062881855 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061916564 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061164385 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065728692 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065018507 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.062948123 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.075553778 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06191686 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.065606058 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.076281271 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062010995 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.062958024 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.065928155 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064354406 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.061638313 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074737499 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066884338 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.063413483 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073526129 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.062779996 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.065186819 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075211101 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.068986688 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.061528617 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064006178 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065396036 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.063986408 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066322973 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06544087 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.064734304 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069245517 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.069748954 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.067509279 seconds)
  done (took 10.222117233 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.156886162 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.145489485 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065202265 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.138225797 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.070432984 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.067966584 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.138903521 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.081806666 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.063516075 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.063935313 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063667993 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.091630454 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.087622069 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.097507282 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.06738262 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063162855 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085242452 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.094816063 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.141302854 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.137059131 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085895011 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.069688889 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065067474 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.064462805 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.064350067 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.071155863 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.07810333 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071030733 seconds)
  done (took 4.223451464 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075018937 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.086870145 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067527874 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.073659328 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08233276 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.063174302 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.064402696 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.064513583 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.076586403 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.071915742 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063183679 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.06718883 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.066787186 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.065664199 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.063874104 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.069024796 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.069448122 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.062434463 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067057739 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.067819679 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.072657756 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.087466262 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.067085664 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.062904406 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.065152377 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.062367023 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071535495 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075009641 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.062857595 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078137966 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061018197 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.06712618 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.076220516 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.063931212 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.062867668 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063109651 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.063056411 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063160794 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.063787443 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.061494501 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.061704837 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.067568586 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06211109 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.070912645 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075950177 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.069467776 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065059545 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.065500523 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.065831257 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.060482731 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.065460728 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.065422461 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.064847036 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.069601192 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.066253616 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.065675429 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066026341 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087510396 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069001346 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062394103 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062152293 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.061648033 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065054069 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072628424 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079238937 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06532571 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.061755693 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063084809 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068625263 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076509711 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062426733 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067480083 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.060806269 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.063524288 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.065305217 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065181209 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.063891049 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.061684767 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.062503896 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063308942 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063489057 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063144293 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062810386 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.065328443 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.061094213 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.061779924 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063783644 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.064644416 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07147963 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062377323 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066882769 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064193789 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.061829041 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.065445595 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068817888 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.065353949 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07560034 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.073803264 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.063523509 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061424468 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.075832728 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066050217 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062312836 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.068740534 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.066819224 seconds)
  done (took 8.769773877 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087838057 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065645059 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.078214573 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.085602867 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073178701 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.067907197 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07358681 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.063875709 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078796394 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.062229921 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.071397503 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.061747824 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074170965 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.072518935 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.064606939 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.072918486 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.06586299 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.07973636 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077066845 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062027338 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07186532 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.074705586 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.074673774 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.07699952 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.076170844 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.077257018 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.074401431 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.065713335 seconds)
  done (took 3.766848212 seconds)
done (took 36.762543541 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.762008599 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.017145444 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.766397742 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.994861967 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.818210684 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.978402042 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.8712402 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.753266136 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.87238384 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.81265474 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.0913519 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.231907729 seconds)
done (took 65.715773591 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.783876851 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.927699825 seconds)
    (2/2) benchmarking "String"...
    done (took 2.008825898 seconds)
  done (took 5.62815756 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.985550237 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.548726884 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.018563066 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.754974426 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.757551932 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.198458684 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.560924437 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.209528093 seconds)
  done (took 30.743182219 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.849257358 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.984026467 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.42434542 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.453434437 seconds)
  done (took 15.446696189 seconds)
done (took 63.366640426 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.807953288 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.755121475 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.770380394 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.779231393 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.766718725 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.757764177 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.762751315 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.754726821 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.769303269 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.99417 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.754506462 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.761250785 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.759495875 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.764071624 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.267492941 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.814602448 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.775858448 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.761648756 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.76470269 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.774552144 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.762965993 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.758975953 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.235999547 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.935036994 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.355178839 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.093213219 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.176740412 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.142588802 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.773078648 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.76180099 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.826793115 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.072097067 seconds)
  done (took 203.705051845 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.758312658 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.674509008 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.719465099 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.760065038 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.136606325 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.942885855 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.874092735 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.180829066 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.762063146 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.767723128 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.952087736 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.757900703 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.973363038 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.752360932 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.800112534 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.793771932 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.928599749 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.980600807 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.798933381 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.917362386 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.775250105 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.768758607 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.71513044 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.931990108 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.779458191 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.85372475 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.777417526 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.769423636 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.946834146 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.892829849 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.765439968 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.774272937 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.897280422 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.62356338 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.765022547 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.781462148 seconds)
  done (took 168.744236486 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.955082637 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.766466532 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.758926052 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.814489358 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.880340725 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.760329584 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.390012546 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.769226256 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.549095972 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.764061697 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.759064906 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.756957325 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.763078396 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.771998945 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.835488262 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.758156314 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.76214305 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.772018936 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.763311607 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.784738372 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.760657809 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.76198404 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.760798851 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.762310741 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.76087026 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.76200728 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.762290214 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.145391012 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.999694694 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.760603926 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.760574212 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.373252436 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.774065536 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.948327987 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.760774985 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.85402183 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.816884162 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.882295036 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.759899586 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.977641823 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.837949563 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.759265881 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.76149969 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.826732615 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.77297223 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.761488532 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.763972477 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.767458416 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.825598672 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.032156682 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.758766586 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.880412706 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.252713306 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.758880149 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.760032952 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.759031379 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.367849285 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.760562074 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.76107024 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.766558874 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.766241797 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.76178679 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.761956029 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.149795766 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.828322919 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.009930149 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.105922896 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.951255484 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.692499898 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.999365805 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.759094366 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.761835571 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.762091433 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.763256171 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.761188511 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.764697009 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.939541311 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.77188859 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.884714815 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.840228533 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.881441733 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.762975309 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.771659198 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.588565178 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.832556186 seconds)
    (85/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.797622347 seconds)
    (86/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.587296248 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.761191099 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.761803792 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.140452029 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.536271558 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.760589318 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.761019504 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.77259274 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.759850453 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.764552194 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.763467834 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.842429965 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.760805978 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.761368999 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.882959668 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.490246428 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.997600582 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.761328766 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.765391063 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.771635964 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.845122672 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.884646851 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.762438101 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.830702404 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.76658093 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.763778752 seconds)
    (112/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.762404016 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.907361753 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.762956408 seconds)
  done (took 400.333218935 seconds)
done (took 776.494003961 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.364311914 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.32784554 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.448812038 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.345276866 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.323531387 seconds)
  done (took 13.508763349 seconds)
done (took 15.2091968 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.781154157 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.770288649 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.829086733 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.846545184 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.778819284 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.786452731 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.844503919 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.780770504 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.813564912 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.818613037 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.849500652 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.848783498 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.786821402 seconds)
  done (took 25.23496671 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.77394628 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.922156871 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.992836786 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.805721921 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.773405317 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.003610877 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.830632163 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.935932978 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.937782803 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.020536733 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.01448089 seconds)
  done (took 22.713267887 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.772537248 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.921262529 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.001706739 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.809924695 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.775060672 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.005579713 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.837960837 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.919488781 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.925705997 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.003859444 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.009546849 seconds)
  done (took 22.693061541 seconds)
done (took 72.342086398 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.768095772 seconds)
  done (took 3.469271205 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.795274253 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.935337232 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.768112608 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.767071598 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.767469717 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.769991128 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.769325834 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.769625138 seconds)
  done (took 16.043737304 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.769507412 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.768615015 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.769245365 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.767670655 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.769117761 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.769433381 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.768579803 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.769459024 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.769377365 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.77061759 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.771167616 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.769932878 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.768841076 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.768423679 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.770471907 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.769864788 seconds)
  done (took 30.011440733 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.772474377 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.769729171 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.770151542 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.770615068 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.770700978 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.769679582 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.770421318 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.770741469 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.771580573 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.77135909 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.771928878 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.771859386 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.772097264 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.770808748 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.771298889 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.773557412 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.772318135 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.770964467 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.775441201 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.770510634 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.770583381 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.772977761 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.770295778 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.772508887 seconds)
  done (took 44.216969357 seconds)
done (took 95.453612449 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.585577586 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.543808466 seconds)
  done (took 9.831768249 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.771978749 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.773224609 seconds)
  done (took 5.253374027 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.772451862 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.77259314 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.773052571 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.771341086 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.774934059 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.77172119 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.771777595 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.771745098 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.772076776 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.775781451 seconds)
  done (took 19.431912181 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.772362874 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.772327139 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.772956125 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.772962591 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.772998149 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.77215432 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.772436721 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.772367129 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.772142291 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.773077017 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.771563986 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.772070732 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.774352479 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.772122527 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.774991811 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.773343862 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.774159819 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.774048056 seconds)
  done (took 33.617332479 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.774655917 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.772517934 seconds)
  done (took 5.253185032 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.774514491 seconds)
    (2/7) benchmarking "second"...
    done (took 1.77361062 seconds)
    (3/7) benchmarking "month"...
    done (took 1.772786573 seconds)
    (4/7) benchmarking "year"...
    done (took 1.773875763 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.773712542 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.773859147 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.773511482 seconds)
  done (took 14.121328247 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.773984639 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.925441298 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.987375462 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.634118781 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.775905162 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.77644786 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.145084725 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.775010409 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.779247644 seconds)
  done (took 20.276987204 seconds)
done (took 109.491620358 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.641325444 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.772651269 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.048984425 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838418374 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.800822517 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.119566379 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.805515983 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.047691509 seconds)
done (took 42.783115896 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.799540194 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.773000253 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.799036695 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.799597324 seconds)
  done (took 22.076814979 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.776187628 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.106503219 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.800185114 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.576195155 seconds)
  done (took 21.982703591 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.158050068 seconds)
    (2/2) benchmarking "read"...
    done (took 2.124421381 seconds)
  done (took 5.995213412 seconds)
done (took 58.563347775 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.776087354 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77454585 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.775359055 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.775466327 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.775090292 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.774607595 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.777399803 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.7757184 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.774574333 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.775467471 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.776400595 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.775510235 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.77504201 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.775887432 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775287958 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774577428 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776138236 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776612835 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.775743368 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776251513 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775965934 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774742419 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.776323607 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.776227818 seconds)
  done (took 44.321596047 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.776650065 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.777111733 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.778325852 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.776320239 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.77676815 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.775706917 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.77697705 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.776971222 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.776911933 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.778177308 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778171246 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.7774357 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.776609678 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.777979946 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778757416 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.777579461 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.778806763 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777772244 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777798238 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.778607757 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.779031111 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777855749 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.777887833 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777483673 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.778479071 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778232194 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.778741767 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.779129956 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777498179 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.776809534 seconds)
  done (took 55.039637692 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.777269045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.779506491 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.778817708 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.777867752 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.779303009 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.77885949 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.779694043 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.777979698 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.779626604 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.778936013 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.777905846 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.778497176 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.781417878 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.778231487 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.779436575 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.778378122 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.779662352 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.779254654 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.7784622 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.777897134 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.77981152 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.779181454 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.779330987 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.784101372 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.778794775 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.779602514 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.780385094 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.779473018 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.779738518 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.782024063 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.780189622 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.778891265 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.778931841 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.780646216 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.783460496 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.779057016 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.77972021 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.779318682 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.781668291 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.779968464 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.784608928 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.780113428 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.781733442 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.780806202 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.780108635 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.782259907 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.781894974 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.781387178 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.780681867 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.780731601 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.780361454 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.784406337 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.78010471 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.781448784 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.780820115 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.782212461 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.782077925 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.782726872 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.781407759 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.781986972 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.782159882 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.781372718 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.783056735 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.782958535 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.781056893 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.783206032 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.780895703 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.781367129 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.784216746 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.781972242 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.782241869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.781832882 seconds)
  done (took 129.910948429 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.782135759 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.783359685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.781721423 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.782509424 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.782055563 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.781981974 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.782556153 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780371493 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781566878 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.782495207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781313424 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.782882403 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784010866 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780670266 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782618757 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.781998357 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782896056 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782344097 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.782912295 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78460439 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7844775 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.782311287 seconds)
  done (took 40.927351833 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783745589 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782361154 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.783625533 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783083701 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783249026 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782914625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.783166337 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784587471 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7825569 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783091422 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78338762 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783905444 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.78348336 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782755763 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78410051 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.784534494 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78415749 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.785556553 seconds)
  done (took 33.819403116 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.78317389 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.784798334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.783664709 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.783534687 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.786107138 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784284744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784554505 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.785033056 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.784189259 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.783846313 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.785087863 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783904993 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.783739267 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783612247 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784416196 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.785766453 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.782849398 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784103304 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784342569 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783533171 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.785330943 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78646678 seconds)
  done (took 40.972827418 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785261373 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.784596158 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.784397778 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.789949677 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.786588929 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786960691 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.786117679 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.78566995 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.786971859 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.785853078 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784179331 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.786236897 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.785468044 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786959095 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.784824531 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787215124 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785895912 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786490942 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787378828 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.787189687 seconds)
  done (took 37.441924674 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.787603542 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786005203 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786474643 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788100602 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78612737 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.787370042 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788414601 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.787402994 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785989683 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.786602276 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.789095332 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.78508415 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785426343 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785609263 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788483247 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78780672 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.789842413 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78706142 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.787457959 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788555279 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.787334627 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.789305089 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788170507 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786810076 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78709627 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788747439 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787502273 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.788993407 seconds)
  done (took 51.768476682 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78719367 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787114528 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.78721817 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.788292892 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.788378182 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.787224284 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.787942527 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.788308552 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.789124239 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791177728 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.789127035 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.787890923 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787869572 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.788580372 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788681612 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.788434285 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788848767 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.790307601 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7893362 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78862547 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.790860285 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788346529 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.789524368 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.788279138 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789447888 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.790314662 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789737194 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.789141474 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787799018 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.787758129 seconds)
  done (took 55.381181357 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.809121872 seconds)
    (2/2) benchmarking "in"...
    done (took 1.809657413 seconds)
  done (took 5.338723195 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.791961914 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788506999 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.789929556 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.792321512 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78889788 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.789560192 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.789012386 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79013655 seconds)
  done (took 16.040563368 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.790456168 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.794065361 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.789830608 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.790770516 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.789208219 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798901472 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.791387003 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.789722444 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.791142712 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.790898371 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.793653049 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.797029196 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.798507401 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.796272405 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.789976915 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.792919984 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79083392 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794671875 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.791367296 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.789814977 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794286196 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792079397 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.793604582 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.790552314 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.792149766 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.792842243 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.801206201 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.79329482 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797179281 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.791967731 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.800549995 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.793684436 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.792094387 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793962569 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.792749077 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.792811924 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.800425209 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.793524397 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.791858958 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.792310484 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.794415689 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794710315 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.797976052 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.798963191 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.797146081 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.792794411 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.793018181 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.794411412 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.79426752 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.795385087 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.802771278 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793858598 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.79256035 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.793286629 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.795461636 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.792358116 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.795471615 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.79503837 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800740201 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.800405069 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.795730354 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.815269116 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.803518176 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.793833819 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.794181026 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803435115 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.816337571 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.797387823 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.794966277 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.793370949 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80004253 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.794665974 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.795694955 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.792642525 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805528235 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.802290931 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.793563173 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.7941583 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.798750801 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.793490958 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796672493 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.794974797 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794940888 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.794015068 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804046637 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.818950801 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.793361515 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.793669513 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.797945788 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.79696312 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.798501346 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.796990568 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.795557421 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.794473977 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.799810226 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.797510259 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.795368993 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.79655462 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.794985458 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.803706333 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.800556794 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.795661322 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80037854 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.80358518 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.793944929 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.795203271 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798590975 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.795945302 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.804570433 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.797562083 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.797741776 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.798150288 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.797707406 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.802129834 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.798367115 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80037474 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.805133093 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.804055465 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.800389985 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.799113938 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.79987517 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.799983811 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805582857 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.821424697 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.798209463 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.801903486 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.802550477 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.811049721 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.802974469 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.798264988 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.800965016 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.797319224 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.798917418 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.799672729 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.797755335 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.798582609 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.797644882 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.798183696 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.799220148 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.800260987 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.800216558 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.799436618 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.802010823 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.798991502 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.804156293 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.798296645 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.800989756 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.805938877 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.802360582 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.799559716 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.800553942 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.801257299 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.802697768 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.800964318 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.800042636 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.800075327 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.800401465 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.799008322 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.801667645 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.799256094 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.800632192 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.801284947 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.802086257 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.800547066 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.799995575 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.800459636 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799555321 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.800324142 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800653964 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.80092299 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.80414395 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801206846 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.803215936 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.800146818 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.79989706 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.80075123 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.799402456 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.800144303 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.804230035 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.811407018 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.804871236 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.809619984 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.799230698 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.808299089 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.801187039 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.801436828 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.800503482 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.799630424 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.800924689 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.799991181 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.799425771 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.805595471 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820995807 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.812945741 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.802746908 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.803470497 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.806672841 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.805147307 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.807314893 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.80235034 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803396566 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.80429541 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.803482561 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.801985692 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.802780975 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.804593288 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.800202636 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.803192993 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.80738128 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.803691878 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.802434384 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.802795014 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.802679645 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.80403886 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.801715121 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.803971612 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.803195301 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.802046402 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.810088937 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80501565 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.803206425 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.803905123 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806616598 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.80341388 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.804243521 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.803817472 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.80665744 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.80195625 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.80487815 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809390327 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.804311536 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.804140766 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.803789118 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.802921434 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.804055858 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.801896561 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.805710623 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.812597325 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.806399703 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.802408952 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.809121224 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.804423021 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.806511407 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.804464391 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805251288 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.804415998 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.805852568 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.804301362 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.802632661 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.81079261 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.802902354 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.806408187 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.804824327 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.806611435 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.805507539 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.807017962 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.805241924 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810029737 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.814030832 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.810226671 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.806410761 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.807601251 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.809098094 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.806832642 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.808856038 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.807214415 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816979763 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.814624175 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.80585993 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.807203601 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.804060762 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.808483368 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.804712899 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.804927289 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813053527 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.806828191 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.80507208 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.809044419 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.805371768 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.806166019 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.811639036 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80740116 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.810409858 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807406966 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.805830952 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.80812732 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.805338964 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.807964813 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.806892523 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.807324901 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.810030148 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.80625481 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.806181493 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.804410486 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.815792929 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.80599798 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.804795889 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812067484 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808166339 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.806404995 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.807169765 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.805822526 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.807509028 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.807964648 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.806583089 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.809712434 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.806476802 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.809952077 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.817172328 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.810154615 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.816176249 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.808423948 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816645566 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.805968505 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.80714261 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.80740325 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.80970318 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.815352821 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.808798425 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.807948668 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.814694196 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.808025593 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.808075632 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.810867437 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.807005325 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.810036572 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.80768289 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.809756719 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.813512689 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.81156164 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.808994209 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.80749579 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.807927981 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.808096756 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.811867509 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.808767556 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.80884245 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.811182115 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.807681963 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.811267237 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.8095226 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.809143314 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.809052743 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.808234302 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.809270912 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815191394 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.808169959 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.81165572 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812594218 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.808959832 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.817866345 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.809316346 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.809121747 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.811028378 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.81142642 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.813717323 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.809003187 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.810083174 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.811100623 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.809792927 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.80997672 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.821772543 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.816821251 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.812216545 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.812090136 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.811664877 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.812825328 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821186926 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.837600186 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810813167 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.813754581 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.813563104 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.8184291 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.815127159 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.816040739 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.814948696 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.819513422 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.812321154 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.809893939 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.814667556 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.822817 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811818181 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.810904083 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.810080293 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.815750431 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.810726825 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.809512906 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.811842332 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811227225 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.810971423 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.821128908 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.810943955 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.81400021 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812248839 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.812140703 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.811129619 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.811830461 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.813328042 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.813173302 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.810573823 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.810204772 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.813009693 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.816323507 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.81123356 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812281329 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.821942449 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811791156 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.810396018 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.812596174 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.812133735 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.814552715 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811750876 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.811225794 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.811842638 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.811568997 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.814088087 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814907455 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.821700107 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813432785 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.815855856 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.813222227 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.817384684 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.813568353 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.813376506 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.812812196 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.823488575 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816854681 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.82523336 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.822602069 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.81350239 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.816182577 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823638413 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.823437549 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.815037353 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.814821191 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.814226607 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.814131239 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.816636191 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.813144408 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814588456 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.814003677 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.820439934 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.812895784 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.81476311 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.814784381 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.81370057 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.816923154 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.817048501 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.820102533 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.81388136 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.815108371 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.813065512 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.814025026 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.817500282 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.81883017 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.8153745 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.81454018 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.816626123 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.817526512 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.820379427 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.814820196 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.815503841 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.817098976 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.815373746 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.816207728 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.814759326 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.816114667 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.817134155 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.817759447 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.823496217 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.814066524 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.816246794 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.818235667 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.820322525 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.815816094 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.81674505 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815726473 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.815484719 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.822419561 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.818219517 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.81466041 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.817436913 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.815659229 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.820278341 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.818579684 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.821083214 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818269598 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.817828038 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.816220237 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821225433 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.826125922 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.820663598 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.821313002 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.824863072 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.820914433 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.819908965 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.816662461 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.817915368 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.818807595 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.818346897 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.821695723 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817161645 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.818783761 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.817360484 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.819350482 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.816879073 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.818691782 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.815925924 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.819161028 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.820898247 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827386314 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.825781591 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.819529704 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.819045175 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.81806247 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.823060917 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.831138426 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.819588807 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.819071722 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.819891023 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.820886767 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.818335599 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.826669028 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.826654011 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.824201714 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.81850921 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.825759962 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.837558219 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.821180219 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.828498226 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.852178823 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.821065503 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.820527228 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820069982 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.820546634 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.820796714 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.824045318 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.819651401 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.826493281 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.819929206 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.819604269 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.829173589 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.821288473 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.821570362 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.820627867 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.822160656 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.825470609 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.821465632 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.828401215 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.820039514 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.820609818 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.820199324 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.822667882 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.818534011 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.819853389 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.81875377 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.820976797 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.819503325 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.821992301 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.829349232 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.820130898 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.820656226 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83197135 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.831712592 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.820362838 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.82033432 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.822070551 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.827473298 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.824835881 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.820872257 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824322667 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.828138349 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.822846397 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.828286501 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.822941718 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.819822604 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82394153 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.821068762 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820927782 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.834393944 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.832551406 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.822917989 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.825087979 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.830358249 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.821124392 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.830786645 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.826975094 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.823120978 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.825051558 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822678383 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.822427619 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.820557297 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.821239758 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.82424791 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.829128798 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.821460237 seconds)
  done (took 1079.969642851 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.820776827 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820157285 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822757085 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.821956488 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822375097 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822657456 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.821193443 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.820770146 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.821699464 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.821638423 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.822229594 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824232712 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.82212361 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.821946673 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822907165 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.823032833 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823306961 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822615778 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.823498584 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821754733 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82272809 seconds)
  done (took 40.019095426 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.823382414 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.821493409 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822432872 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.823976497 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823305824 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.822874384 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.822073041 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822252585 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.823165173 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823050103 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.823087542 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823534128 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.824677702 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.822642631 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823280549 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.823472308 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.824605145 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824723495 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.823270971 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823201791 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.826076703 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.822491488 seconds)
  done (took 41.866818283 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.823399725 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.824061027 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.826322285 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.824969005 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.829985962 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.825463758 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.82479444 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.825807608 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.825809018 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.826926027 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.839272705 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.832335506 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.825909415 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.827793052 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.823858373 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.8311711 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.974091198 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.825806421 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.826409122 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.829756663 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.826661898 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.835483375 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.825466542 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.826838844 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.826620235 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.826355094 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.829303123 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.827888587 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.82787153 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.827453192 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.831849929 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.827942158 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.83608062 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.8367969 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.834271983 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.83334545 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.835247244 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.833515878 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.831617526 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.832941598 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.844653379 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.857252172 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.835005946 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.836226843 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.839984234 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.835014962 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.834753726 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.839047787 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.839717328 seconds)
  done (took 91.625871782 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.835580044 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.833047555 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.833241492 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836878838 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.833048872 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.835879285 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.834368955 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.835539385 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.833247313 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.836569406 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.836275172 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.836362969 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.838347143 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.835138237 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.838453534 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.832829237 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.836237952 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.834192722 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.836009997 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.833226703 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.834301529 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.83324497 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.833826901 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.831455701 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.834730694 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.83282081 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.831673404 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.832731694 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.83511068 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.835917316 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.837350397 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.835688013 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.831840188 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.832468839 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.834617592 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.833760197 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.832712199 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.833569989 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.835673315 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.833987309 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.832297118 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.832642204 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.834399122 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.833802487 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.832040351 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.832878678 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.833862483 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.83971887 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.838296923 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.835402266 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.832799879 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.834907311 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.836609152 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.834489037 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.837342234 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.836159852 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.82977024 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.836055525 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.835479801 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.837124802 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.839247446 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.837945494 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.836877135 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.841939994 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.835375362 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.83816296 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.836624574 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836450773 seconds)
  done (took 126.547748941 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833948236 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.839136992 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832283348 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839671078 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.838081598 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.837125605 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83520031 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.839071707 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.834998057 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.838346437 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83646344 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.834267931 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.835607001 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.836835595 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.832168653 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.830120232 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.837857042 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831941371 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.832342294 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836012273 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.831082151 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.83216306 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.834386054 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.83311746 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836715889 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.831172553 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.832537278 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.839193583 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832635777 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.833676686 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.832991862 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.831162747 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.838201304 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.83162711 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.832592472 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.834187513 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.832804263 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833482563 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.833041813 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.833927506 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.832742377 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.83130041 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834224629 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.832656786 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834075837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.838303208 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.839135459 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.832917147 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.840470274 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.837305381 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.840964274 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84150338 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838581896 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83776399 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.839205194 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.84121142 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835880022 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839760959 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839095933 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.839911156 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842649214 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.838406952 seconds)
  done (took 115.57892031 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839975984 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840850482 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.842240901 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.840870801 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.840606495 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84099819 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.842090311 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.841628083 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840679773 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.840429967 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841588042 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838677692 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841918557 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843158009 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.841217288 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844033642 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842168141 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838710952 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845127875 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.840535429 seconds)
  done (took 38.59701563 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.841271827 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.840046721 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.843564784 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.843255776 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.840531744 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.841959674 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.842058002 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842253139 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844065227 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838578058 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838288728 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839341349 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839722538 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.839583965 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.841505283 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.83864523 seconds)
  done (took 31.227984381 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.839921402 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.840789069 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.842986355 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.842916756 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.838831049 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.839911368 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.840204888 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.841331168 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.84474178 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.84297804 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.84152336 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.840290942 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.842365585 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.841130416 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.841227052 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.84190073 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.840297588 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.841957119 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.842096345 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.844469929 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.843018622 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.840760809 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.84141435 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.843506861 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.843143704 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.842866693 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.842221047 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.842616236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.842840619 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.844706157 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.841095577 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.843723004 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.842507205 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.841974397 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.840996323 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.846908572 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.843429299 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.845284381 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.845388667 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.84581001 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.846117249 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.844476358 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.845557107 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.846646943 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.844823533 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.846245133 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.846737826 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.843774492 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.844927234 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.845536141 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.845590793 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.848437387 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.844873728 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.843612503 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.846882101 seconds)
  done (took 103.152656896 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.847168783 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845368516 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.844557089 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.84509035 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.846364025 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.846263361 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.846064336 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.845664864 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845725453 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.843764502 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847407893 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.847959633 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845395055 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.847104506 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.846857275 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847080515 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.849068884 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.848251598 seconds)
  done (took 35.010349682 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.848807117 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847396579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.846409069 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.846673743 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.84780147 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847860141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845522774 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.846194658 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847072472 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.847134194 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846885669 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.845773506 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848364079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.847020025 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847290693 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84862985 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.846386238 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847893455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.845613945 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.848332304 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.845798386 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846653475 seconds)
  done (took 42.411180512 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.84875776 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.847386043 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.862238687 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.870348823 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.86560248 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.884109823 seconds)
  done (took 12.955497605 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849572022 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846878782 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.846030079 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846074582 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848704917 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848446511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849818194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848916206 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847498506 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850308874 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848260631 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850881854 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846834274 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847225817 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848160875 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848316082 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847792986 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848322905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847421528 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848257488 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846882695 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846378243 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848842969 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84782611 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846577066 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847802591 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849642183 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848384631 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846999685 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847282278 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848008318 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847748286 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846630494 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84831683 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849711914 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847376249 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848091772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849645069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848216487 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848628947 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848414918 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847951981 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849415202 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847654276 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847679163 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848508468 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851750846 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849694177 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847489063 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84962591 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85018882 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849502797 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847764807 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849018354 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850085017 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849149968 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847632748 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850185908 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848943932 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85131045 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849811213 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850262675 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849775083 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850411647 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850111715 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849353051 seconds)
  done (took 123.782815903 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847620066 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848877577 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851515523 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850054556 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851078017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850186071 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85185671 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849121671 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852289175 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850716647 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849854357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852051171 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849158961 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851245757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849842729 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850730745 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849730696 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84970879 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851299129 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852789384 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851009303 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850220615 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852594049 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852634244 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850333383 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851685999 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853198789 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850636932 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850372654 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852245869 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851355931 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852239906 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850444869 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851619912 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852374774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851472806 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851678067 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851281011 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851422579 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850976748 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85332952 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852322362 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855856837 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851111712 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851752333 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854186258 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854741922 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85338556 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853299293 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853683265 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851502866 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854906267 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853706089 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852773045 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852136237 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854932065 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852605432 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853498202 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853840521 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850709937 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852600745 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850270878 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854029136 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852896633 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851909191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854541979 seconds)
  done (took 124.0008988 seconds)
done (took 2519.421092169 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.857773836 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.940970936 seconds)
  done (took 15.580935283 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.009581418 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.962484841 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.849175478 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.897912797 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.847925713 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.873554992 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.863119246 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.844868409 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.846692693 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.846881621 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.848515078 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.036186319 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.906490989 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.8477594 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.849265504 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.941544609 seconds)
  done (took 52.052658695 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.85306864 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.853146617 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.865840705 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.852718686 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.852113222 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.867803507 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.881025399 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.855863266 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.890628535 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.866717341 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.922104121 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.863006559 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.853698275 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.906296044 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.864159664 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.868544723 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.946210969 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.927762098 seconds)
  done (took 35.567080808 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.932010983 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.852351678 seconds)
  done (took 10.57017133 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.873257501 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.866920115 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.859517621 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.844117097 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.85802069 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.865875173 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.85584447 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.849894469 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.879041826 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.869756485 seconds)
  done (took 70.400819526 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.856196132 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.854131536 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.855447541 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.850441469 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.847593959 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.849694625 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.849664138 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.847468967 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.528660966 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.888220813 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.861178032 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.861828433 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.853264414 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.851575288 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.846845856 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.875733929 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.962414653 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.847436245 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.84893664 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.856615962 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.851466569 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.910688466 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.864023892 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.849479253 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.885838342 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.530412874 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.86149604 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.855492893 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.962929592 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.847594699 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.852028493 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.063673473 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.857397559 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.312624672 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.134898441 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.854220877 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.862054222 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.861076257 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.850128377 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.97065476 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.853294184 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.857518686 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.843318047 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.110860705 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.944276564 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.899474463 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.184630278 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.857176832 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.853615623 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.88680625 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.854082952 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.8517318 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.869742152 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.372446494 seconds)
  done (took 131.951083522 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.852916516 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.194788367 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016201854 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.850484223 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.135041846 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051741193 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.850459918 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895715431 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.852743254 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.078514527 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.10199783 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.9565574 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.851742046 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.850865918 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.848538529 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.849896893 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005761601 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.924449564 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852412788 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.848567502 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876843595 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090191018 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.970631464 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.853175452 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.87693197 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.059974097 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.969032821 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953931697 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.635224632 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.851495564 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.91208538 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.849639714 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.850199882 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.848526383 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.006625418 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.943459777 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931882392 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.85180873 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.851063992 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.851872351 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.599496269 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049660166 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.946411864 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.980787466 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.102650532 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054138231 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.628926027 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.85169635 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.580112748 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015607011 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.079315643 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.081887049 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.972405673 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.854846727 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.184078919 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.851850777 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.85049485 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.098943487 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07016304 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.95200583 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853219773 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.85363228 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.851498313 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.138046071 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.854660517 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.944939108 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854337218 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.855515697 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.949485413 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.953260945 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.079518771 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063347342 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.881236013 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.19206492 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.362183687 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098753534 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91679197 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102014405 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.854167189 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.852922512 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93176766 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.699280761 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.104942869 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.133729825 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.096475597 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88660563 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.569751419 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.852175831 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.079191049 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.074515881 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.112924144 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100243168 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.091235994 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.177768375 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.854742258 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.856486055 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.198617384 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977022362 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.855900195 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196655542 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086703762 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.412934614 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.880445006 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.160906477 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985381374 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.856139298 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.482889421 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.855686951 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.084261955 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893896235 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.85869471 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857575905 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.07265352 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.849564862 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856575877 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.494532311 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.912983802 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.858203844 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08549072 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.857313815 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12204007 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.859374318 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08779532 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.43132818 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885670184 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.030583223 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.104434642 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.856372506 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.099162663 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.096676739 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.970998963 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073963282 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.548583753 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859558326 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.142042828 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.858495799 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.857958697 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.025065833 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.856648646 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.998116534 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.857902674 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.151123489 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877769675 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08668894 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858823218 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.114279128 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.887642585 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906453297 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.861091504 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986164224 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860618039 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.681780004 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015761194 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863527607 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.855926905 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.414056626 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.858146165 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.004517871 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.083858658 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876842472 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930864505 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.520321521 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.859030539 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9464504 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.88095912 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.247955633 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.859984423 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.10692053 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.860054532 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.859768423 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.857265667 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.144434363 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.040349598 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.861164627 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.857758346 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.766940042 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.859777015 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.856705419 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.038032646 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.228544575 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860025671 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05869521 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860523618 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985286417 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860675179 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.929358309 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.189458011 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859199805 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.85947914 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.862243886 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.859961206 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861390477 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068562752 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.887002659 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.397359881 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.99661424 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135281963 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.16838734 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.104639814 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.902922651 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.864461731 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.114810237 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.860390077 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.920304039 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.860826245 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881668062 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093290336 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861358988 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068699844 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.127485597 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.894648118 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905645885 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.862470538 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860230667 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.862350524 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.007344919 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946649524 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.862367375 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.863736432 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.974188194 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978000238 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067828606 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.865611519 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.960971054 seconds)
  done (took 899.992662721 seconds)
done (took 1217.90038463 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.860521468 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.858698343 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.86188702 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.862556302 seconds)
  done (took 29.233780223 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.864156937 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.863388432 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.864450418 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.864402019 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.862907386 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.863208456 seconds)
  done (took 12.97436881 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.999656665 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.858945685 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.860810487 seconds)
  done (took 21.513203931 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.942301793 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.264429025 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.003112046 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.299009525 seconds)
  done (took 10.301368123 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.864178025 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.864224673 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.865877095 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.865551114 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.866894719 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.868275367 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.865518615 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.867838988 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.866147138 seconds)
  done (took 18.589605225 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.620059185 seconds)
done (took 99.023524005 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.046526465 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.124908295 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.887459804 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.994479112 seconds)
    (5/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.551187621 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.923094306 seconds)
    (7/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.992924707 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.996202094 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.094239657 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.943968933 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.86396669 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.993946309 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.883373882 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.987234446 seconds)
    (15/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.951383943 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.862918511 seconds)
    (17/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.272212428 seconds)
    (18/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.976877738 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.861085716 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.09029615 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.882577406 seconds)
    (22/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.86546649 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.246175811 seconds)
    (24/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.940202775 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.161348043 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.805955475 seconds)
    (27/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.86722719 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 4.188190234 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.076316465 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.044006357 seconds)
    (31/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.130103782 seconds)
    (32/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.325893527 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.205378877 seconds)
    (34/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.121402139 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.866736328 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.394552625 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.252609399 seconds)
    (38/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.992958091 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.032905169 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.206321632 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.863244356 seconds)
    (42/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.95200488 seconds)
    (43/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.879334766 seconds)
    (44/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.442619345 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.064654524 seconds)
    (46/309) benchmarking ("sort", BigInt, false)...
    done (took 6.86351242 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.97196046 seconds)
    (48/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.009227304 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.767811358 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.281254594 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.187323369 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.107059215 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.283858815 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.966317534 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 2.08375867 seconds)
    (56/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.690889435 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.870188986 seconds)
    (58/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.275446063 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.249769833 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.549941136 seconds)
    (61/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.641986571 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.016061455 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.470358911 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.934685222 seconds)
    (65/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.124238127 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.194337005 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.888399625 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.990417301 seconds)
    (69/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.141294292 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.135987052 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.885391933 seconds)
    (72/309) benchmarking ("sort", Float64, false)...
    done (took 5.650923117 seconds)
    (73/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.158415217 seconds)
    (74/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.218211029 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.954927884 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.123964392 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.606258345 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.08551392 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.867303698 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.196216053 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.995193186 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.88227757 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.184205591 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.077199014 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.86566609 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.985396834 seconds)
    (87/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.866897741 seconds)
    (88/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.945790912 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.26365841 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.676059466 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.001630108 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.866531435 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.879141376 seconds)
    (94/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.968220831 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.869441662 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.965741161 seconds)
    (97/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.146778503 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.005911245 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.109248841 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.542731696 seconds)
    (101/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.905801843 seconds)
    (102/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.196464699 seconds)
    (103/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.365245089 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.873938515 seconds)
    (105/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.802845636 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.98897622 seconds)
    (107/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.955581048 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.976774512 seconds)
    (109/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.012707674 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.889904816 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.86735054 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.99158535 seconds)
    (113/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.886142164 seconds)
    (114/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.891460673 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.331854504 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.892570576 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.86831401 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.872932965 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.006935422 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.053068156 seconds)
    (121/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.761759652 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.113584057 seconds)
    (123/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.12862145 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.160042538 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.867531152 seconds)
    (126/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.967287269 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.890190885 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.89072159 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.499620539 seconds)
    (130/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.23897344 seconds)
    (131/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.947168137 seconds)
    (132/309) benchmarking ("sort", Int8, false)...
    done (took 4.747093965 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.950659395 seconds)
    (134/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.949017519 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.87009774 seconds)
    (136/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.944366618 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.054883882 seconds)
    (138/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.986086386 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.901958928 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.59314182 seconds)
    (141/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.151153715 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.20430499 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.12672142 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.503479039 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.248579787 seconds)
    (146/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.872181915 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.539871468 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.237518965 seconds)
    (149/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.590799116 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.261721181 seconds)
    (151/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.134598832 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.892933727 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.867931954 seconds)
    (154/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 3.514425089 seconds)
    (155/309) benchmarking ("sort", Float32, false)...
    done (took 5.582604164 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.171183921 seconds)
    (157/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.898841318 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.871473678 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.290842575 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.884586213 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.885605117 seconds)
    (162/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.271844596 seconds)
    (163/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.372249021 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.121594144 seconds)
    (165/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.274323338 seconds)
    (166/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.019520749 seconds)
    (167/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.629027903 seconds)
    (168/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.982612913 seconds)
    (169/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.245298265 seconds)
    (170/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.893946076 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.949422494 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.869973182 seconds)
    (173/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.426311949 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.883695292 seconds)
    (175/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.953057001 seconds)
    (176/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.978332514 seconds)
    (177/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.957285405 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.873709535 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.858458008 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.183492975 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.87628697 seconds)
    (182/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.082661369 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.88601465 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.870252319 seconds)
    (185/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.045369887 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.874421686 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.820293124 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.317714221 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.28114668 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.874715741 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.190287299 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.883501567 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.152345988 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.17417793 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.360767172 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.171372554 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.178305601 seconds)
    (198/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.187618848 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.649600649 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.855857569 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.677516554 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.88073223 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.441211319 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.883337376 seconds)
    (205/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.228659683 seconds)
    (206/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.011793088 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.205961557 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.965008498 seconds)
    (209/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.197833054 seconds)
    (210/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.999623985 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.26809749 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.939277743 seconds)
    (213/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.078484809 seconds)
    (214/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.695158094 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.20563185 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.067133367 seconds)
    (217/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.957302235 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.880201303 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.870547598 seconds)
    (220/309) benchmarking ("map", identity, BigInt, true)...
    done (took 4.31091693 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.776364542 seconds)
    (222/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.805358655 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.576978597 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.21314951 seconds)
    (225/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.976788513 seconds)
    (226/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.891109393 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.159353455 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.877010638 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.0432074 seconds)
    (230/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.547898135 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.033701825 seconds)
    (232/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.959972517 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.018879325 seconds)
    (234/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.790138364 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.902704559 seconds)
    (236/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.089427725 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.204727755 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.87540394 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.025100851 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.493523242 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.194383367 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.877454383 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.196616391 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.281291954 seconds)
    (245/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.673323825 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.881705654 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.789321923 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.058818491 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.881910041 seconds)
    (250/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.115334589 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.024294195 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.87899503 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.910598559 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.14660409 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.014520258 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.045141785 seconds)
    (257/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.987233839 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.882548579 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.329422983 seconds)
    (260/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.512147576 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.878431901 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.346282333 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.882512463 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.181458742 seconds)
    (265/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.370636706 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.929304859 seconds)
    (267/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.681786171 seconds)
    (268/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.566255712 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.203945805 seconds)
    (270/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.991077522 seconds)
    (271/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.760098361 seconds)
    (272/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.807338275 seconds)
    (273/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.619015811 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.995522865 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.120172486 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.890639205 seconds)
    (277/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.165345821 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.882337214 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.040801787 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.236283745 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.072173484 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.888215509 seconds)
    (283/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.908982472 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.289910538 seconds)
    (285/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.519974809 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.187869828 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.986139452 seconds)
    (288/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.887460034 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.963147991 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.756435732 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.016454099 seconds)
    (292/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.444470551 seconds)
    (293/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.7855106 seconds)
    (294/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.003974781 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.18894807 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.019111017 seconds)
    (297/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.043409375 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.910722146 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.914790383 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.205676917 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.882880212 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.904126808 seconds)
    (303/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.222319882 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.104038207 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.94647233 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.94156626 seconds)
    (307/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.277135052 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.966655439 seconds)
    (309/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.41300506 seconds)
  done (took 1015.787511349 seconds)
done (took 1017.659846635 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.912922697 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.904922064 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.890061399 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.909401046 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.004921393 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.929239774 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.906449159 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.892768189 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.938776783 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.941137423 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.887530846 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.925592152 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.889666416 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.890707799 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.891015232 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.901102404 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.20034424 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.921482589 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.905939143 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.902033571 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.904531706 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.887460243 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.939614313 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.924250825 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.891673675 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.894506601 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.893517544 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.908906042 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.002055041 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.893516081 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.893597499 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.900470282 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.196342217 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.918864404 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.886040399 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.90943962 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.900048411 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.899535115 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.89244921 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.921892099 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.343394671 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.885944372 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.886597037 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.886116701 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.885288787 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.892289901 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.886951087 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.892410802 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894071276 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894030558 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.331349316 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.904454441 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.885117444 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.880292417 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.89480535 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.882466071 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.88871967 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890730759 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.90141572 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892562214 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.177903541 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.92466186 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.883997046 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.897595534 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.887134924 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.370269351 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.884426456 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.888445518 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34216264 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.893773747 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.368870658 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.899528834 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.87915165 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.893182884 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.91380596 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.189890355 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.911730567 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.876905817 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.883332282 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.877285065 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.889317955 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889201814 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.880012556 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.876589693 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.887361092 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.911327109 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.889671882 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.878577112 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.884709019 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.894485751 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.884252686 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.884544181 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.877895061 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.868701031 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.884303002 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.878377484 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.875755932 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.874921131 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.876113386 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.883228434 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.323965062 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88537049 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.867312339 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.86730289 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.871492233 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.885570927 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.323635402 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.874699782 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.892787958 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.918933084 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.873209492 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.165504966 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.905030446 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.88343168 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.878180633 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.872461828 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.868131051 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.161468004 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.351860927 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.888564726 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.869326981 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.867843326 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.878420439 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.873195602 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.867188223 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.17619124 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.902985463 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881481396 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.994294415 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.883714635 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.902621589 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.868309609 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.875653236 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.912387776 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881018246 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.900795737 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.870530512 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.880561116 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.885689623 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.866675123 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.877290849 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.879209138 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.865853128 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.877914673 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.86467226 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.910539224 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.876977784 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876479317 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.890009663 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.993214924 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.862069577 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.162029357 seconds)
done (took 295.571623206 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.939245609 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.85638611 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.977856353 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.858884652 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.945217657 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.93131843 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.857221789 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.85654216 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.857088723 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.355694524 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.85515119 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.86018927 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.855984134 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.852672628 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.923662724 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.854161627 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.853784554 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.295077844 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.853587253 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.930483535 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.851199552 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.853827949 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.853585908 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.372892582 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.853401524 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.853068445 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.929796786 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.852341861 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.30132374 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.846862747 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.849336909 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.309447127 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.92452999 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.874225591 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.852212635 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.855832403 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.937623966 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.854066296 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.915037318 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.914341766 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.969773574 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.883568081 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.848636482 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.847554161 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.845323471 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.844111734 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.843745898 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.874153974 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.842329289 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.846836252 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.288211737 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.849491189 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.849938009 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.836465527 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.841576241 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.867139002 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.840071251 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.842499209 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.915582768 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.839434707 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.908566375 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.338848007 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.338917447 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.836948772 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.837571312 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.838859191 seconds)
  done (took 183.926271495 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.901098629 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.917006221 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.901332778 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.841075002 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.889379647 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.902379755 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.841366678 seconds)
  done (took 14.95808919 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.845060091 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.838564339 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.886817508 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.885814001 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.836294327 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.016927823 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.85133725 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.837282229 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.859506467 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.83628132 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.471191653 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.884065222 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.840800804 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.830387317 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.845787544 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.885158582 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.832744361 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.828230406 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.945650063 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.978503045 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.834234541 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.838163266 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.856129753 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.842428016 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.826792337 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.829572522 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.830564048 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.836670694 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.831331795 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.829346014 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.831409577 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.880015101 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.826639133 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.829685408 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.828609481 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.831446788 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.825682193 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.828633414 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.828541399 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.829687038 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.825549679 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.823038341 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.826185722 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.822623312 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.817439439 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.84967608 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.81947899 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.821545063 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.821422125 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.819634096 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.848573084 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.819494537 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.821940246 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.823929953 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.860881554 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82686574 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.818682372 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.818691921 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.819309494 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.820206494 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.823516446 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.970477112 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.868512373 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.820417911 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.873103831 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.971941446 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.819647235 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.822523583 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.821967898 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.908514919 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.819041145 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.874427528 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.819110105 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.935567194 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.817698193 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.997773852 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.841627642 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.820838841 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.823541904 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.816733796 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.827493486 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.819002491 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.822591092 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.827454876 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.827751322 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.823156231 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.823373487 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.823197402 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.826832519 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.823630285 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.867595622 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.821154442 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.821539085 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.960776923 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.82216458 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.934592668 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.849969118 seconds)
  done (took 201.617560499 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.830379151 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.827336574 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.821141057 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.84025141 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.823013387 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.819829193 seconds)
  done (took 12.709313409 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.824863525 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.825812403 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.824444058 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.822899087 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.820794352 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.819855952 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.822983444 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.823484245 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.824687484 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.820670048 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.81971735 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.822216737 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.821481289 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.81982481 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.818671574 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.820930406 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.82406761 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.824593937 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.823035198 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825688775 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.027908486 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.819774781 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.821665258 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.824607698 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.826044528 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.821740977 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.834085083 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.821820675 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.822999862 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.833226436 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.828785029 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.823331137 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.825626118 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.830978946 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.826160926 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.827467271 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.826912049 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.823048217 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.826367272 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.824906263 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.823927401 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822575987 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.821631713 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.822946938 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.825955028 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.830477587 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.829374274 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.835655642 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.827086825 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.823239499 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.824267875 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.823087333 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.820826951 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.823763635 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.827383855 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.829923692 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.831631368 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.827102058 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.822875444 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.829560079 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.829112343 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.822176484 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.824509015 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.829932133 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.833631284 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.826435924 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.830133651 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.828784152 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.824379774 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.823193579 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.824002421 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.826840749 seconds)
  done (took 134.366261564 seconds)
done (took 549.3794731 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.724320801 seconds)
  done (took 9.474172537 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.978895539 seconds)
  done (took 8.814461671 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.889561933 seconds)
  done (took 10.722341047 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.913771688 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.951862831 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.90569541 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.909893254 seconds)
  done (took 29.52462243 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.195087761 seconds)
  done (took 9.025200839 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.916683175 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.899002108 seconds)
  done (took 15.7187866 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.960041817 seconds)
  done (took 8.792250712 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.298427758 seconds)
  done (took 9.144315203 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.929303444 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.928299485 seconds)
  done (took 15.713099788 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.905873035 seconds)
  done (took 8.737966988 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.194680422 seconds)
  done (took 10.106397935 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.929464319 seconds)
  done (took 8.808057561 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.952408842 seconds)
  done (took 8.78285499 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.050256286 seconds)
  done (took 8.880916482 seconds)
done (took 163.999600531 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.913477628 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.907229241 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.906130942 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.903934982 seconds)
  done (took 29.460977563 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.942872495 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.940108765 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.951515882 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.941494152 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.93010953 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.929393821 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.936281302 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.938873723 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.930175157 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.938402837 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.939744689 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.940814064 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.937043977 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.949741023 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.949705224 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.935125163 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.93878684 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.937176557 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.928865594 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.951853167 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.938123505 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.938089855 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.901496998 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.904061341 seconds)
  done (took 48.302386684 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.091201693 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.973659379 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.057409795 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.951872498 seconds)
  done (took 9.898980708 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.902132644 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.963411262 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.950996989 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.948948058 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.951733908 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.005870638 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.953672745 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.037211578 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.026938301 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.025076916 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.905732269 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.922431683 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.921322434 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.948116789 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.0069795 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.901711586 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.902161318 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.01568673 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.961182849 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.114613313 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.900322461 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.955352226 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.950219583 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.952401713 seconds)
  done (took 48.950415524 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.899836138 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.906873393 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.908121941 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.900237794 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.903805458 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.901278682 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.908167377 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.901646976 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.922482658 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.90403692 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.903310101 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.903884236 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.90659905 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.901190169 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.902061159 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.914497921 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.914272334 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.901937872 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.903999671 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.912126394 seconds)
  done (took 39.946086695 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.899353778 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.750516678 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.245915317 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.150399655 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.903251889 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.900387637 seconds)
  done (took 31.674936705 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.912746138 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.910367331 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.899024851 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.957880995 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.042471968 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.905201811 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.898264919 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.905375457 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.951157381 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.959882716 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.91650295 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.925469873 seconds)
  done (took 25.012582745 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.897830919 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.893793777 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.899430172 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.900009051 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.904463406 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.896693898 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.889909831 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.889628105 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.896503997 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.903906796 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.896722156 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.900649347 seconds)
  done (took 44.594882498 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.599331119 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958974809 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885005471 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.7632456 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353547549 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.442080322 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.773255968 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.557892347 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.36324769 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.824779634 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098127219 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.89416352 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.970756124 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.88255094 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163177193 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.256337111 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078087612 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.130587195 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.750932172 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.916804913 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.086304888 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107550439 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.179731093 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88147885 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88849782 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.95653476 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.52020635 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.630925004 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925909161 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.42795877 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139929949 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.840074901 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946672741 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.891468382 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.893922622 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88552243 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896080712 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156275609 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.936979487 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022258067 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956288604 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131993996 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888307884 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306355543 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.574340664 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.178103761 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.986961388 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880428947 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874533006 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879019918 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801876985 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965156335 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.879254821 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87642513 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.575379054 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87063635 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946663606 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.870898296 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076473177 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.680655613 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563264717 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.873514852 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87928765 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446016291 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.955645488 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.983153629 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.573526374 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260530522 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.290139346 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.968719835 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.872475775 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877410531 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.221176956 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846593995 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.623654619 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911562215 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015857139 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.89210684 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516208974 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157691119 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.316733322 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.433553639 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798966826 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157736845 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.7843555 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874028124 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086688446 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.704982617 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800301416 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094821711 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916116474 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877553557 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.138183629 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576553097 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.986933525 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.888158256 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314444632 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89685138 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.880493092 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879528466 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099668792 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48462407 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913356329 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997711307 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891223469 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.958268843 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807201791 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.892843357 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.877013444 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.95541375 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.888299571 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877860187 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.908910494 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.741701892 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932778953 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.816377091 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882572008 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968453745 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915143563 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825307544 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130685288 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.191886072 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.54700617 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909816716 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.99970047 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.250639413 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106942242 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885037884 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.090435823 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413738506 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.287128321 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.919801803 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165870922 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.942757165 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169410469 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310669661 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956317238 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.636700609 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.507738046 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.092510367 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887767566 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.883582123 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.878255058 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888019823 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811997662 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.56262651 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.256328964 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.037742981 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091290281 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.43004832 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.876415205 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.883949826 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174352237 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02079348 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.868864848 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.536626076 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.505098975 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.686158422 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.898913286 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.226307014 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278639468 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.849024634 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895155936 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960231812 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893797413 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.891547891 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.251176233 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.246255122 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.879029833 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.887010273 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.829900863 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88527177 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.883575735 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.423492996 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.852966552 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.882161086 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.894383098 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.747128498 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948293186 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873434522 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877420716 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.413455193 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.373971382 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.876212169 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.559775378 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.933468265 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956297511 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145555505 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.257345528 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997897266 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.576634551 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.286054484 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.982486861 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.573174475 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806240454 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877130955 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.811803086 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876770056 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873434007 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879834974 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.059598733 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.149251766 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179916773 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.328278503 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931194276 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077864813 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.627862165 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822045707 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.877657092 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880717641 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.878797663 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876679187 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.389955666 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.172008605 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.962291272 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902534761 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881266752 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00703299 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.883114932 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800898402 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.872476951 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871516282 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.502429087 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.90547944 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.829751345 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.194057133 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.697077328 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998307295 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916825917 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.885618962 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87763739 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.631453685 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.919977842 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799482701 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507855426 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914748456 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.576555768 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477409418 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.459513909 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168029376 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188511214 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.197811524 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.939965281 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.086947643 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.960437565 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930132728 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964096123 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8104864 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.795220504 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.533088867 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204170972 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141467014 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884700258 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093023965 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639045674 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097711805 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904203045 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.776022551 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186490157 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84863326 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88964872 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.43478416 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99149237 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956254814 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877817422 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.824562719 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218961742 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917641599 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.575594273 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888584196 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.227760653 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.513024375 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.949343445 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.261787626 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084966504 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.877618031 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226842368 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296189188 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.922651613 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.880925679 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.869441166 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.08963139 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451297856 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.724415852 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882769326 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.2460421 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173578637 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.807367443 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.872461312 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229564231 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134754488 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86935138 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.236607779 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243091511 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.978742252 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930086279 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098235044 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.757713337 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18212551 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.426619866 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.367494847 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8750275 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797294244 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.572044955 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.075872915 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875577795 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.83694804 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088091354 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107355818 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.554635463 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090417365 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115031366 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.884184209 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144228667 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946099999 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.968859428 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.203067236 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.309281373 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.123510704 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098407183 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416027173 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089688778 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341336867 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.042027739 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.874370299 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073215868 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085774857 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.086297287 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.258265131 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037780101 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.571225076 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.868123929 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.070524473 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158273076 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91869103 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.258840706 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.026871085 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.951832602 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865996568 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92020607 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.862114921 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866912003 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.253551792 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.386869746 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.871758414 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937397023 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.958550943 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.375046555 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.862255731 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.864468148 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126100272 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213444448 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192559236 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840881939 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860652224 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865344701 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987986285 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.786540849 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86419171 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130161484 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.864357035 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469906162 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.021406348 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86794396 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.193647349 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240932962 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.736790681 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942016961 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849722544 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068363082 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158747706 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.235716828 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.955903825 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1042883 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182953287 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.874180251 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.231634541 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076137973 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836616812 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.709109725 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.837218306 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961156907 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.036927701 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108472745 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.344006712 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600233919 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10141853 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.698406255 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839693664 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.551708126 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10601987 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104460243 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887721979 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899705184 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842347268 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.50508704 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.56290863 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966457033 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.749232356 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762622603 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.97866659 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.052578937 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.077163503 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.54519551 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.838295648 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108414842 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142505555 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104451398 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.885267053 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.738408916 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051573079 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83726095 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.842799417 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111612385 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053889786 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088913394 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838537975 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.836414876 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.643031325 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762346584 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.839257161 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891386971 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062915883 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856452545 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.350322341 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.535722458 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116755818 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889428671 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83968194 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.1027449 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.348349096 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.400202443 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844570962 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053151626 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.870816173 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12543034 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.839678794 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.468136845 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148022965 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.837787447 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.562977371 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.08793265 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109338429 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771844999 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844562907 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050834845 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.717303418 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842271123 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.820591195 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474327994 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077696232 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.571335745 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396640494 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.840749295 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.840597419 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.46957895 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87866762 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46516326 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874635422 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856339974 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.358361721 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.538064599 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.125243077 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08413822 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.566794062 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.48628777 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.839547646 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.839931172 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841930591 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.758843282 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.021452354 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.024730899 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123973404 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874730972 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481822219 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879067151 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.208740538 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953522988 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.202426038 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884309541 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.361113008 seconds)
  done (took 1664.799807584 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.867726621 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.868327063 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.882754067 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.858558491 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.856692933 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873246213 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936956525 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.862588844 seconds)
  done (took 56.773681885 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.848947839 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.862536998 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.856098742 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.85046643 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.855999511 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.85198301 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.010410588 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.859542132 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.852620735 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.857108834 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.852922189 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.861839574 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.144386558 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.871216817 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.851049793 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.86978458 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.852512399 seconds)
  done (took 73.790525063 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.853090671 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.108885986 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.908686223 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.849759168 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.80027642 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.865364393 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.822983068 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.857080267 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.854729991 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.090195182 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.147578443 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.890280239 seconds)
  done (took 89.830761182 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.858898891 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.855105243 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.854566563 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.854252207 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.85337729 seconds)
  done (took 11.064004972 seconds)
done (took 2175.998772369 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.084599739 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.911331402 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.951459736 seconds)
  done (took 5.642641249 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.003185876 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.0475859 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.162498383 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.919604356 seconds)
  done (took 9.919746017 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.160464983 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.218435247 seconds)
  done (took 6.160549086 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.223738057 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.862093043 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.242074047 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.856486008 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.856129096 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.856229752 seconds)
  done (took 22.355762144 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.855326631 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.857711932 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.856939333 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.85576138 seconds)
  done (took 9.20854779 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.854487533 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.579638862 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.855222154 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.864917408 seconds)
  done (took 20.934425067 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.052294612 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.973599396 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.998218076 seconds)
  done (took 7.808585203 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.996106867 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.698127401 seconds)
  done (took 6.475550433 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.001556166 seconds)
  done (took 3.782102663 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.882620857 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.127146415 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.361872488 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.385193784 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.506937247 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.665881716 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.180746927 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.104655788 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.269482188 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.301507311 seconds)
  done (took 24.570028128 seconds)
done (took 132.05365328 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.203592152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.866008781 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.053728448 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.21980015 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.082412329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.055102713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.067454449 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.208492688 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.886832517 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.876849781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.213048218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.119965201 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.01691601 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.87599466 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.02485205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.876381619 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.081504032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.211878604 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.892227772 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.115539841 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.075495034 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.863740189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.059909258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.869742626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.080649688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.006772923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.406936589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.87599228 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.042383875 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.417257299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.006840892 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.267176173 seconds)
  done (took 167.705267695 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.85727066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.855869805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.856133316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.856484687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.327293097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.855162128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.85624147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.855976627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.307436905 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.30542862 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.853968738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.317541948 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.856924646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85761537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.857155782 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.854863979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.477623004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.856868094 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.858423495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.856343008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.858664207 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.147896152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.857936973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.161900433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.482768164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.858123937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.856528348 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.859078867 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.859282563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.857299083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.858247776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.856088858 seconds)
  done (took 208.882207395 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.859764138 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.856959774 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.858295082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.858539119 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.858647698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.859662114 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.859901682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.859644222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.682323837 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.67627039 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.857579987 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.861654394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.858000775 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.857838273 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.858970668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.857169024 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.858777106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.859738477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.858371665 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.859344098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.859002243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.535339723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.860314761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.539930656 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.856682098 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.862215047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.859075578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.860015321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.85931917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.860373086 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.862489123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.859008382 seconds)
  done (took 220.280914757 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.100301062 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.862944377 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.864637556 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.797565788 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.865382213 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.866182407 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.848981604 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.110058421 seconds)
  done (took 19.105672775 seconds)
done (took 617.772878549 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.275129211 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.101833011 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.042945021 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.883162652 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.165227204 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.932840576 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.882937147 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.946576045 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.707079371 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.959101218 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.534889837 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.906532722 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.630310969 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.912544404 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.007011427 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.939736763 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.450024742 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.545960784 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.024909541 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.98273913 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.062213885 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.799547083 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.958367871 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.752692761 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.554261649 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.849870334 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.913116843 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.452647173 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.89490554 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.04305631 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.604582836 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.18106383 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.896782806 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.881523505 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.934537729 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.917293779 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.099734851 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.894519346 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.005512099 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.591569956 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.973172032 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.615499909 seconds)
  done (took 102.497085494 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.873693489 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.867762759 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.868961809 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.869542684 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.879851259 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.870579574 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.871085453 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.872701627 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.871509791 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.872273984 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.872101661 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.88082188 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.871302816 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.878637133 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.873286118 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.869029151 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.872117028 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.879503594 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.869794286 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.871274532 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.871853508 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.871842674 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.868738248 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.872272003 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.871398023 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.870259702 seconds)
  done (took 50.489240575 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.86850063 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.037208695 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.112198039 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.88566289 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.869598499 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.871200191 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.888323728 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.871338982 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.872717423 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.870094519 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.966013664 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.871464767 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.886151483 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.112181011 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.884348814 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.866301774 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.868361033 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.868305641 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.04482536 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882428409 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.885487168 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.871204351 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.885125366 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.882504142 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.869940146 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.870710831 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.871658224 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.364585181 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.876731979 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.964138285 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.912198362 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.889335781 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.307327116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.123979693 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.922211796 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.874933571 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.86990485 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.969532587 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.872433261 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.872072532 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.887430254 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.872114562 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.114600175 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.402327228 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.884035731 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.869620695 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.379862353 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.978785669 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.909325051 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.880626443 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.120436968 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.886049428 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.872330129 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.871222389 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.905086205 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.882759806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.867904348 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.236853003 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.880573825 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.886299524 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.8729154 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.872048481 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053050794 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.876962465 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.039528245 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.878891987 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.877325348 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.87110983 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.121483055 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.88708382 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.421926541 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.884050808 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.869535285 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.964468929 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045173609 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.400415559 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.881962927 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.05295396 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.323534944 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.892725282 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.876050029 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.35858416 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.896231165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.877312893 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.871789314 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.874800942 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.873084552 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.915505052 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.887148749 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.319069118 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.412586711 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.250526745 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.895814545 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.880453596 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.874486536 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.237377668 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.87775326 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.870986648 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.108644881 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.426458087 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.884771066 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.879542788 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.39394995 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.886445199 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.892232375 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.877779591 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.127291407 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.88722526 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.916700506 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.868667301 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.87885166 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.87432941 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.893191961 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.878802382 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.873940392 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.386537717 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.982960143 seconds)
  done (took 232.793544603 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.874963167 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.870612044 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.873706635 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.869810913 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.871803422 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.873273651 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.869222196 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.871900395 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.871872165 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.871481339 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.871211037 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.873684327 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.872809072 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.872637801 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.923802656 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.874134576 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.476808936 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.874889718 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.871953506 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.870170575 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.516305537 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.873720488 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.870797666 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.871045259 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.872764828 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.875227104 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.87842285 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.920167313 seconds)
  done (took 167.581739792 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.873340344 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.984846093 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.891506569 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.902719536 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.880033498 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.87582978 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.974314407 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.888147738 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.879563401 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.875322863 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.875645222 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.935910281 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.88411409 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.97313015 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.902401478 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.978241385 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.976192979 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.876686147 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.877079932 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.874299478 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.904481968 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.881308115 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.936623945 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.998861077 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.892548291 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.988863304 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.892729499 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.874547514 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.877893145 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.9876425 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.892891706 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.937301077 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.904064449 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.889987347 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.994029496 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.992346094 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.977680143 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.975842159 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.879332429 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.876495132 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.877482582 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.876301835 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.989419989 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.894959449 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.881376833 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.99020894 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.896379197 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.878510289 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.87725238 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.876700944 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.890244023 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.894122059 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.943546301 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.007978647 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.912198584 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.900203458 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.975611182 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.004055327 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.877427112 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.975930931 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.882155126 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.991841806 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.896477975 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.879383222 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.880606083 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.882833826 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.908120549 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.981679919 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.979028928 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.88269309 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.977054676 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.911581658 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.883217193 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.879789962 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.879144853 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.99169583 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.993623981 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.911327239 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.912333292 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.905453243 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.884080215 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.878959823 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.879696023 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.897262519 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.882301243 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.993548434 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.995969463 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.88234179 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.878904431 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.879512634 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.880151209 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.904098237 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.997903757 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.913651589 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.981429643 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.94164228 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.952402918 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.894250461 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.892673279 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.88370246 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.943240566 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.895930549 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.892596874 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.192901975 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.939353562 seconds)
  done (took 203.528384925 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.27257761 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.922890574 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.935950038 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.208597882 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.241825961 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.813078652 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.925765498 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.92978632 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.960248183 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.148834205 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.008986873 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.946521082 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.914481556 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.900521148 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.924851514 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.96139625 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.934471781 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.278608689 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.130664542 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.365928288 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.920966882 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.189829789 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.241903441 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.498087983 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.978218587 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.36606506 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.524913423 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.086622166 seconds)
  done (took 63.346428935 seconds)
done (took 822.025375528 seconds)
SAVING RESULT...
DONE!
