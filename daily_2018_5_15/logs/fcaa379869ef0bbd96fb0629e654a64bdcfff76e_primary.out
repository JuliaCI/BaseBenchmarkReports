cset: moving following pidspec: 14036
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.868089976 seconds)
loading group "string"... done (took 0.636934774 seconds)
loading group "linalg"... done (took 11.738550327 seconds)
loading group "parallel"... done (took 0.251892422 seconds)
loading group "find"... done (took 1.795447757 seconds)
loading group "tuple"... done (took 2.71748838 seconds)
loading group "dates"... done (took 1.983961378 seconds)
loading group "micro"... done (took 0.267455658 seconds)
loading group "io"... done (took 0.654490604 seconds)
loading group "scalar"... done (took 69.785683071 seconds)
loading group "sparse"... done (took 18.585529971 seconds)
loading group "broadcast"... done (took 1.68496329 seconds)
loading group "union"... done (took 13.282671701 seconds)
loading group "simd"... done (took 4.187008918 seconds)
loading group "random"... done (took 15.779638135 seconds)
loading group "problem"... done (took 2.523237222 seconds)
loading group "array"... done (took 33.530413573 seconds)
loading group "misc"... done (took 1.424281197 seconds)
loading group "sort"... done (took 5.308167561 seconds)
loading group "collection"... done (took 25.911724666 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.699374794 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147431845 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.231952869 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.366230309 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.234549125 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143621975 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152293128 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.273285277 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.236236891 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.222481145 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145734627 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.536263321 seconds)
done (took 6.19683876 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251632451 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.249829694 seconds)
    (2/2) benchmarking "String"...
    done (took 0.174717448 seconds)
  done (took 1.176252708 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.068004442 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169620996 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090196535 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106652453 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.106262774 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089082782 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.10496394 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105578143 seconds)
  done (took 1.528857763 seconds)
done (took 3.787296712 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.552529036 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.881733994 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.585558822 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.165061431 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316735047 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.345199264 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.349877139 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.206977772 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.100528565 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086530539 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.193013992 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.428539687 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.463319419 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.035718023 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.103482965 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092184615 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.129891931 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.809802679 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.072087604 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.12961752 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.569338506 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.193520755 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.109421642 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12690348 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.178506547 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124813778 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173084648 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.098286095 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.659829537 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.123859954 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.202068912 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.074527062 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.174245367 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.236845342 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212992972 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.08632585 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.715667662 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.194358816 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095412978 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092775823 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.714843354 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123249486 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.167777675 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.097980604 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086129883 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193521253 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.110745747 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.086683407 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093872655 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.094772805 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162887672 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.476445587 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.086652473 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.155807103 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.101024947 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.706362927 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092533494 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27845158 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.1314879 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098741508 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.0690429 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.098643546 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158584888 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.087660559 seconds)
  done (took 20.754970351 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165014787 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168800638 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06992468 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154788329 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140031102 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073497217 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09670879 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.087674267 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10624536 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239188528 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135645034 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.166420437 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086521313 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079212805 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.140948662 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244602942 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115899965 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098320136 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096915106 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085292088 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137894984 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.106730591 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087709498 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106806816 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168660838 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198323812 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113354805 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114956913 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093751316 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096416661 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136929717 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158226226 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067927659 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09543735 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187693301 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113145117 seconds)
  done (took 5.311735934 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.221645923 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118945698 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.237047426 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.169518013 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142508322 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165863289 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142059837 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.311483181 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.239574206 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178144159 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.186940306 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12578563 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107186589 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071248349 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0986242 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071937243 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.561691806 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.177682754 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144328799 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.14897629 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098611063 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080033237 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.734077229 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093342719 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.075544681 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097324146 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086436149 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.204362512 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096568393 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.144881561 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096176398 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083230766 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125799831 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19900243 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105805432 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136042343 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093589269 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.075582971 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213288757 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108248591 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091732673 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070040061 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123472635 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125104251 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110360305 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09458029 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103658157 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220880836 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091879969 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121407452 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.070532933 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.203490472 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.116203786 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094324229 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.310792548 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091183636 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101612809 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.074482496 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.295913565 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123022025 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.089117158 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072422251 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094122249 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074595075 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.088708402 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.778578361 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104212768 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.918996773 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07627052 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156365723 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099065969 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09676106 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077823052 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095814514 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110377656 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073096618 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087843034 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073072813 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.087379467 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078315535 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113739625 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.073880683 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093008635 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072296559 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154394058 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.104273925 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092050525 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120185126 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095672278 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072040872 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12320077 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073545825 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092036259 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168384062 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102301924 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112678758 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080741906 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.134103321 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087779113 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206918727 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072416123 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117698467 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.090733502 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104476307 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.105006519 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089603382 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077120665 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.088040198 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.072713108 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154884426 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072804899 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093313499 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.079197333 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10602751 seconds)
  done (took 23.933127744 seconds)
done (took 50.750507103 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.520745878 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.116439674 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096204521 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.115971447 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.116849571 seconds)
  done (took 1.800181138 seconds)
done (took 2.606252756 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.39278225 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199550183 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.113184048 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19157378 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099403333 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.20196124 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188605651 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105193557 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.2170455 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096906979 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194361818 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096759527 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098303502 seconds)
  done (took 3.027835392 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090427554 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120045246 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091248627 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107697825 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071010134 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106357408 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087510766 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122965926 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088175032 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099368435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070700057 seconds)
  done (took 1.859717016 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087306393 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115261077 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079077045 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104091602 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071835278 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10440114 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086019975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11884102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086481049 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101859962 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071223651 seconds)
  done (took 1.835818389 seconds)
done (took 7.522302498 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.191006645 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.664828891 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.150564986 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.200146482 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.378727442 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.255639757 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.628411334 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.167699393 seconds)
  done (took 12.628940263 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.108935083 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09550816 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079659722 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.142512004 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096089046 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077739552 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094518289 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079968954 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094973953 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077547213 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093504881 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07802747 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093892526 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.077541217 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094744099 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07886908 seconds)
  done (took 2.340073292 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11276672 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113098501 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10221221 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106031967 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.082910577 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100154787 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085985635 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099755422 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082231111 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098154871 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088745241 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102556708 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101356325 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082493665 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100852973 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089783615 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097003176 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.085927048 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101925493 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101274062 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088552265 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101089079 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085760796 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103287645 seconds)
  done (took 3.234200881 seconds)
done (took 19.013204424 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170736447 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0773569 seconds)
  done (took 1.063333729 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.148145713 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.150917185 seconds)
  done (took 1.123077039 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106617841 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09239593 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136192313 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112370635 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07801115 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09229632 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115126804 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094589121 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077072441 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094810401 seconds)
  done (took 1.823244813 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082196077 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097879351 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090574491 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.145445061 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106513149 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099078402 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083418108 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097126009 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083559269 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094070028 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086198798 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117549576 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101173325 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10431665 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099261044 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103401842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.09199703 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100396735 seconds)
  done (took 2.608607993 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076873177 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.07938422 seconds)
  done (took 0.979404894 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08643065 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093318179 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083798318 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098235634 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078820669 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094204412 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078462466 seconds)
  done (took 1.438547464 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.564604156 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.264035807 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.40240118 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.114984516 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136623312 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.360476285 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137786648 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.11209585 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113630634 seconds)
  done (took 3.070581894 seconds)
done (took 12.926867978 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.084916933 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.228402299 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.644114816 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116539657 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.077652602 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.149469965 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.307073256 seconds)
done (took 2.441864011 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339201623 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.159514134 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086755887 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074890469 seconds)
  done (took 1.48778283 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071413875 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101033828 seconds)
  done (took 1.010314628 seconds)
done (took 3.336646634 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075212525 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.125935369 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074278429 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093080775 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.074909726 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09298265 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074296862 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.091967001 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074834401 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074054565 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090887946 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075431088 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.089880515 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.075400404 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090876306 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075554284 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091635639 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074377453 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090157589 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075260314 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073530597 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090304571 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07501056 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090357986 seconds)
  done (took 2.882551549 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099115542 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095144927 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082863141 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098515338 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100000071 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083767484 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098842567 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.078804349 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.098830058 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.078403147 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098898911 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083856203 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094770153 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.099727115 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079929914 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101566034 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.083223598 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095294208 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078636366 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.1008249 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098625362 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080007452 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099137426 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082695584 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099865297 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084373325 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095130074 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079130974 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099223196 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099697105 seconds)
  done (took 3.585881357 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084875314 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072035853 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092813322 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08245377 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088554661 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076471399 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.088559004 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073379043 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094188491 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075696076 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095631572 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076239543 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089114206 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078349693 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093902098 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078974706 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.104052144 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073437004 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089599459 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079012827 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.094975657 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073872347 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07571408 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093431124 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076269162 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090069294 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077102858 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092309788 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077674365 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091971769 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077931576 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096274878 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.075859427 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101182649 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07984349 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092725131 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080806926 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089327132 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07873681 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088825772 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073519356 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075715995 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090647078 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083386581 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091925499 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077865305 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089237441 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080268915 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092703497 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080379222 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089380418 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.073689287 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095967364 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.07890126 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09594331 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07274657 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09387517 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073085301 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094625378 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077333276 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072978762 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089280055 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.08046787 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094277002 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11079906 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08474672 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089626777 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078947491 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078444446 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097936458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096268943 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089812386 seconds)
  done (took 6.978734513 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091168543 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1047389 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077914347 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094214494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077674398 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094029351 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084572291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09321523 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078297319 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102204411 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077302965 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09502247 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078082144 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09533005 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077443394 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095620771 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085483234 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094111716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.076857473 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094539155 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077618826 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101354492 seconds)
  done (took 2.792654201 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233644384 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100645929 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145303018 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094528716 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117969481 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11158017 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098015104 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084564234 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098586631 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0889935 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104251744 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082224444 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116842634 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104823369 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088437778 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106240755 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098501537 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090070046 seconds)
  done (took 2.810933272 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096068361 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097071568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103099426 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096202919 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080074447 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096843128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105418285 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096109882 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097176216 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080813553 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10619649 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080390768 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096458606 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079813401 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095440484 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081407085 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096138934 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096354811 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090473152 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104876679 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088370334 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106788738 seconds)
  done (took 2.921130689 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096466434 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096348064 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113466499 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100332012 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079111518 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095738274 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.101965623 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081097358 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10536902 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.079458778 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096399544 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079318096 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.10523143 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080320927 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103146061 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080196615 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096212097 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080156392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096035056 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079785783 seconds)
  done (took 2.695924643 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178621272 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093534229 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111476382 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124907573 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095086076 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110875895 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107308259 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111340099 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111102162 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111138245 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111928747 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110886798 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108086156 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119638865 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112062097 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109013082 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12461274 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124545324 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094743954 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111342778 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127727111 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093665543 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124168184 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111209588 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095697155 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112475197 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.212690729 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120059624 seconds)
  done (took 4.133072176 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076850831 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076976479 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0936596 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077698458 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094055034 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076295579 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093590365 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.076867763 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093414159 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07722427 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092943728 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076800596 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07726743 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093244541 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076771658 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093125399 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077443553 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094085956 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077352999 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093501825 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077751254 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093118705 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.077245906 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077040668 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093468333 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.077337211 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093364285 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077535811 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093442619 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077014747 seconds)
  done (took 3.37960511 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08872844 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103735998 seconds)
  done (took 1.04849988 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.086174525 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114007029 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077281934 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094736946 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088010798 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095091323 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089380354 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104687784 seconds)
  done (took 1.603080707 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.180666217 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.151016717 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084323642 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108308085 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.15038836 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.163519795 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129951122 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100784573 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079498459 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089081777 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.14427712 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072600436 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.099179817 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078858192 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.116458226 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105179147 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077661907 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104793379 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085525499 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096076947 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083325709 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106105319 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085724629 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105999836 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.074968407 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.102815555 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.104387761 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.091181602 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096605783 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.084979127 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.115009971 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079300162 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098281556 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08266535 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094642763 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.150384002 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091179474 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114614854 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082471103 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100495233 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086443355 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095750427 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085677993 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.097516284 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103798055 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083181416 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100967336 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079039884 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091396422 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075668991 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095750782 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077262936 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094421082 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084092868 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.100569139 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091459508 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097110708 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075624136 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.094040212 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077832748 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.099756995 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.078577101 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101606564 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08142904 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096064306 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082485283 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099349522 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079205089 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097856006 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078562219 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.099792295 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125123382 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.08509087 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101006925 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085258197 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096591177 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0794602 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101991247 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081973446 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.102196419 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084235595 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104057284 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080425325 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095004325 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.078511285 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102480362 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079367102 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098403381 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072429728 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110035168 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097290792 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078962221 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.091486516 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08190659 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.113798223 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082386976 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.091779394 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083427063 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094563274 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084355804 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101221931 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076260888 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.102629955 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083966406 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102229305 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082008328 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.143782477 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096386286 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.078315523 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098423031 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084183889 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.093663774 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091795569 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093893115 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075573805 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.094336384 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084211186 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.100608054 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079691765 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100362606 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080702242 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.102514006 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080120922 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094740479 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077536305 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099781091 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087998943 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10234701 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081259152 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096566398 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080048235 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.099984391 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083065955 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.098124053 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101061007 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080671086 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095009693 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080822138 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101495344 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.084075704 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09625554 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082200283 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.101798999 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082078538 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099248131 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.084928074 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.094679421 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076184316 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.101001161 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078761842 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097586258 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089186851 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.096793296 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081036788 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.097174743 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107298815 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080849762 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10250735 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082269325 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101885598 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085753032 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090538393 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08173348 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099314211 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08650442 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098510065 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079119015 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095334957 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087424052 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.093634767 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083715985 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.093093645 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077239662 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10205076 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081530519 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100853747 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079676187 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113367299 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093869861 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103105281 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.082520319 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099987617 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083944151 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099784001 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083783913 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103609954 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085050897 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.102492539 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.098273588 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085328848 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093653933 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081577081 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099396677 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084993698 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.091254098 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080270947 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07328997 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101809177 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.103816869 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083679357 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101962458 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081898278 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100018296 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090550812 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.114180529 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083741532 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.093037283 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083996512 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106889248 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08613286 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104270027 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.086027821 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099631567 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08043089 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10653995 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08130082 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.100895526 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081260418 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.093535327 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077164989 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10323508 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082247126 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097152744 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079268243 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102854621 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087085287 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09899064 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075878266 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103700817 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10634026 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079271223 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102104146 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080150981 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.099483066 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09297196 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094207537 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079040185 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.105002992 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084224011 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095755762 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.081539579 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101081308 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08635944 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099688537 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083004868 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099983918 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086247135 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.098665867 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079584508 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.097375166 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082018574 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.094429674 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.090067206 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.101800649 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.080472752 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.096873221 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08843523 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104002412 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10298874 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08277421 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101066561 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085832238 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104224819 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07776734 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103595697 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07948003 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.093434664 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.080862239 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.092106259 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081527806 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.096359455 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084461959 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.098992756 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082311315 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100256446 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085321628 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.099295565 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085439232 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112511253 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085202986 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.094571331 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099367787 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083423891 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.097370418 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080661458 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097900463 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085691749 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101903555 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087344889 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.094904179 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078792612 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10222438 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.079461809 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10306462 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086390163 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103366226 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.079745623 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101274055 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.081564478 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106884787 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.076892168 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.101572581 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082568854 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101715124 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08104722 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099955992 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.097676851 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.076097524 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.097006619 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.0854228 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094395938 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084985923 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.099601343 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082373969 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.094679764 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080034606 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10443161 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.077868388 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102907456 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080476444 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.094000955 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076929512 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102077462 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084018991 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102488253 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.078943635 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099908061 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087547204 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100588817 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07946252 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106242055 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088261706 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103279685 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090004548 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.09267213 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.080834622 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107692512 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079142254 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101156715 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081002493 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.094897908 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087366539 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104003983 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085215445 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099636867 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.076186398 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097875033 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086749894 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100391375 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.083317635 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09908089 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084363833 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.095961585 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082867414 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102577593 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084771024 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104871463 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083273863 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102022701 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.080538702 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103616346 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079446407 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.095977412 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.075945484 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.099900904 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086820318 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091869021 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084670785 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102727666 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.079916046 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.1002171 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084152158 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.097565053 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080877186 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101874802 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.079526753 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109473273 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079665629 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.098027107 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083988242 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102887651 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.076700204 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.098536014 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078652188 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105344261 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.099525524 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084995372 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101564688 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085480884 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098943034 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085202972 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102563118 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086126315 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.094284561 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086916329 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106615769 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082211303 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.098811537 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082180236 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.094173573 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08198693 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103865423 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08069823 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105875558 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086423048 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.099772781 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081340385 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104091484 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082862443 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104761058 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078564429 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101268212 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.076558116 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10438346 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082515101 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104318363 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.080083776 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09652293 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084623771 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10323806 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084172179 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105486543 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104697712 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.077752023 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094912531 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082073206 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.098456897 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091204171 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098169823 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083145873 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10099562 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082897387 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099455657 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087520103 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.095282294 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080209098 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102852735 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084139525 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096166627 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.077708333 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100618302 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082626747 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101432817 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.083542579 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097205401 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.083153539 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104668463 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082596548 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.094310318 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081144948 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105120206 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.083301827 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.098873553 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077316802 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10995637 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104983469 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088100055 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.096748803 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08519788 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.099214611 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083316314 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105569301 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.081468007 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101872978 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082768153 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102828388 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090910131 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.094382481 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.078721208 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108713087 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084469443 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106094569 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082103388 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.099776087 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087295301 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105940632 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.08088682 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.095767161 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.077511207 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096915558 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.077379486 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099920558 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090642821 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.102336934 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.099780734 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084360056 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083681446 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101464337 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082780841 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096031857 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087491406 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099690577 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.106029943 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078311954 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.075043623 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100823012 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085969723 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098268281 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.079275044 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09850996 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082760152 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.096665112 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.081954849 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107176517 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082868941 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104227333 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082733636 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101504606 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081947775 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110923556 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079885148 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.100461606 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110940062 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087405577 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102423394 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084719215 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10647922 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087818734 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100957216 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08669375 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.100413447 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078706154 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106083961 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087588009 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113856597 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101705634 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.076249029 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083025357 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.097512617 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.077189355 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107237531 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106564986 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087268448 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.102263595 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080484572 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106238801 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08249404 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102218822 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.081650308 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.100055244 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083845991 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099659334 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084610377 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099591774 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087558676 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106085835 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086196914 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10735749 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.076475947 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109905119 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.087846068 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106804038 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079718223 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.097176045 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.078336181 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101772203 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088486254 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104363186 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083504135 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101426759 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084274409 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103433481 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084408121 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100768896 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088105969 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103858133 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081029954 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104633133 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.079189743 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098047468 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080618975 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104551028 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087291602 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.104769688 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091868128 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105258411 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.081696179 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.099659645 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103428766 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083201753 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.103079076 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085313164 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080086622 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.096793629 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086149252 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106673747 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101528165 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08858626 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107352994 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.082844965 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.105241276 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090390941 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102780202 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081110768 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.103887381 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082069739 seconds)
  done (took 56.205361193 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156219399 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09022955 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099624321 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082799926 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128556764 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083729038 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100481793 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083441887 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10251385 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113448168 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081919388 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081057613 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1230343 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13099107 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127878165 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115171865 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082392502 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102657397 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082361437 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102816911 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12300506 seconds)
  done (took 3.101061875 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106300637 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119376265 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118354903 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104117175 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112596769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115796125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098972066 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117511284 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121801525 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113704249 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103447943 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117431749 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114663505 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094018099 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113471568 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113425009 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102276177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110826724 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118669672 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.118761945 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095071473 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118392992 seconds)
  done (took 3.353344979 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091099772 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102367359 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087398628 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.099539189 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085458131 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082026914 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109526022 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.082528208 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109269096 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.100031396 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080017375 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.079839374 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.101779045 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.080934791 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.097851053 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.080491497 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109889941 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084796673 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106591276 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081940287 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.117138004 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100473009 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.08253877 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.097559382 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.096538376 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10595459 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.082152769 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103575422 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.07821759 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103625118 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.082091285 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.101653105 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086678835 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.098799598 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.077858093 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10415745 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085554685 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099737337 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.082464658 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078322003 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.101921456 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085940566 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107251883 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100212099 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.081670668 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.078955784 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104625953 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.080763525 seconds)
  done (took 5.368551425 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11998896 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156865257 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087599952 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146567386 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126211862 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096442907 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106804039 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14541027 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085098274 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.109090469 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127882118 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127117164 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090263356 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112382009 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.086918659 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107815926 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091536135 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106612135 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113860242 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088941165 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11457762 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09033473 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121851087 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124069707 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110200614 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088571538 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106666621 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.09276824 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122985571 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115802704 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092948425 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113004458 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125039009 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091529085 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106867524 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087415707 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124774178 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109476318 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089901487 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104502754 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107310627 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092881655 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110738494 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12525082 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090805218 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110541592 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089800689 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104737293 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12299331 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089751421 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119002586 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126710259 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092065735 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108580847 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092262137 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123253579 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108994893 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086667755 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109590395 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122115554 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.086878109 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110548829 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.106143365 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108032128 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115651567 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.105880538 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111163312 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10971614 seconds)
  done (took 8.404356439 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121005859 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112305737 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125688024 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104989406 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112315704 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11058686 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092968973 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111844164 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092904472 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120323487 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112170482 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.20437012 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.107716868 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099906134 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112989974 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09223204 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112186712 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112193272 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093426601 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112202994 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092931809 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124924106 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112803724 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125399362 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109328849 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108870103 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112104495 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093945777 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12668095 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11257458 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108855028 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113833189 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111519319 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105915358 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128664731 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113079949 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08515668 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112300131 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092983183 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113104211 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10860933 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106201458 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113810175 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10836795 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094341865 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113794379 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106165521 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128776805 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119299093 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121515839 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.093429732 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125791261 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113724536 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093270236 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126862713 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136144586 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127364417 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105895022 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113073579 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127230992 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127199831 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136539361 seconds)
  done (took 7.932121597 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08276325 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081748606 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103589424 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083076474 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102763402 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082969831 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101962397 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083203969 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102319672 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.082477038 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10183793 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08314106 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081902668 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101630824 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082810447 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10222805 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083492396 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101868501 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083160504 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102157608 seconds)
  done (took 2.749511574 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095775521 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128085626 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086561651 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11602285 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086161782 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116157917 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10639367 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0873507 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107514652 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086903805 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118758807 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118883995 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087717743 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116647706 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09783672 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116251063 seconds)
  done (took 2.5938109 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111506835 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128093214 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.17168303 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10993202 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087926534 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.116213636 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086729895 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.108370882 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084810988 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.112658571 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090753265 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110800409 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085768169 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.105929387 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.086730806 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.1112965 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.08473158 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110979383 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086679882 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.188737122 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094256695 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109799938 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088827017 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111399082 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090424263 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.1143785 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094827336 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108872434 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10917345 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.087509395 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.111704898 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097080642 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107392301 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.092604054 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108247292 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08830879 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107114973 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08806137 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111328463 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086400559 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107910135 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088903757 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107345973 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088475293 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104990525 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.086738958 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10494567 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114549227 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08884587 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111077173 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086768046 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11332525 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.092587031 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118336197 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09589093 seconds)
  done (took 6.623821901 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101697283 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108457565 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104320486 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104431288 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087426974 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110360159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087813047 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110635942 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08904941 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104838731 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089739239 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108807249 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087889285 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10907817 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110019258 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088237048 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103730301 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089577516 seconds)
  done (took 2.725489302 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092779318 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107235818 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092567125 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107948749 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087274518 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106784488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085444986 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103879315 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085248926 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105705891 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08676496 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.106468981 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086261344 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106584364 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087955373 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106595398 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.08782341 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104384003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088301422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105134715 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087547106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104233209 seconds)
  done (took 3.062325705 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103600965 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.172182727 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.118419794 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.186877537 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.10732197 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086165899 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119171952 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.087928545 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.128767785 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.106485053 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.086510229 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.10678791 seconds)
  done (took 2.33854117 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114407235 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146450585 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087829679 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108163511 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120321661 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092834963 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115244773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093082704 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12536674 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131055719 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11361281 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104772781 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125552813 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128030676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098847192 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12034051 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114913146 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093004839 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109667622 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138011051 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093583326 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12605231 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114544059 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093582412 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113505271 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1275304 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104374117 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130568178 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114201097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105472049 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1209563 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114321319 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104661416 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130667753 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10826899 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124148434 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094517795 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137110831 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121461653 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107821429 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108571452 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120879183 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105114379 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123664614 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126019785 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093472066 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123759691 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114622908 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092998851 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145006639 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120786473 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128565884 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098953481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125878034 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126049193 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144615986 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131094193 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106791114 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121211911 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130460688 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128680728 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1000973 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127771866 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13086216 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120096922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106568247 seconds)
  done (took 8.603027212 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133822724 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111001895 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114256797 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111038731 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128242036 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114461404 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093213798 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115258004 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093667421 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110374368 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164797567 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115305055 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110283531 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128677785 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115509376 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094021071 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114706757 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128423172 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090026857 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145036067 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114943745 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128684608 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107104445 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128379775 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131413348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121207196 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093993227 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114697711 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093653464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115414227 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123813922 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093941456 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127993835 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110216899 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107434436 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114391329 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115791089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102561116 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11539556 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121512217 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107151967 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13902087 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115898153 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093878175 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130478951 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115120316 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094276456 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110356262 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115890719 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091246836 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130616823 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132396104 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131374694 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107522403 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116477035 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11544157 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09482773 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115204602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093487433 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121216549 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129106093 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093941797 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14674196 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115952514 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116168514 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107828343 seconds)
  done (took 8.535386596 seconds)
done (took 157.262406306 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.134487347 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.196778676 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.151988439 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.146228176 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.102287716 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118348657 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136382866 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.153218245 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081462032 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081009763 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.102692018 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084541087 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168356485 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080899397 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.102287078 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085101207 seconds)
  done (took 2.860083989 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182942605 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343470824 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121234863 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.09087876 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113563121 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105968808 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09033268 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113388691 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086209421 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.116715688 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084900874 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106184984 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.117727419 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085412714 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106152152 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.084459017 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117948187 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.083595675 seconds)
  done (took 3.095895178 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111138018 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148516487 seconds)
  done (took 1.200859118 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121715944 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190269748 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318473302 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154158076 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112457948 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129975685 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156718855 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120946975 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19556162 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105582012 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128716754 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108807526 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.113879989 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116933854 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121194491 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088197967 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139624128 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.098114282 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.118484694 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.111524559 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.110464381 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113704219 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095755925 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.119820052 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18629072 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128281417 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.091482719 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.11533132 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112448354 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097802948 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112723616 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.106307636 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.126690577 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.197911032 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093399896 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.193010917 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099787779 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110057852 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097306754 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.10993972 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11543979 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094364688 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128320086 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.086989993 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113600636 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120335999 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.093382838 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114551723 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093919632 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123503119 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114466202 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.090638829 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.191902461 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101100328 seconds)
  done (took 7.684659579 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.807343807 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151503837 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086738747 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.96510014 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136027932 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125482523 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.805791642 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110097701 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.271293934 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.816943552 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1264491 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121778627 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.249328251 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26423951 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.177650517 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361116298 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.689808906 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124662689 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.116850272 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158859832 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120746644 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138476064 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133187716 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439383258 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.089015821 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109401448 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118754555 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101326472 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171262228 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108648071 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113762172 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19534676 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.275622912 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229601476 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109670026 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086494727 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108642901 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.180506488 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.29331888 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2405513 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181478832 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084239446 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107942452 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096672549 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131418528 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104384942 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175041654 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.1849696 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.207316902 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092890993 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121571476 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121270469 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.095592626 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.173831414 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106339356 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358510676 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363527922 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085016891 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121021787 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123522808 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286952303 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086666546 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.247589508 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138359397 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.234681486 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086414268 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81137693 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.177011418 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108218294 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.115809987 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096959763 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115990781 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094451819 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1764561 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389503698 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122051231 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115178619 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086356282 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.26459727 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086623367 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108060905 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176818418 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110333061 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096971474 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124255932 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120977668 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.182716188 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.261010167 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122306201 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119851912 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094260625 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124338006 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109404087 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.224767666 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.24095188 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.169570804 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228409286 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120280463 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.174767294 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.200714334 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095056508 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.203139894 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097035252 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125939214 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118173392 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235736463 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149840713 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087235614 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115482868 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09900987 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152528025 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112143588 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097942696 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.203289184 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477268047 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.199670999 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083919968 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112347866 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099014143 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173572537 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119332539 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.282984909 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120271737 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.180240931 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118758479 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.084247794 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119375317 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.176287928 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119741489 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09834317 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118887868 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122520728 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.263341776 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.244502389 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100895701 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256527294 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184514495 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117204253 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187205538 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120918735 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185166881 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122042952 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095996181 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110426652 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80643836 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10276295 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120161171 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116459428 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199599047 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087328416 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110526936 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085817209 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105837225 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80242502 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112223502 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084825481 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110774779 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094689202 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119905401 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119395839 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094058581 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195872321 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255252206 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099928302 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119397201 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108782753 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.174861019 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.088172498 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108847429 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087052215 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109919864 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119825127 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094572841 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109970752 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186241816 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170831898 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.242881132 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568366108 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086291531 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109634883 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252225357 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086374899 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330814537 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12188661 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.248186473 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180489169 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.107236025 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360262363 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183008379 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205215537 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.113079928 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.184088803 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105461083 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098185641 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.195564673 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087745489 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119266183 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172998021 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12497726 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101396113 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.182344505 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110485801 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242633781 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105661021 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.182573319 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089528502 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117837266 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330718322 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10897433 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105646276 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1940695 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09468065 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.110300492 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.739363762 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110724712 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100141345 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117609096 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.247390668 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.178017346 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121153641 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121559721 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100891624 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.195213595 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.22900006 seconds)
  done (took 45.595545292 seconds)
done (took 61.380056879 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303609915 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273282689 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.334798319 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204351273 seconds)
  done (took 2.168220143 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238525287 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157016777 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.193966345 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107789099 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.202446278 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.106748757 seconds)
  done (took 1.979331763 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.514853763 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.399529944 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.367060806 seconds)
  done (took 2.254440837 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265962741 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.289276557 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.336595318 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.487302418 seconds)
  done (took 2.462223978 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.259582731 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.136614158 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127276783 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.186166611 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.222368203 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.185026023 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148669902 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.15984007 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133276524 seconds)
  done (took 2.579197606 seconds)
done (took 12.418098266 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.310862691 seconds)
    (2/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.36322228 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.210746654 seconds)
    (4/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129726661 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.276647919 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095769591 seconds)
    (7/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.356347017 seconds)
    (8/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.175613421 seconds)
    (9/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.250271323 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.12801077 seconds)
    (11/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117548668 seconds)
    (12/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.32685517 seconds)
    (13/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115414082 seconds)
    (14/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.268599939 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.341073003 seconds)
    (16/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.344708737 seconds)
    (17/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092116563 seconds)
    (18/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114914427 seconds)
    (19/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.218937989 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.101006075 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.170306272 seconds)
    (22/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117296451 seconds)
    (23/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.225084498 seconds)
    (24/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.226804113 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.127753224 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.229313625 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.207329424 seconds)
    (28/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.233449733 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.112223072 seconds)
    (30/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189684676 seconds)
    (31/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.283713731 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.117162182 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096549751 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117446399 seconds)
    (35/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.220360221 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.196692058 seconds)
    (37/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.198884354 seconds)
    (38/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.077058755 seconds)
    (39/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078145686 seconds)
    (40/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.179677658 seconds)
    (41/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.09416613 seconds)
    (42/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.219980586 seconds)
    (43/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.12576456 seconds)
    (44/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.225349757 seconds)
    (45/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092318638 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.152917877 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.252056031 seconds)
    (48/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.169944119 seconds)
    (49/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.182237978 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118608602 seconds)
    (51/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109330915 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.212257079 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117153442 seconds)
    (54/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.180565202 seconds)
    (55/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.203180383 seconds)
    (56/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.178337707 seconds)
    (57/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.149850095 seconds)
    (58/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.102966668 seconds)
    (59/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.153462141 seconds)
    (60/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115926724 seconds)
    (61/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.200024851 seconds)
    (62/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.077444552 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093867613 seconds)
    (64/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.232312635 seconds)
    (65/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.11122611 seconds)
    (66/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.173182778 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116394534 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.109941907 seconds)
    (69/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.1062711 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206350817 seconds)
    (71/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.076702633 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.127447425 seconds)
    (73/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.180620266 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.170595702 seconds)
    (75/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.101657339 seconds)
    (76/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077044813 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.153863543 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.221500054 seconds)
    (79/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.190457707 seconds)
    (80/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.100439714 seconds)
    (81/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.154980406 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133775783 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115701741 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093949058 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134167461 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.148949647 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087107889 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077615112 seconds)
    (89/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.101108594 seconds)
    (90/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.201511703 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093456298 seconds)
    (92/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.274619084 seconds)
    (93/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.266380594 seconds)
    (94/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.075889826 seconds)
    (95/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076869845 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117584991 seconds)
    (97/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.082862576 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119411868 seconds)
    (99/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.152286501 seconds)
    (100/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.102225702 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085806314 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115971954 seconds)
    (103/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078417217 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.117174508 seconds)
    (105/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.076925787 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117956197 seconds)
    (107/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.176503298 seconds)
    (108/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.100765277 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101816192 seconds)
    (110/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.101399939 seconds)
    (111/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094460609 seconds)
    (112/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.178929522 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.079228338 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.10237034 seconds)
    (115/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097712646 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.226323894 seconds)
    (117/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078424724 seconds)
    (118/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117413163 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118863614 seconds)
    (120/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.082505216 seconds)
    (121/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093311511 seconds)
    (122/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.101956805 seconds)
    (123/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091979727 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115774192 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093836337 seconds)
    (126/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.100792132 seconds)
    (127/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077597383 seconds)
    (128/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.100725741 seconds)
    (129/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078003483 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.21870204 seconds)
    (131/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.07760052 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110725482 seconds)
    (133/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086937397 seconds)
    (134/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.076816546 seconds)
    (135/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.103086839 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.095011988 seconds)
    (137/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115684909 seconds)
    (138/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.180743646 seconds)
    (139/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.088663167 seconds)
    (140/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093222019 seconds)
    (141/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.102677077 seconds)
    (142/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092264731 seconds)
    (143/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.102642515 seconds)
    (144/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.203897211 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11203325 seconds)
    (146/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.135095396 seconds)
    (147/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07851135 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.077562282 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.10280774 seconds)
    (150/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078201227 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.101272242 seconds)
    (152/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093185029 seconds)
    (153/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.115642942 seconds)
    (154/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083215078 seconds)
    (155/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085176821 seconds)
    (156/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114948916 seconds)
    (157/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.077810709 seconds)
    (158/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.177391085 seconds)
    (159/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078297541 seconds)
    (160/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078209371 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118057693 seconds)
    (162/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11084195 seconds)
    (163/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08700262 seconds)
    (164/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083716473 seconds)
    (165/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.102613649 seconds)
    (166/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078450405 seconds)
    (167/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.193816636 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078487342 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111686875 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094156455 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.102960998 seconds)
    (172/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083355391 seconds)
    (173/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113066682 seconds)
    (174/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.090984013 seconds)
    (175/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114827796 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07887164 seconds)
    (177/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.136550975 seconds)
    (178/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.089407106 seconds)
    (179/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078134787 seconds)
    (180/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118936542 seconds)
    (181/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078366188 seconds)
    (182/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.103017963 seconds)
    (183/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078584777 seconds)
    (184/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.0782995 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118458749 seconds)
    (186/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083033945 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.135119491 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094821802 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119507545 seconds)
    (190/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116276652 seconds)
    (191/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.089810972 seconds)
    (192/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07802749 seconds)
  done (took 27.219021656 seconds)
done (took 28.200109805 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230149779 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102341803 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.120940489 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120079774 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184814721 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.099534979 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.13125997 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.098526784 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125801506 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093626392 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.110658323 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.102923857 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120341132 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.186052583 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.122512606 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088683933 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.113348861 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.10183618 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128983971 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.107166013 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.183821854 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112528666 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.101487522 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.112733437 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18629635 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111874197 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.096481841 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121652144 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.102298264 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118894598 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096307403 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.112798632 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105098542 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.128164088 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08621987 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117403422 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086146963 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109970213 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094068692 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117315352 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102655704 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119868097 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.121984659 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089482239 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.119024078 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093019244 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110890643 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.09958017 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110444324 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09566241 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113815461 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.10573834 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116684875 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086380833 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112075052 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089526918 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125662588 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086748064 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12646003 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087583543 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11269505 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087473384 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120051126 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086723443 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117009526 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112602412 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093076565 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120186815 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092974847 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113563128 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088019679 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115408908 seconds)
done (took 9.185220512 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094376618 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.173693883 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.187133014 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.189467474 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.144121904 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.131213066 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.107743597 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.141959246 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.128094356 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.113583068 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.147678667 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140785665 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.198339835 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.100052869 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.130898749 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.120754041 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.102320007 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.122400418 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.194969958 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137482925 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123565486 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126220526 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149314041 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.109086785 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120100784 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.143879252 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.09641364 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119706486 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096376971 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.135910937 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.138351196 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.096425363 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.119569476 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.109552136 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129896104 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125544764 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106216624 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119722432 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094834968 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.118910768 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132118702 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105577821 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118392635 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.130651935 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09591035 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.128817896 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.103277622 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126075385 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098097751 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122098019 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097894017 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147822815 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126409285 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105488793 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127903028 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123882253 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102553496 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.124608317 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.096389923 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.124373831 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094922096 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.120621712 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.09880406 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144793493 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.120907306 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.101779247 seconds)
  done (took 9.221125192 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115232428 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.154739045 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129783822 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10554855 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.126241696 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.085569957 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10904044 seconds)
  done (took 1.855025173 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087055594 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190176264 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188878055 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188078421 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.18499713 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.222229285 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107705008 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.110952277 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.121685626 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123156899 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188986619 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219398221 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117658409 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.130189589 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.192784513 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08541344 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.192304783 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.111196682 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097992846 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.215875149 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102071947 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.141923183 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.102360006 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11336494 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.18431431 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.088216765 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.269391529 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12713275 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093721896 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.121029302 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100149367 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.196780449 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184297906 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127820641 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091472702 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.213204958 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.182361601 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.099267964 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.197657518 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114669541 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.185084566 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.097667453 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125553754 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.125042016 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09841747 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.172412035 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.127162704 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.125436017 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.096747146 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191962701 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.125035325 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187396271 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094771134 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.122904273 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099015238 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125733146 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131168444 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099418498 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.192152701 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126505518 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188093636 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18811409 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185082291 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.187384265 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134100513 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.187012665 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182576234 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.096156798 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12156035 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.366615978 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18904004 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.097792291 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126448163 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.176128752 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101304421 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186879639 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.212241878 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095707446 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12731825 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091611267 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.12197438 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087510515 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.175213663 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12145814 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094733721 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13412347 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101350698 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124817933 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.117342601 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.113575904 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123179952 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.124956579 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.104234695 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.123626117 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104983253 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216580344 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.099305803 seconds)
  done (took 14.935540884 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092048646 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.112368412 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093986326 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114385664 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090551049 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113248652 seconds)
  done (took 1.663073221 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118966325 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125188585 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110333434 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125659864 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.181728348 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.194637864 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.194506829 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122086795 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.117919251 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136126043 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.192693211 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.195790543 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.192460902 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.128512914 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.196965714 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.128033904 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.194874831 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098076571 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.134250092 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122402706 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.106172621 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129178008 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097456679 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.183188106 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127427218 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.127743971 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099861714 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.135395769 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108255665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121674188 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.127858823 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.10206092 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.118545698 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.096923992 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.21883297 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094171151 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121078119 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.10565687 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129465643 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.103247963 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.222258028 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097466217 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.133807362 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.105252246 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123371349 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119334331 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.105491781 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124660351 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.19566679 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.130154628 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.106160436 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12735108 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102018657 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.131207345 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118335563 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098217027 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.130783492 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.196402924 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.103132914 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118888456 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.127498487 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103303413 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121873705 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.105399761 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127484193 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129675679 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094752043 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126246088 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0987885 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125926246 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.130538234 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.101659719 seconds)
  done (took 10.490395422 seconds)
done (took 39.181856626 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.132497384 seconds)
  done (took 2.176562362 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.921281435 seconds)
  done (took 1.967819607 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.659182723 seconds)
  done (took 18.742833143 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.564322396 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.631879808 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.115506889 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16180448 seconds)
  done (took 3.522965178 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.982260953 seconds)
  done (took 2.053291389 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.338573077 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25000117 seconds)
  done (took 1.643664854 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.73237767 seconds)
  done (took 1.798903237 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.551934521 seconds)
  done (took 2.607539819 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.36905561 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190939572 seconds)
  done (took 1.62865571 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.692711998 seconds)
  done (took 1.759881744 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.734690342 seconds)
  done (took 18.802119245 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21084038 seconds)
  done (took 1.290170978 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.327739279 seconds)
  done (took 1.402477032 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.585274881 seconds)
  done (took 4.651099391 seconds)
done (took 65.104761489 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099071479 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128548178 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102956759 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124958072 seconds)
  done (took 1.520038967 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.104915587 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124228429 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104068675 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123162117 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106166286 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.124319776 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098460922 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.128679799 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123904362 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101307569 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125121763 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098733184 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.127941482 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099326875 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121497144 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102642909 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128321675 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100266129 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126382977 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125498957 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.100868158 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126870068 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103029252 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.128214156 seconds)
  done (took 3.826309439 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09832388 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116779162 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095753868 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115681591 seconds)
  done (took 1.503155316 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107977069 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.138000519 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111068492 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131956996 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138233234 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112317398 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124625806 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095029979 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124320013 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.108968654 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.142686201 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138593698 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112535889 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127894841 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.109710284 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11924213 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.101016691 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138345454 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.108063457 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.134788581 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125695918 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.107510068 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.131089731 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10916502 seconds)
  done (took 3.972634275 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17912058 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.139827562 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.148460082 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172939817 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.131044395 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.125111317 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.151768366 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.105447782 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.13284125 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.101069299 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.127729407 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.174774961 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.105204995 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126039004 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.125740452 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.104595596 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.137783739 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131126013 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.144884269 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.131543324 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131665517 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.113191256 seconds)
  done (took 4.024771739 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10659727 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119160826 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089697511 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117224959 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106654059 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121946278 seconds)
  done (took 1.742873949 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098537119 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.111521616 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091684076 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.088767328 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117219366 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086140546 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.111409407 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.087348005 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.113263352 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.086335278 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.114280025 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.085968276 seconds)
  done (took 2.270869751 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.285061275 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117816852 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119794281 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091850492 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125736815 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091920443 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134648112 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091792771 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.25819366 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087727171 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.136237817 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197151761 seconds)
  done (took 2.820554344 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218953543 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100436578 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319276636 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404962174 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168447751 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174985489 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288714166 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173822309 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198569799 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147793649 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205386481 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164266698 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135864506 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1905984 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146390367 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.187697077 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185947887 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21228347 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158557211 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21709856 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172100755 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177910837 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190465287 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158807183 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142504883 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13259956 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127212613 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13291738 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182489236 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180458002 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18450946 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155615393 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121616803 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237441866 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197342167 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188374154 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.322063351 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135598549 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20351137 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.194119107 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286070646 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120977265 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231046234 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137763694 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133550596 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192704068 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162941946 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.191160492 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11173002 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146234416 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193932691 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185001693 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220347321 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116045669 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334040633 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129236762 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156897373 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190037228 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196320594 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225551422 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152743131 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.128025291 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199766819 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191534734 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190025398 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153575724 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178140325 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133116194 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183028209 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205602143 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193353402 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173234286 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.194066865 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134958166 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169121349 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177275066 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161041251 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188986461 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172012017 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099603323 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159453009 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142528767 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106713143 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198288558 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100497659 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240779059 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113621519 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.383308858 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244702357 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13925354 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17002259 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172368485 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174119091 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15445381 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10082178 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15537311 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.169083163 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164689674 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142720493 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165247483 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121957416 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.141734538 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160933856 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101742129 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170604058 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.156481635 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176335598 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171409384 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.109546538 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175570481 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156564483 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.16320941 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180833757 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196408931 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136069648 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110470636 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199091877 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165606779 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141955537 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184691133 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200763173 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173863613 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115982084 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172969181 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201151786 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149198613 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197408705 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141641578 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139229352 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136295585 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170669479 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165532382 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161774752 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132655442 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.13440396 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232340113 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.105250987 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142724241 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183023026 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114720735 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133006596 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147261975 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11494449 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150127086 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154196249 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143604387 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136121862 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170380986 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164388416 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166575376 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141911089 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182084141 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110755836 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170364273 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15577539 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124581878 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193575787 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195033534 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107028303 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235171574 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.178595948 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21075858 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169931544 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13926183 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187268646 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107109397 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125380259 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170622811 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142321772 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17185402 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194926657 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233001473 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181622572 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163593648 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130840922 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202943643 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184241682 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138136907 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.151505543 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168495122 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179070132 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125538116 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.105809889 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134734928 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121182027 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135791723 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137643218 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190764038 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173482161 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201205098 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167266563 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147316574 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194993518 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109471692 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171135341 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.183810393 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146203639 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199344075 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190621261 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178390417 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147255266 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171182725 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099530132 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132643119 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142032158 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1758581 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111875419 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139580208 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12125207 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220562239 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18297198 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129473245 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24376763 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178245718 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204267949 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.126495245 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144900122 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17844684 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166709357 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191673158 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146136851 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.142489334 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186972441 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143297999 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202286876 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168188137 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175890077 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209746761 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166507797 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134245905 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156874213 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146643137 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147705846 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173386624 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152413831 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10950575 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161676728 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.144141281 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134400401 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193041072 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123544401 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216457811 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.137385451 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209093812 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104255351 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149201532 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170697455 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125246296 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.125769804 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178415022 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199064192 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153071005 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167346703 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184035721 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10730021 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.366953897 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201374138 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195656967 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139999649 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122981612 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174676229 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165756694 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174173853 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189168239 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149798307 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190003738 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1435092 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15033621 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13557831 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127222632 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158245832 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162714267 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140959238 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170738701 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122700687 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194637588 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147585234 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171069187 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170273266 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154988875 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.137160214 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149002744 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207385255 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167237363 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186329964 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166769614 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176887129 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210298847 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128981514 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109049622 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.140604337 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189964214 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108620975 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173256547 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194057143 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239418858 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17297722 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1755991 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116915565 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132848287 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165808879 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156230396 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21246881 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143125639 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.118649034 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228260298 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132695655 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135886827 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172656905 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296056495 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152195336 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183551968 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109326141 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288159253 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132231306 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109336272 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167952251 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17966288 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.142251692 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189593923 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145380863 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151033764 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16942175 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142750028 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204485761 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222115173 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173910599 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185656808 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.15034427 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166636914 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173557915 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185877346 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149756539 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12637526 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169097726 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193465479 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194329846 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141428595 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169986194 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168694501 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165136137 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184049945 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112516113 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238065033 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109435299 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169374278 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144581259 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103928576 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168293407 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196468147 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139783454 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184112601 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169821665 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138755433 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107111918 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152537534 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168259479 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142349295 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10894072 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189262799 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.135014012 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173001085 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191226869 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107978226 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16547771 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151987291 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111410113 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149162992 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151023658 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109540906 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177010798 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193457345 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140302954 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185891096 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172716021 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174302032 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168175235 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123790221 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.67252043 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107744094 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21977439 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127131099 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196391026 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157477356 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173089244 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168666252 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1586394 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143576868 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157343109 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237999119 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169989537 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16993976 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108772519 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15175359 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150903286 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141025198 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131220974 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169394836 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14818511 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147298983 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.142088213 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152141369 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153476329 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117143304 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222150716 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128775803 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192231195 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189877577 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142906089 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174122087 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184024344 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139273894 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.174105813 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182865847 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121291971 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156354691 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139225677 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.116658918 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192452086 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.128892377 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171712054 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17138162 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140202932 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171115768 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144301837 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174138509 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121272432 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171459754 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135961625 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163880352 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168408575 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111134123 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135522344 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166771562 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13935495 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164895492 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135642189 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15215345 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189397188 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12996639 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138382865 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292725917 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168890028 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201028863 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135439524 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142237614 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15170674 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165145137 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.139391737 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170553135 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137116756 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109094521 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142173893 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.19213318 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167717823 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165773138 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193544878 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141116836 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240011283 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.124250002 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281432259 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145314106 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165812158 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11302701 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.138690809 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121284988 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140443974 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145487393 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205435247 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188669847 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163002252 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123925851 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13843206 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130376132 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110996333 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170604908 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162959588 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170720894 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12482543 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.128137463 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151403319 seconds)
  done (took 80.711168112 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150583067 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.140884301 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152905615 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203389508 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172790205 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265013004 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211235014 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23347041 seconds)
  done (took 2.690679037 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.103348389 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138173915 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143880336 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126082259 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.126662743 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.420778323 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.139602036 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.10087732 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.185040572 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.13996782 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124631075 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.612764874 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.125845907 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.124887898 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.095806423 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126583084 seconds)
  done (took 3.994196442 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.474597362 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.559865803 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.094412425 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.255148461 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237272584 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.159923136 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.766396807 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193121768 seconds)
  done (took 12.907291474 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13183712 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147122086 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.331006726 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.232396255 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.135759029 seconds)
  done (took 2.149997161 seconds)
done (took 125.198111151 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103410324 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130358824 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105374788 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133642149 seconds)
  done (took 1.632370971 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.161950174 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.116045093 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09132553 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.1137045 seconds)
  done (took 1.65236736 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.502817921 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.118245048 seconds)
  done (took 1.817108536 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.12662695 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.153410653 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.118067328 seconds)
  done (took 1.576891743 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114921859 seconds)
  done (took 1.290479464 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.112619353 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124775265 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.206460635 seconds)
  done (took 1.620335864 seconds)
done (took 10.766953657 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104178655 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.434963074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.389914957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146319003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728623395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380269755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.044736584 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162947613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.213289619 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091062747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14487696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67080911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.070669475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.369358169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021667486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.366038163 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.672539352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118608026 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101319525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1218857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.990613405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118701485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093749227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119811706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.672074715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.445998364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090890491 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.383103388 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119328159 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100581379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.406306368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093202936 seconds)
  done (took 17.153789961 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101937434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193143722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103927049 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121833145 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.10062003 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122182664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.132567596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109317327 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20133032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120785519 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116241649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121219418 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098643265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121267641 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117750349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119675391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.092829554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120522323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102849704 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123518706 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141853376 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092318411 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122147628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093880153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118914787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.126412689 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120463543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.107669496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121290586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100228667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122793436 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092852719 seconds)
  done (took 4.987289534 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142833394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.204832479 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133995064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129614991 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.180904816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123455475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.215291176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164136485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202726506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093023094 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145601675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092393941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16948714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093245421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147293111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12001347 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094873468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1196921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104163965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121707546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115904412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120277832 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095126495 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119994208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093271572 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155599131 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092252753 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136972076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11964319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101251642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124061623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0933631 seconds)
  done (took 5.350407114 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103692432 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.132085384 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118768108 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145981121 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099708151 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132027063 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.104681307 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.1276261 seconds)
  done (took 2.1495541 seconds)
done (took 30.814691202 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.118608062 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.138986373 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.111717434 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.133574192 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.190749822 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.095179098 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.138166568 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096071443 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.133521078 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.113857165 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.119636134 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.098003097 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139405719 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102228632 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.192185465 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.133718619 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.196337876 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.191654152 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.097215519 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.133623943 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.099167885 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.198492735 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.130826393 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097589023 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.201898398 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.1235126 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.187443585 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.102673784 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.100874431 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129720712 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.193095401 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.13112362 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.098578558 seconds)
  done (took 5.640189303 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.19985333 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.100695491 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.126832871 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.098451557 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.098746399 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.126870706 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.205614663 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.095925272 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.126796874 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.096366786 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.126197265 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.198713533 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.10354658 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.122316094 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.101326548 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.128103859 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.204639856 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.100295563 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.122155324 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.088174061 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.121960122 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.097291694 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.211613331 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.092291583 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.126453323 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.097399267 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.130450463 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.102759442 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12904935 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.099450316 seconds)
  done (took 4.975203923 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106128717 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143921173 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121547471 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.197893502 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158587851 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.109462332 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.156049703 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.114023497 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.155747878 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123198041 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.111171423 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157733443 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113357856 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.136069673 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.098320389 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140876383 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.114931761 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.123318636 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10266068 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141535611 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.143680502 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.11046537 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.153946779 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.104230164 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.121599221 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101496095 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133654516 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109452852 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.13501973 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.117421506 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129310905 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098971684 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125953741 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.163760385 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.099589495 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.132415792 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117885738 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135478706 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.107318919 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151720798 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128294872 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.104729743 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150802527 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.153873603 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.125097118 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.106294431 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.137395046 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.109524375 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124303209 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112515739 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.178388259 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.122496198 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.112636691 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125586637 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094447355 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13494132 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094998318 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127281823 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.114727399 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126586678 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.11679091 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.131108204 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106628556 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.126494681 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104860791 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.124936657 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093680474 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.128065133 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123227416 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133643495 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162190553 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094716245 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.133474753 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107002784 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133657004 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106842533 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12249416 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105490953 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134471816 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101953521 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138189006 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09769148 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.127318985 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111295639 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141307965 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.104708166 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.175162016 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.133716215 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.098165699 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.124794418 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112678062 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.126511803 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099759977 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143025898 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094668894 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.127514547 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.105620811 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.131602079 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093346251 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149165746 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100530871 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122319045 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.118544267 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.135620239 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.129414025 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103653071 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.176023696 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092712816 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.132412805 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.106118742 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124118371 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101583472 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127460984 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093789874 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.139005407 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110496683 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130596915 seconds)
  done (took 15.677236661 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.297470652 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.317299636 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208500608 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.318942329 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.110587696 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.213669115 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.312311599 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.284414467 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130227244 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.169388523 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.192392307 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.287047008 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094920012 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.155891711 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.287743594 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.381339629 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.157325757 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172770914 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.170342867 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.14050769 seconds)
  done (took 5.607152684 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.118528294 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.163521398 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.150208095 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.126980465 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.132345965 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.106818222 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.12432032 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.149692134 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.102005108 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.134141466 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.09803752 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.137918493 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102883704 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.136443811 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.113723249 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.170930444 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.133337573 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101526465 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148389442 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100643051 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134741153 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.155590407 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.106752949 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.149241814 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.109593364 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136103974 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093584284 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.130757155 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097459246 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.128456652 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.100750029 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145071945 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129071332 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.101528471 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133486437 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107049162 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.125558901 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097847838 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.129428825 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.099441353 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.139340608 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.104211367 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126974387 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093350944 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.140173767 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09829896 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.105940771 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133737795 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.136959826 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109491971 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.132095153 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108407518 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129266094 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11537457 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.127198623 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.111632926 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.138712314 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.106593181 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.131120497 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093776057 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122169723 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100165473 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.128578988 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107854095 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133981044 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147027775 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.110122397 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124679742 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.100756776 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.127990125 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099587126 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140934935 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149202281 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.099985659 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.098764097 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.136449611 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.098731863 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.116881171 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105614381 seconds)
  done (took 10.806352848 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.122411514 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12840439 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114651444 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.161388481 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104393793 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131847596 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.100437976 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.145203152 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.106065233 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136338045 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.106298632 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140814263 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.149053287 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106003026 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.129162999 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114195097 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134688504 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.136492904 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.144773379 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.157368485 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.108001057 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132089614 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.108519429 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.13681652 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.156983236 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.107169129 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.156689435 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.106286376 seconds)
  done (took 4.80700944 seconds)
done (took 48.692299966 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.301495639 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.494286204 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.279225095 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.277459634 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.295532099 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.298507092 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.280916502 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.28416461 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.219029936 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.271096113 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.279019185 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.275547884 seconds)
done (took 28.77008214 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.38952416 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.786343348 seconds)
    (2/2) benchmarking "String"...
    done (took 1.534431228 seconds)
  done (took 4.52448361 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.285544342 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.273586809 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.504537833 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.272479393 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.292331529 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.292457918 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.271829894 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.290945071 seconds)
  done (took 16.401668341 seconds)
done (took 26.806661754 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.3266849 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.454907804 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.52318767 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.291121989 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.29899237 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.286859212 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.276027788 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.294578338 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.284856188 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.291410204 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.684261393 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.538630699 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.306277571 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.660121356 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.276080807 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.320372009 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.275815391 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.511275113 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.276011953 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.331617123 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.26549473 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.278517332 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.282444571 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.287271166 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.281033909 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.275326189 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.333511866 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.277780996 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.45873334 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.298030392 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.317806977 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.278922232 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.331702436 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.28086446 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.274400581 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.283334378 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.458836007 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.283428723 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.270794883 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.277651808 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.475519758 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.292281032 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.283663298 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.278571857 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.280613964 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.338806865 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.274435248 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.385552827 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.303051904 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.279903197 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.286093211 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.669124859 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.281175296 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.293792272 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.310241321 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.497536467 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.289941841 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.32876749 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.300043481 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.294233403 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.303069929 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.282059701 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.294204186 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.294561527 seconds)
  done (took 148.727228889 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.277362681 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.282551393 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.281993921 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.307612212 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.278714329 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.285330688 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.278934405 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.278063515 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.28529474 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.308777371 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.279349269 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.277800759 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.282593329 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.24835161 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.285034611 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.296512542 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.280187917 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.279681013 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.30594904 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.277610112 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.283951333 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.283640269 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.278757112 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.278987227 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.322740404 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.374100673 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.302522814 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.304114042 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.282903105 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.280086145 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.322521746 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.305451931 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.887476592 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.151688205 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.283824837 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.297592024 seconds)
  done (took 83.127785478 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.27996069 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.281053198 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.281550749 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.313026941 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.280666803 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.847880187 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.851410597 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.001208441 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.637032118 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.584836031 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.280103563 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.518834664 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.280593927 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.372235565 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.294764436 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.280616257 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.296804799 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.305925572 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.28410979 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.282057492 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.842477479 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.292626228 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.384077855 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.477129038 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.299797595 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312460683 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.68565931 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.281399271 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312743681 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.612450337 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332233634 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.282245299 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.62905903 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.493018748 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.392991729 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.282107815 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31309212 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.28138004 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.561582178 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28096154 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.281049318 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.283391667 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.284319056 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935585536 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.282162181 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.852465269 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.286537521 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.215821752 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.280857996 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.282013422 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.216745248 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.905357011 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.297672801 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.284330579 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.285036246 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.282529296 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282244824 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.314671323 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.201605617 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.373750111 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.284707073 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.287059081 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315651361 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.283404221 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.28198 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.293172617 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.301077219 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.410793244 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.343559138 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.395771634 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.84571124 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282457252 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378816835 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402778183 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.282058908 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.282779278 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.28235346 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.282870247 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.394303537 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.284245749 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.701603385 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.284049139 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.458523644 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.302339966 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.598375066 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.380343006 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.286327846 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638611339 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.285518798 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.285390929 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.01740822 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382134041 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.284834941 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.283891706 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.285447879 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.703133619 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.854490734 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.518965673 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.289284401 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.62030701 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.287674016 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.706574424 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.839841866 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.938905755 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.285958543 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.398314094 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.461159576 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.305095478 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.284390005 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.605242181 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.285978905 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.345935027 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.285411752 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.688257819 seconds)
  done (took 375.640971982 seconds)
done (took 608.700069828 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.113053234 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.074823473 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.201409925 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.096655986 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.064510938 seconds)
  done (took 11.765311752 seconds)
done (took 12.980810342 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.476924722 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.479439833 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.347057958 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.48009463 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317442591 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.496016809 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.477926754 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.307528049 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.40189798 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.368550061 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401951797 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339634502 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.320746272 seconds)
  done (took 19.429127712 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.555967668 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.292513079 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.353992174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548633366 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.331210096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554475213 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.586761125 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.293073212 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429756722 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.306415074 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304262904 seconds)
  done (took 18.773503054 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.566826705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.293483881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.361970866 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.53942474 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.334709019 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554548235 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.595005705 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.294324042 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447675337 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.333875368 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.307987302 seconds)
  done (took 18.845069576 seconds)
done (took 58.262128223 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.330633363 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.458309405 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.319715241 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.303524154 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.301692754 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.300294114 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.304301595 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.29844172 seconds)
  done (took 11.833372332 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.300101708 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.301013487 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.29946071 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.299764717 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.300032151 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.30137102 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.300843664 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.301561506 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.301275348 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.300939936 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.301791583 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.301675081 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.300934805 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.301130056 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.300027457 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.300871 seconds)
  done (took 22.030944927 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.302953111 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.300764607 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.30106385 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.301132595 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.303452464 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.301720755 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.303030211 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.30291924 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.300968013 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.300077416 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.301689583 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.302826243 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.302871922 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.30265176 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.30238578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.303582108 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.302027804 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.302512878 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.306719781 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.30129799 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.302387393 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.30196853 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.301161613 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.30209457 seconds)
  done (took 32.473682463 seconds)
done (took 67.554866621 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.29222307 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.306682858 seconds)
  done (took 5.81753691 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.361362059 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.361300441 seconds)
  done (took 3.942749763 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.302219867 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.302393981 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.301934518 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.302227473 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.302553542 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.30193818 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.30240287 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.301334847 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.302725679 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.300735988 seconds)
  done (took 14.239260257 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.30191287 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.303332084 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.304240805 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.30245459 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.303444752 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.303786975 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.303827863 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.302123239 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.303065293 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.302766572 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.302254747 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.304571909 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.303402498 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.304656756 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.303193671 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.301613992 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.303172166 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.302399957 seconds)
  done (took 24.676482868 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.315667148 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.323634375 seconds)
  done (took 3.860639049 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.444776939 seconds)
    (2/7) benchmarking "second"...
    done (took 1.344936435 seconds)
    (3/7) benchmarking "month"...
    done (took 1.420137138 seconds)
    (4/7) benchmarking "year"...
    done (took 1.410707575 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.34725019 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.325593178 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.363009558 seconds)
  done (took 10.876456039 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.305342979 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.508998307 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.619686081 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.867489547 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.306778608 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.308080244 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.11880379 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.309162977 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.31020399 seconds)
  done (took 14.875942289 seconds)
done (took 79.507561227 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.30468925 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.351810592 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.319052031 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.313206472 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.641987835 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.318624343 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.310127641 seconds)
done (took 16.782224148 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.293634067 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.29719868 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.302271391 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.300027264 seconds)
  done (took 10.415188912 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.295819495 seconds)
    (2/2) benchmarking "read"...
    done (took 1.581935651 seconds)
  done (took 5.098180851 seconds)
done (took 16.73583227 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304133225 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.306459481 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.307605529 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.307879415 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.306287165 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.305874336 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.306850246 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.305235044 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.305151717 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.305985015 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.306737752 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.306130421 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.305993327 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.305476874 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306341523 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305810828 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307182302 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30752824 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.306634621 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30539791 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307457279 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306772027 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.306300732 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.305579435 seconds)
  done (took 32.574174985 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.306741072 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.306365257 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.307159107 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.307125846 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.308235419 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.308170901 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.307145344 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.307880353 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.307896338 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.306787915 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307143839 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.307809124 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.305964182 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.306306958 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308101798 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.307323513 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.31073407 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307948217 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30797743 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.310197627 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.308017411 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306640059 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.306295481 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308635018 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.309231595 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306908018 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.309687533 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.3088883 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308190072 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.310351792 seconds)
  done (took 40.459674937 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.311220826 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.308625273 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.309141736 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.309393965 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.308222337 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.309753381 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.308895161 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.310039737 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.310432707 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.30750328 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.308870629 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.310481956 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.309118355 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.309710577 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.309484608 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.308733818 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.310053404 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.310872788 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.310110378 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.310256785 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.310279821 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.31006685 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.309925812 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.310436401 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.309728113 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.310011604 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.308565642 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.310497057 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.310506597 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.309667041 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.312622474 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.310082523 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.309302328 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.310616974 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.310899007 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.310530243 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.312603161 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.312827417 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.31011586 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.312496847 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.31207138 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.311730073 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.31075729 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.310185128 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.311350506 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.311081556 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.311255577 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.310227008 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.311105779 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.312011274 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.31085392 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.312004882 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.312451773 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.31125363 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.312964459 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.311171026 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.310016618 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.311306061 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.312181312 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.311606501 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.313565687 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.312506145 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.312221307 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.313024352 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.312503548 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.312828741 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.312643104 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.31130834 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.312915196 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.315311497 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.312691774 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.311139457 seconds)
  done (took 95.610533624 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.313811012 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312177684 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.31219498 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.313716986 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315454835 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.312707966 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.313241589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314166354 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313166581 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.315425285 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313912505 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315479178 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314549047 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315194205 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313611878 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.315190728 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.314228519 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314190214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.313171847 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.314456843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313332882 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.314172191 seconds)
  done (took 30.137270958 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314470903 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.314713076 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.315083923 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316292422 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.317010758 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.315625157 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314587602 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.316331395 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314503938 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314717624 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315365758 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31715467 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.316860986 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31681919 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31361889 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.318514056 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314983693 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.317674196 seconds)
  done (took 24.9142314 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.316674707 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.316847808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.316213391 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.313658926 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.315617378 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.316445448 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315888601 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.315957741 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.314391188 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.315237681 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.316984337 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315599205 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.317335071 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314836272 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315918953 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.316904788 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.315950422 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316346761 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316455324 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317392994 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.316052715 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31560716 seconds)
  done (took 30.183163056 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317328626 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31712902 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.317398681 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.317349409 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.315624265 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315981539 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.316970302 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.319319168 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.318460694 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.315649518 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31686829 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.317221367 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.319958384 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.317365441 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.316409989 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317047076 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.317539515 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.316775938 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316716894 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.317136162 seconds)
  done (took 27.575022268 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.320131108 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318959521 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.320079711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.320062446 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320309786 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.320001002 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319481711 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.320011778 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31958927 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322335698 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.319621786 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.321273684 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322201489 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.320627373 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.320358112 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32146938 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32136337 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321414087 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.321035408 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.320527919 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.321688499 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.321293852 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320219834 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.320342643 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.323310198 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321466171 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320757315 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.321437753 seconds)
  done (took 38.21614922 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320315806 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.319655788 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.318437426 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.320656734 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.320929986 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.318820899 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.319565248 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.320725966 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319727077 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.3198918 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.320874733 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.320705714 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.320956354 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.321244828 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.319351003 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.320900127 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319091905 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.3210607 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321618976 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31901114 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.320072813 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320890505 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.320973153 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.320431346 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320739697 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.321999735 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322682682 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.32105953 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320971227 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.320669421 seconds)
  done (took 40.849986065 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.373720374 seconds)
    (2/2) benchmarking "in"...
    done (took 1.370696093 seconds)
  done (took 3.979802703 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.320017124 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323559118 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.322633207 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.32242808 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.321948275 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.32316085 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.322091355 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322801501 seconds)
  done (took 11.817123584 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.318714832 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.32345873 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.322495781 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.322306379 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.323265643 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.320489349 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.329001341 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.328757564 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.320203846 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.32191954 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.321438156 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.321422414 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.323077522 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.321966232 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.320790749 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.322949273 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.326519003 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.324272358 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.325973888 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.324276411 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.323733174 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323208348 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327108747 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.3283246 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.319463201 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.330778085 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.328104908 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.32846536 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319865175 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.326073295 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.323203704 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.325984461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.325503992 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.32582939 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.325837032 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.324901621 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.332353256 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344815996 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.328519637 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.330343396 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324232871 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.324269367 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.322345325 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.325283783 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.325404434 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.328150712 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.326043493 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.324697697 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.322589472 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.323446507 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.327458838 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.323588582 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.326183651 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.326832641 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.326533468 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332674333 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.332967491 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.323342735 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.325906555 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.331014404 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.338175019 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.329780835 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.326679034 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.329604782 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325768669 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.326995208 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.333361345 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.331395104 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.328511905 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.327507128 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.332007104 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33899636 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.333809797 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.331923507 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.328214401 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.327974151 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32408532 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.329007171 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333884106 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.3348982 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.331340868 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.330387185 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.326632805 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.327121989 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.324321348 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.329691525 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.328569787 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.328477119 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.326098862 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.333807838 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.335436021 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.326753509 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.322851185 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.324936317 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.325394831 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.331108377 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.325194966 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.326125173 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.329145178 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.32864702 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33119456 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.325105795 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.327915261 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.33246257 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.328615162 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.33323356 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.332931355 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.325177778 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.333642555 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.333373558 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.330268422 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.327193747 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.328638437 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.330125856 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.326141283 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.329299917 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.331519485 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.327487896 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.332999731 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.329778959 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.329608146 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.333249405 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.332938625 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.329649913 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.327333801 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.334398673 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.331874822 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.329275388 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.332866143 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.329933408 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.329310307 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.328438947 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.33355546 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.328360004 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.332456474 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327775983 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.330424213 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.330456656 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.333815529 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.32902489 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.330388565 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.329607942 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.329001497 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.331652743 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.333695427 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.329864458 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.336716174 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.333786261 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.32927312 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.331413361 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.333470673 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.332228794 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.33013384 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.334640478 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.328271852 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.333610161 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.330127551 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.334218384 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.332738284 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.331969012 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332325478 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.32978303 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.331560107 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.332404523 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.333126009 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.330423028 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.33375422 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.330951947 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.333040263 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.328461614 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.334193246 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.327233545 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.330315884 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.335878453 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.334114447 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.334557314 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.330937739 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.335779109 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334625505 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.334028371 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.330897313 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.333068755 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.336879114 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.337401225 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.340238903 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.3331291 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.332586807 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.331806297 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.329754737 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.336753839 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.330528025 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.336865534 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.341140017 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340450778 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.330369791 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.336529102 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.331278905 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.33713267 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.334605581 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.338412377 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.335037151 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.335105517 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.329324216 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.33573227 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.332338203 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.337858898 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.330994527 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.334558186 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.335318073 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.335788894 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.335482655 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.331409827 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332953933 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.33505311 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.337119186 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.335474333 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.331425552 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.336078917 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.331103054 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.333289122 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.336650398 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.336926042 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.339277263 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.339564741 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.33548536 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.337452228 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.335142512 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.333004961 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.337869333 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334895041 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.334699929 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.341852032 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.338406758 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.333970517 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.342694278 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.339444405 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.333023183 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.338170755 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.340004582 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.337275437 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.333333115 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.338870759 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.337913945 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.339243255 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.338792115 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.334572023 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.33898433 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.343128813 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.342598959 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.334532794 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.339824767 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.335181621 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.337352043 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.334138575 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.336829853 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.336345064 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339700674 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.339776124 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.336836872 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.335543576 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.338630944 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.340211488 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.338924817 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.335256455 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.342902781 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.340268093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.338318113 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.337540242 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.336332194 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.339796976 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.334060328 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.339779281 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.335842251 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.347632756 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.348591103 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.342293422 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.341058411 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.338684635 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341570754 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.338892371 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.336410714 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335657883 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.337552125 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.336906602 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.335850564 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.338797802 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335517888 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.340766881 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.339852407 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.342050274 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.341185507 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.339572702 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.337197647 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.343517815 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.342300987 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.339025585 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.336213429 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.340570451 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.338181201 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.340518198 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.338681431 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.336004254 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.345364187 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342039076 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.339387692 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.337035321 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.337605909 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.337187558 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.338292124 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.343735132 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.339669751 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.344394894 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.33840979 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.342462535 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.338876642 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.346204424 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.345896398 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.339400457 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.346384177 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.339053399 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.336870936 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.338877653 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.343031985 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345817899 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.346578322 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.339859744 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.345206699 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.341902756 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.341362437 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.341832648 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.342892359 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34058287 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.343108643 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346565435 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.363366173 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.340306003 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.342387722 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.345579581 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.342784902 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.341905938 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.337136961 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.344702781 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.345630845 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.33739716 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.34066385 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.339304193 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.343044084 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.344595114 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.342428771 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.342833792 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.342316009 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.347908336 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.345283004 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.347308495 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.342160028 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.348149507 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.348380139 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.348477498 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.350675243 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.340487055 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.345880646 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.344759705 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.340610159 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.340642566 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.342167862 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.345429969 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.341936934 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.346294023 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.345567238 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.343564575 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.34433142 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.348513817 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.340661436 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.344870825 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.351581925 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.342540721 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34614199 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.344167123 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.344142003 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.349477952 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.346532795 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.342001957 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.344676903 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.346328085 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.349434081 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.343272081 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.348053078 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343797909 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.348108784 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.344490321 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.345798898 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.346982833 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.344703739 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.34238784 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.349211445 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347844861 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.347400119 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.343676811 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345785472 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.343379178 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.353464246 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.35177144 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.343131906 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.348354534 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.348630452 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.343266313 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.345510711 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.350303326 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.345173503 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.347798681 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.342864251 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.346918862 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.346592122 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.348033044 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.347231586 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.350598273 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.344204465 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.343917738 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350292923 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.348760932 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.349340919 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.34515858 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.349522527 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.344208773 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.344447789 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.3476948 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.344456593 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.349545553 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344740898 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.345997367 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.346350473 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.349443372 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.34725935 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.34763677 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.343173449 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.346909603 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.3536556 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3504783 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.348250059 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.348070576 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.35346427 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.345558993 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.347325197 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.348544001 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.346339523 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.346699827 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.35116418 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.346937795 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.346407022 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.347361902 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.351456364 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.352545438 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.350562251 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.346776052 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356305278 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.371416193 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354034999 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.348044741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.348857399 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.34787425 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.351972661 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.3500699 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.346469935 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.355705131 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.353464024 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353715308 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.350686933 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.349159995 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.349058601 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.355142369 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.351964635 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.348813837 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.353234675 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.347912271 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.35497114 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352722104 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.350506004 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.348004774 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.347568732 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.349409295 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.350887588 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.35157717 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.349573832 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.350802343 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.350055135 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.354184832 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.351914048 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.349467994 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.350632378 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.348150647 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.354177597 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.347253942 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.352811093 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.350938819 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.350579696 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.352552391 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.352474984 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.349593123 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.352356392 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.354893032 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.351320391 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.348492945 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.350848646 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.355565263 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356330096 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.354421365 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.349367331 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.350601058 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.354379057 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.354034393 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.353809345 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.35046679 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362568053 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.378115122 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349128665 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.35069715 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.355071625 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.355021141 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.354551533 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.35481234 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.352151443 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.351765772 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.358613861 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.356905137 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.357754714 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355888553 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.351737369 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.355232487 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.351518836 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.352570747 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.353510003 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.357779001 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.35571389 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.351416959 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.360716359 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357633961 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355608556 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.363553187 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.356912079 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.353130184 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.356602388 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.350843216 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.356239113 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.353919952 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.358234374 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.354393459 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.355157081 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.356591779 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.351181204 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.356628037 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.355873002 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.359054566 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.354656839 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.351766512 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.352134574 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.354884547 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.356327137 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.357088469 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.356487973 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.357899642 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.356025733 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.353201062 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363646127 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.364868366 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.3565453 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.358554523 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.356199009 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.356790756 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.357649773 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356325353 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.358910862 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.357777099 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.358479551 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.355462676 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360036532 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.357722498 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.353594507 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.353211744 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354361115 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.358590538 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.36419273 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.369012317 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.360690173 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.357196249 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360560566 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.35554315 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354575272 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.360792012 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360219827 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.354567359 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.357876238 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360359572 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.3597681 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.357674336 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.355030212 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.363349125 seconds)
  done (took 800.439463899 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.358850511 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358012055 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359509709 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.356978698 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358924814 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357818202 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.35794622 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.35797906 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.357813136 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.357601828 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.358542004 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358968794 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.358431292 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35815346 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359205954 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.35802822 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.359129713 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35878256 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.359691952 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.358971992 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.358181968 seconds)
  done (took 29.795826642 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.357999514 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.35942083 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.358831969 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.358167722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.360041677 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.359237455 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.358269662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359399256 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.359854176 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359666913 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.359014168 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359531882 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.359802586 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.359885618 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360632521 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359430266 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.359459646 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.359614693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.359266887 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.359477669 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359767373 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.36123958 seconds)
  done (took 31.177616448 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.362616863 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.363371705 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.356382811 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.360511564 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.361273958 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.359650086 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.361817031 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.361547447 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.360748409 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.358072961 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.358232487 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.358003101 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.361433869 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.36306815 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.359465304 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.36214695 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.363145572 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.363648889 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.361927554 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.36286937 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.366577015 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.366224184 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.363074987 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.358389468 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.364705639 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.362569365 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.362619331 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.36257992 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.359632959 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.367384019 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.362588146 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.358821462 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.363574786 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.360241979 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.360270772 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.364289509 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.36511514 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.36372165 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.360521781 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.362212003 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.365332408 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.365026241 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.367818429 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.36732845 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.361120359 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.361078856 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.367997045 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.363351044 seconds)
  done (took 66.666177895 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.361519529 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.363791683 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.36216453 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.364684001 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.364244625 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.363921101 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.3634453 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.363032063 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.363916692 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.363900614 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.364143461 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.364167777 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.365973956 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.363787151 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.363783084 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.36439595 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.364226696 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.364856354 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.364663867 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.363773686 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.363330966 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.363470956 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.364091275 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.363355979 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.36275587 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.365512869 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.364629787 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.364253223 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.364452112 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.364625565 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.36511636 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.364875954 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.364620885 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.366139192 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.365935046 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.364576956 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.3655355 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.364874484 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.365699121 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.365434376 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.364726377 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.365208776 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.366559671 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.367297428 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.366078254 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.366139522 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.36698107 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.367358179 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.369110024 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.367119384 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.365164949 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.366717721 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.36642762 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.366495252 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.366449178 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.367554888 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.365141841 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.367786837 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.367515178 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.366052836 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.366104915 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.366015561 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.366613414 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.366615848 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.367625994 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.368062451 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.367458117 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.367187582 seconds)
  done (took 94.115581028 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.369981003 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.368152205 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368307131 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369107952 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.368654619 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.370068813 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.367404656 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.368888776 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.369123273 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.369338618 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.36999655 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.369153366 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.370337537 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.36999702 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.369959504 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.370983398 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.371594772 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.370546245 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.368353814 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.371201546 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.369289189 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.369878533 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.369872345 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.37062949 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.370280006 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.370469397 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.371395067 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.371660167 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370210586 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.370429496 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.37071531 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.371190974 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.371354454 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.371456528 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.371802101 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.370191684 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.371297374 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.371042724 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.369841961 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.370818983 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.370224124 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.371284262 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.370245522 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.370855088 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.371332002 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.371380567 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.372368212 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.372820432 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.369266885 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.372951183 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.372821792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.373356822 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.373005899 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.37236774 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.371817102 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.371502957 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372518532 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.371972026 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.372673302 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.373046698 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.373333512 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.371126722 seconds)
  done (took 86.265691066 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.37193686 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.372055033 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.371994242 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.371109139 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.372010683 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.370923378 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.372331307 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.371089101 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.371650523 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.372211748 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371545658 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.37190841 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372787649 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372443135 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.372039324 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37340033 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372404589 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.371612427 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.373102706 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.372454524 seconds)
  done (took 28.721162941 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.372465573 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.37167221 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.372672142 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.373009266 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.372469498 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.372610405 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.372095695 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371737888 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372859246 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37156832 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.372545351 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.371516766 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372791725 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.371627406 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.37367582 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.373585966 seconds)
  done (took 23.238770568 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.373291042 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.372652462 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.374652064 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.374589683 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.373344553 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.372756612 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.372083342 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.373405942 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.373018562 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.373130283 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.373922325 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.37347329 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.374536002 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.374325866 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.374742884 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.374510835 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.374950862 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.375558294 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.375320665 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.375738437 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.373796331 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.375308665 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.374315079 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.375311985 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.37534004 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.374882414 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.37547764 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.37558255 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.375979572 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.375631475 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.37543326 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.375841092 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.375780343 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.375003992 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.377417739 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.374751598 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.374983809 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.377019563 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.375759312 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.375308674 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.375947566 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.374817631 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.374804905 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.376482834 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.375476507 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.376524312 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.37563938 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.375838805 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.375413196 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.377482135 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.375657759 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.379318861 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.375616287 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.375550062 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.376671937 seconds)
  done (took 76.913455602 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376701637 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.377694611 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.374672194 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.376746723 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.37626503 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.375794203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.376444898 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.378413211 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.378185497 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.376736689 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.377815697 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.377192614 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.37683919 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.375887996 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.376640526 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377176592 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.37652462 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.377636155 seconds)
  done (took 26.067867738 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.378179422 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.378161789 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.37679461 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.37756987 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.3764336 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.377353926 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.378256534 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.378277376 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377055295 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.378071643 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.377727723 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.378055316 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.377210179 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.378571641 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378713321 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378758496 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.378002857 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378935368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.379475728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376920624 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.377974944 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.378596303 seconds)
  done (took 31.601012265 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.374570342 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.373012832 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.375388752 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.384590344 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.378109725 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.372606704 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.372373663 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.372520791 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.385240727 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.393335751 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.390495342 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.380668174 seconds)
  done (took 17.839347882 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379221326 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378865345 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378854469 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379139923 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37798186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378443738 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377683599 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379253067 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377316452 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379857995 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37882715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378825144 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378352364 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37971589 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378325312 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379338109 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379446809 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378106524 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378837554 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377616034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378594717 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378971726 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379578843 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378824533 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379451376 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380825373 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379117276 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379949671 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38022678 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38105596 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378869905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380660363 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379116879 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380667576 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379021177 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379525263 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380289294 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379527604 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379699553 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381791631 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.378693293 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379863531 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380391073 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379315539 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379609918 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379890645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378769794 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379948163 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380687801 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379285385 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379436877 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380091738 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380297658 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379549064 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380727112 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378722057 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379129626 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380165847 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379206953 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380687156 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379426296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380808489 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378691787 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379567019 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380312218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380509655 seconds)
  done (took 92.331441987 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380350286 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.380571631 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379386845 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379004011 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378597234 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378222548 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378160075 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379350239 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380222839 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37966165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380296695 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379023378 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379775765 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379225273 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37873708 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379563773 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381906238 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379318045 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379932535 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379813747 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379362171 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378930392 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379427353 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379110925 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378231672 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379573936 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379908652 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378312961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377961455 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379408156 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377839893 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378797818 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379093489 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380104607 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379459096 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380102489 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379680122 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380582245 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380090347 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381028462 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380871467 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379032519 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380069813 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381606416 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381655316 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381531746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381226181 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379905846 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381354207 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380808343 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381335268 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381796099 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381002279 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381214892 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380744291 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380932989 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380429446 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380442709 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381704442 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381217183 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380979623 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382000422 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381855713 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381955373 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381865721 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382619177 seconds)
  done (took 92.3781438 seconds)
done (took 1875.091985676 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.544990576 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.499264031 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.377473393 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.387616237 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.377145246 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.372894323 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.391189373 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.378591714 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.378514523 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.378882019 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.378403813 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.568360435 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.433523351 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.37807292 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.378418453 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.476598208 seconds)
  done (took 27.990596781 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.408276767 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.387078617 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.499811203 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.398916957 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.407824797 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.574560358 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.442380494 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.383998435 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.557736808 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.401730774 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.385735184 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.406892788 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.384067464 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.385443989 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.402539158 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.575525951 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.636619492 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.386834948 seconds)
  done (took 30.315897931 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.842829552 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.401233687 seconds)
  done (took 5.534698226 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.40394658 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.38362131 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.384754418 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.382100337 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.382957484 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.37504272 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.382234777 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.383534829 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.382517241 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.509913637 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.384566662 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.396915411 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.400679584 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.384556215 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.386016862 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.428624896 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.559220629 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.387820699 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.387522694 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.388565639 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.382379747 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.474048403 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.425542536 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.386964528 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.510882771 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.385029435 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.385480903 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.39180596 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.520176024 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.38846209 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.382755905 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.384448534 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.385975163 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.379084047 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.865760781 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.394144644 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.393825581 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.411083217 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.387232424 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.538564146 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.386528716 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.390956251 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.377898914 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.835892806 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.522744871 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.509060027 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.395308937 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.386419991 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.387613337 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.452004736 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.386703923 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.387992256 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.447247913 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.227586916 seconds)
  done (took 88.235952664 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.439214679 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.378937136 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558922454 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.403648881 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.377798479 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.378761547 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.397144292 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.672580487 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.398148721 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.379107814 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.687693425 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963867231 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.400373755 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.433667221 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.243552965 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.448117276 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.380335896 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.378521799 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.378637273 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.384811804 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936054746 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.37887353 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.377341881 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.535320042 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.418348049 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.901192831 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.390236313 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.378842836 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.394330252 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.380464864 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910937335 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.397417079 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.440669452 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.382101615 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.652492796 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.760993066 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.725696475 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.3812848 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.410930873 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.381187597 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.393669708 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.885200576 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.741670621 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.379763886 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.395234682 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.888511267 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.378349304 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.382577161 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.377221424 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.630422074 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.377264205 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.380231892 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.393501941 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.377676098 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.377878151 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.471876799 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.49007762 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.898243074 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.378802038 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.379011566 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.396896221 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.378408488 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.386551665 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.383587262 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.396745158 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.742057028 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.532321855 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.379241601 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.740540405 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901985504 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.40599451 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967903649 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.39394506 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.401683647 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.594607471 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.378000673 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.393593551 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902670991 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.419600585 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.380221622 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.719850208 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.380237564 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.665722566 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.395679454 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.39565501 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.959649877 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.379015566 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.385883862 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.377554561 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.384755458 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.377385154 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.378818011 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.656226451 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.437196866 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.376654052 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.376956267 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.402694712 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.377877746 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.394942908 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.376323436 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962722058 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.397739876 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.376722737 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.381040647 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.376870432 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.377845659 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.377399199 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.379245673 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.648741071 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.381951003 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.382887339 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.380740457 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.378749945 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.380118892 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.520734222 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.385129854 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.683526716 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.377502361 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.379821176 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.383623563 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.379224022 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.424812589 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.378545434 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.382609552 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.236752024 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.638468059 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.395466716 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.379864044 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.380513014 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.380459415 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.378738458 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.379593023 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.422138536 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.378985863 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.175065835 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.399434918 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.405600291 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.37928192 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.382877247 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.379390733 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.379402873 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.379887596 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.669669344 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.651357841 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53040756 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.38127379 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.37957808 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.138934879 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.414626304 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561633357 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.395559287 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.38128685 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.629223572 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.59826663 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.382021804 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.380517559 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.379349318 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.642740483 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.379377425 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.685130936 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.927189203 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.397579036 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.388045259 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.176182028 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.090072288 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.38194315 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.380443376 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.659824078 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.396177427 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.379868058 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.380780291 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.379744198 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.395657964 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.395833893 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.379695093 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.378361806 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.37899471 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.429808115 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.569991143 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.396276138 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.385824705 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.880891456 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.399834901 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.380636437 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.383850256 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.379877913 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.379815807 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.443757462 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.384490853 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.398770934 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.3800292 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.393131288 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.896363714 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.378808956 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.381288673 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.57121523 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075874611 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.396319937 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.381066016 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.380103157 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.284798289 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903619941 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.418701655 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.675850359 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.384292765 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.418535096 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.379151778 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.406205665 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901107841 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.383129853 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.380470969 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.02524764 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.394764419 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.909049908 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.3793221 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.37977381 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961277297 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.394681993 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.378933133 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.381223335 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.39354062 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.68001148 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.377295346 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.429296704 seconds)
  done (took 509.022401955 seconds)
done (took 662.389646986 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.37852016 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.383608896 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.375031706 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.38255452 seconds)
  done (took 10.812085198 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.396763626 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.386426238 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.394193698 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.386740493 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.392725785 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.385295192 seconds)
  done (took 9.636181682 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.37966938 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.38650618 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.384617274 seconds)
  done (took 8.443715272 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.583270055 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.396042953 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.726237141 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.396988314 seconds)
  done (took 9.397116454 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.393519472 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.393087904 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.392321686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.392050965 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.397101163 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.396276283 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.392538183 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.392934364 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.395771116 seconds)
  done (took 13.84050726 seconds)
done (took 53.422895683 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.512413444 seconds)
    (2/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.419536796 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.442363356 seconds)
    (4/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.422072088 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.475303638 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.414562177 seconds)
    (7/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.372677455 seconds)
    (8/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.398229337 seconds)
    (9/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.405626009 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.410875646 seconds)
    (11/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.41949481 seconds)
    (12/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.373086943 seconds)
    (13/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.420405899 seconds)
    (14/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.517577775 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.374143696 seconds)
    (16/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.159465872 seconds)
    (17/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.491319222 seconds)
    (18/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.420016707 seconds)
    (19/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.482990619 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.43767391 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.479407174 seconds)
    (22/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.542882361 seconds)
    (23/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.376066284 seconds)
    (24/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.468852698 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.536251589 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.491915976 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.471508968 seconds)
    (28/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.37641344 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.477571111 seconds)
    (30/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.373238699 seconds)
    (31/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.071063714 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.516951732 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.396649525 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.422288894 seconds)
    (35/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.087741102 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.592047911 seconds)
    (37/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.480291742 seconds)
    (38/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.517631754 seconds)
    (39/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.375276143 seconds)
    (40/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.487879794 seconds)
    (41/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.040537142 seconds)
    (42/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.032348696 seconds)
    (43/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.426219056 seconds)
    (44/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.397665655 seconds)
    (45/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.426158853 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.524388296 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.171185584 seconds)
    (48/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.484351443 seconds)
    (49/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.531971768 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.417226123 seconds)
    (51/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.546974458 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.294759966 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.485974889 seconds)
    (54/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.433107516 seconds)
    (55/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.527275893 seconds)
    (56/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.555700358 seconds)
    (57/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.402251904 seconds)
    (58/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.073371281 seconds)
    (59/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.490780532 seconds)
    (60/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.423372542 seconds)
    (61/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.532116324 seconds)
    (62/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.561560208 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.476140513 seconds)
    (64/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.450309024 seconds)
    (65/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.379481017 seconds)
    (66/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.377031884 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.45420982 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.462234162 seconds)
    (69/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.450066285 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.402922237 seconds)
    (71/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.441779566 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.452630337 seconds)
    (73/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.376771354 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.531395387 seconds)
    (75/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.376215851 seconds)
    (76/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.400180681 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.402753406 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.079050595 seconds)
    (79/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.551873346 seconds)
    (80/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.129484046 seconds)
    (81/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.446920781 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.469540978 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.484093491 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.38566314 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.496777717 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.592186669 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.493142647 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.402783865 seconds)
    (89/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.517507072 seconds)
    (90/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.187120196 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.519847678 seconds)
    (92/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.590373892 seconds)
    (93/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.423813331 seconds)
    (94/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.427965562 seconds)
    (95/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.255526578 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.4593136 seconds)
    (97/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.536838871 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.404086152 seconds)
    (99/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.482416751 seconds)
    (100/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.378157652 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.53665694 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.417442974 seconds)
    (103/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.377249687 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.498331967 seconds)
    (105/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.545335392 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.603280743 seconds)
    (107/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.37890022 seconds)
    (108/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.423883061 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.427802193 seconds)
    (110/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.143006453 seconds)
    (111/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.450226559 seconds)
    (112/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.557745583 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.166036511 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.393505594 seconds)
    (115/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.415481966 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.555641521 seconds)
    (117/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.378139955 seconds)
    (118/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.42904745 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.470906356 seconds)
    (120/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.536151538 seconds)
    (121/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.502091388 seconds)
    (122/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.379085056 seconds)
    (123/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.449364111 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.423005169 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.485693964 seconds)
    (126/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.379682135 seconds)
    (127/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.096256557 seconds)
    (128/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.143417292 seconds)
    (129/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.377496325 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.537354576 seconds)
    (131/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.035856738 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.45684985 seconds)
    (133/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.484689276 seconds)
    (134/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.440881503 seconds)
    (135/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.396049223 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.605140383 seconds)
    (137/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.419140486 seconds)
    (138/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.542170959 seconds)
    (139/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.380344125 seconds)
    (140/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.434731522 seconds)
    (141/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.072792784 seconds)
    (142/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.416843114 seconds)
    (143/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.638560195 seconds)
    (144/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.14346927 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.537264324 seconds)
    (146/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.468695495 seconds)
    (147/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.379182908 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.2137313 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.53480263 seconds)
    (150/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.481751044 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.167313462 seconds)
    (152/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.437113465 seconds)
    (153/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.287330988 seconds)
    (154/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.465882006 seconds)
    (155/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.384612477 seconds)
    (156/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.429112604 seconds)
    (157/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.300548711 seconds)
    (158/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.547030781 seconds)
    (159/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.125269793 seconds)
    (160/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.382147536 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.529317963 seconds)
    (162/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.44977013 seconds)
    (163/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.481080008 seconds)
    (164/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.539369842 seconds)
    (165/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.381702162 seconds)
    (166/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.388210487 seconds)
    (167/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.397166127 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.38602663 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.474768335 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.533165505 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.560758796 seconds)
    (172/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.648710799 seconds)
    (173/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.394058195 seconds)
    (174/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.44143522 seconds)
    (175/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.417037815 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.123635072 seconds)
    (177/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.498394024 seconds)
    (178/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.380357438 seconds)
    (179/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.474039349 seconds)
    (180/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.444725588 seconds)
    (181/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.563559453 seconds)
    (182/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.382431948 seconds)
    (183/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.39254314 seconds)
    (184/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.491930237 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.500206582 seconds)
    (186/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.58740468 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.638561524 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.388962527 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.49260523 seconds)
    (190/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.436370892 seconds)
    (191/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.402075524 seconds)
    (192/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.044997963 seconds)
  done (took 347.5013288 seconds)
done (took 348.79686663 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.427937898 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.454845122 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.411300106 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.411943762 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412759866 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.416203034 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.415780017 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.412657508 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.40777236 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.408838314 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.416638876 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.403456129 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.425598288 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.405900669 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.446357115 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.413297005 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.413407299 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.403955776 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.410099573 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.411868732 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414394739 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414476943 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.418592454 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.41334133 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.421434003 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.421873181 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.421301112 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.40905403 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.40388886 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.410527219 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.412426089 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.420549251 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.412394547 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.406750709 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.415707539 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.406415514 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.4157286 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.457207364 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.417504585 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.406488978 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.404018561 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.413905868 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.419072694 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.420088475 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.408308263 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.419098682 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.423703533 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.429686606 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.412375054 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.406317453 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432684994 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.410005513 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.405118986 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.405179069 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.405330001 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.430744326 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.406109601 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430769313 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.405352922 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.41658714 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.449634543 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.43099404 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.408601945 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.423509424 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.405175804 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.429017004 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.406697028 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.414812063 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.406024043 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.418872884 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.418708113 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.406095072 seconds)
done (took 111.280546963 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.525081313 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.40281967 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.542086794 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.406658175 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.562411264 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.547692123 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.404771106 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.405557803 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.406032952 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.226393996 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.407383161 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.407380896 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.395395098 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.407128041 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.530651375 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.407051969 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.407678918 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.122421849 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.410211814 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.542096775 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.401224226 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.408673935 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.408496674 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.283497064 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.405246027 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.399251174 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.542756813 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.408751589 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.135854392 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.398840126 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.402157958 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.18375444 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.544365317 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.428209384 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.418486939 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.416788795 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.562949152 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.426242762 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.525540551 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.527346037 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.543650532 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.449162906 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.399277962 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.403257092 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.411235865 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.411158734 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.40803638 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.439503181 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.404645747 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.409615443 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.127726821 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.418625865 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.408643634 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.411868052 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.410321447 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.439492883 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.41168718 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.412123382 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.548248119 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.412474878 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.52809048 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.235615527 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.228970764 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.409797286 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.405328522 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.4114336 seconds)
  done (took 113.50476311 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.474883471 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.485241137 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.513840783 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.407986482 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.458209521 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.513618738 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.408716467 seconds)
  done (took 11.574703609 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.41248721 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412489139 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.457710538 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.456491856 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.412698249 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.564899402 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412568662 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.42014893 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.410991299 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.461440869 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.411944449 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.411477144 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.420126935 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.407392035 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.456377304 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.419565123 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.523780759 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.409407658 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.413948646 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.559713083 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.410638323 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.420665285 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.459722478 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.420265279 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.412771503 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.416561137 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.176938798 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.415324297 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.412452639 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.412692112 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.41295039 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.46289378 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.41416216 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.406932461 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.412942489 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.525843938 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.415083041 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.41328989 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.41438599 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.409462187 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.414869222 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.414429512 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.414021544 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.413831365 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.41363588 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.43337084 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.413754506 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.413705506 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.413428826 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.413229523 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.460966381 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413874531 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.414355637 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.412807765 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.466292764 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.422811334 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.415089043 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.414135989 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.413160394 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.414826082 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.562451259 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.458391434 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.414750346 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.460158496 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414498115 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415876993 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.414770434 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.415818979 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.504270963 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.41320087 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.461239362 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.41590342 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.592631125 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.436055508 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.416722048 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.41532993 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.414821006 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417547565 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.407726428 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.417123323 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.415117627 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.413830128 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.419388451 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.416681498 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.416071119 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.569847868 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.520696108 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.417894426 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.425520962 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.420019135 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.416947911 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.465649381 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.417222114 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.416540585 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465855145 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.527671794 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.466560153 seconds)
  done (took 145.30425984 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.425489862 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.424973789 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.416291698 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.439962222 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.415556489 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.413687068 seconds)
  done (took 9.853162328 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.414744086 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.420016649 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.417982027 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.418263925 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.41989246 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.418896193 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.419164442 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.415240858 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.421509317 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.418222747 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.419083188 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.419958737 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.419468391 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.419534408 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.420963824 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.419303962 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.421181952 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.41812943 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.418896246 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.419699887 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.41446455 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.420165458 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.421038251 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.414828121 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.423278606 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.419944421 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.43551301 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.419106115 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.420259777 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.423789259 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.439901379 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.422559429 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.4184886 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.420838908 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.424801434 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.416827958 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.423036412 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.421853409 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.422416935 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.421616565 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.421726162 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.422412353 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.420363437 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.422435815 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.417502322 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.421600824 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.424486307 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.43902305 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.424089845 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.421726193 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.422842664 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.421616638 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.422918391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.423467817 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.420410663 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.437072798 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.426111152 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.424417266 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.423487429 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.4195239 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.424493159 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.422220029 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.419720281 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.425916487 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.422700769 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.422220681 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.419617734 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.426869062 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.423483051 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.422458987 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.423936992 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.423162517 seconds)
  done (took 104.699108191 seconds)
done (took 386.243473118 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.229623266 seconds)
  done (took 4.551611428 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.498611498 seconds)
  done (took 3.821631521 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.072122182 seconds)
  done (took 22.40258501 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.426032792 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.483930694 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.444565005 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.421650672 seconds)
  done (took 11.098762869 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.686422791 seconds)
  done (took 4.009640024 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.427870011 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.419713582 seconds)
  done (took 6.171572366 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.687301232 seconds)
  done (took 4.01097151 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.677470724 seconds)
  done (took 4.007754084 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.430513579 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.432534607 seconds)
  done (took 6.194153012 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.407899965 seconds)
  done (took 3.73240892 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.088057044 seconds)
  done (took 18.413205657 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.432484506 seconds)
  done (took 3.759331745 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.460694133 seconds)
  done (took 3.783952132 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.905533048 seconds)
  done (took 6.229294069 seconds)
done (took 103.508240542 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.414387707 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.414743546 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.416913413 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.413553692 seconds)
  done (took 10.983577171 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.476983505 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.477653386 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.483797756 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.477479984 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.476797425 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.477238622 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.450358967 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.451822556 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.477109401 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.477861604 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.483864234 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.475358862 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.478341582 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.451427805 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.477319087 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.484435017 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.478328849 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.483767303 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.451859712 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.476845917 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.428484882 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.478040469 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.478177387 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.427347429 seconds)
  done (took 36.605309319 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.937317687 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.494133054 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.57576049 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.475362362 seconds)
  done (took 7.808268979 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.544102 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.556621536 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.555437527 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.599102664 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.637093248 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.556795173 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.455069873 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.44885619 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.433803471 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.555884466 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.560019445 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.496269543 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.647238874 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.426690179 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.706328016 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.426522112 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.427852297 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.557188263 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.604638353 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.631814996 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.428031433 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.549663044 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.556880922 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.496887176 seconds)
  done (took 38.186731584 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.43461733 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.448587279 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.430094547 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.444448509 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.429733868 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.430724509 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.431145679 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.438517847 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.429673913 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.429959585 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.43040716 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.442045864 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.430429273 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.430292996 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.437261422 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.43183578 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.432652916 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.4368161 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.439856671 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.430160242 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.431089047 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.436096942 seconds)
  done (took 32.884752424 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.419087829 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.419294369 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.772989024 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.675016118 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.419045292 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.424192099 seconds)
  done (took 14.457686653 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.493401479 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.629725243 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.426605397 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.764417318 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.846786461 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.428140424 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.42607775 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.664318093 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.965962848 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.944406075 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.487867951 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.494464675 seconds)
  done (took 20.900506703 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.419829056 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.424738274 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.437432774 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.441740058 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.482661793 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.437507056 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.435468035 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.418508583 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.484059789 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.48747454 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.434004755 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.479627932 seconds)
  done (took 22.714491401 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514557221 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.425062855 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435565255 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462908622 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42550246 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27047598 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452001526 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133228016 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.449940897 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701286111 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424395589 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531801998 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681740503 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437430842 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429985899 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.415424307 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65725406 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901042056 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428830656 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43732176 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458773757 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.438788861 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.438546658 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639278816 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27570418 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427059171 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.690409427 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426725513 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696508382 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445260002 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438014473 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428170856 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7032199 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086821993 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544198904 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633838613 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426977151 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434918642 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.432778573 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.42893811 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461663585 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432434883 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439016872 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428141029 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427530845 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433359383 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144444297 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.45312649 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.426720084 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426297785 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671642992 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532098372 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.433792408 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427784702 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478179492 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429098746 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.434179273 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560803789 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011002001 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427863654 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436323395 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.431617462 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43890868 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430241108 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015201668 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.439059484 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.435417922 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435369226 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428051371 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429068417 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467943048 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42922578 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.450419307 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430965303 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119408575 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43149929 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433330847 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966440496 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445933945 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.435885046 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661091646 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429398189 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429359391 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.430485597 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430139197 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149187071 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439568852 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.417497185 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495933703 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156804748 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659614218 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452498829 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461972639 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.654039689 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.416485464 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431701024 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.43909303 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433454104 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452504569 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142441211 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449316173 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.437341324 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690856856 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.643819908 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439631991 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.4312985 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908779516 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463557149 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.458047954 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44023635 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.646455872 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.001221437 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.45083874 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44603817 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4698789 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43224819 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185403143 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446355735 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.444024443 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432424645 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698046949 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.23839765 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435582264 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501165788 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440110297 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43347598 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43254883 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437131321 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434184645 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.634189012 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460419774 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.449084648 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.434917108 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434162104 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.435016751 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434449919 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.435528275 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.657419222 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43423975 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733495688 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433683164 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433598813 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434003729 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.657455073 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.443875322 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.446085907 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695495954 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438833304 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439053107 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448674149 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463236413 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542620957 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464834192 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.436355545 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.695464304 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.440589308 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.44178389 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435309077 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437304485 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434781388 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.441145101 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447003592 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002407773 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411654775 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440782057 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434919789 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.451881215 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505181322 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.445666337 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644522946 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.448038638 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434055612 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.461727094 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.437612328 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662348189 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445261349 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.43715017 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529475106 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.90799864 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018877943 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452964332 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.436589008 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.43683153 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.436694503 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437854557 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437077674 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437891534 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645425366 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457587012 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437319899 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.005830261 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439478951 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.438078529 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.462142511 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.449424144 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.445324321 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438567187 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.436761417 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449110608 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447513745 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.453547201 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574219578 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.454559514 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437410311 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.00061381 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446071474 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43739051 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438475228 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469745086 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438643816 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262565051 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701631417 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45041294 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687562033 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44514958 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.474472983 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.439123545 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452078046 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452603931 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.450128516 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468263672 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.450727247 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440179974 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442106722 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997554982 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15554349 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966276774 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448152452 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.449324265 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.443993569 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154677524 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458055054 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439806735 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672720746 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157724014 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459310114 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915794717 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.47110715 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188398168 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687766383 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679028737 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441932891 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.455145507 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691319333 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.658699233 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47334186 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446505508 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446074352 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.427836639 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992143804 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471891531 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522758168 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156065961 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460152149 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.463860172 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.511432525 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.463221295 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849937048 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.46263227 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441028811 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456271203 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447601645 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253485084 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449060745 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442397422 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031025883 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.444175649 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.937964699 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461282449 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654380431 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.460025756 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.446542321 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.453820857 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.451236258 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.698281469 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693322361 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451141942 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.444350406 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969169177 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.319415061 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.452065006 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44322079 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203851112 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445440166 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726805324 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.456615485 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.461212638 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452681104 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.443098541 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444080884 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.442744209 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449299633 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419978867 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92639818 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.460838311 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44799664 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444907296 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467127559 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.698785387 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.46155125 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014118498 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676548266 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44246168 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478314917 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.452485817 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445462275 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.435105069 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44538853 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.444638379 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534257503 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.67411426 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.448839286 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.432934336 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489698524 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66274712 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.445911542 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.446888973 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683301689 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.450450985 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.460198029 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18052318 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482349841 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.445713544 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449818765 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460144913 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489619817 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516887416 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658432977 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.464656344 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.457677645 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855232459 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468487667 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449950944 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.464697559 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543718461 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446903212 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.463464929 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.223583694 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022582295 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157628514 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021214225 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701768394 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455606967 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455561002 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447485557 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585875956 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448832885 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723794274 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448262197 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.44831 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471698729 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451175295 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451042362 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665740668 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725941177 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447914587 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44773899 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453764116 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.449242509 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459686105 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.660882216 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938531798 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996644726 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453368348 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449784799 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171715228 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744432604 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449457525 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447441413 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450039953 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.465480561 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.47521698 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.45917699 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459961041 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586354208 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700762112 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120969165 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.478376756 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.488010368 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.968480918 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449801504 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.705373543 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450201317 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.663187667 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028156745 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.135203466 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717499544 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520087592 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662941221 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.457843176 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587301621 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.465047359 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449627637 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451822002 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451927213 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.451463105 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.463225487 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029992849 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717377558 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.458659068 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.463722822 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482377672 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.463174696 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675013125 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169696472 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.678367078 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.462169117 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.458304582 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.45363541 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027940544 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706632554 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460213828 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.459593245 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68977444 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458251217 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480524499 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.972339965 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.453519449 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993729148 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.347600308 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475886224 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456414645 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140105545 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034392224 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.456933377 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936540372 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45736338 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45976131 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735830366 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.463060506 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455997108 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742576783 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.461106481 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457315192 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674169547 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.031727744 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209286298 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.472785297 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477042679 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.457387955 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454863339 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52101057 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455367397 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46346278 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.879445 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479932332 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45531467 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46958055 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.458217629 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462605739 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.46044359 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456901395 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.464355219 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.448165411 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.444608687 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.465912879 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593507554 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013456817 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475892106 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.137262674 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.782195591 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.712774261 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463582134 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.447343399 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.463536339 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457088603 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457132781 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45760792 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.45868516 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005365534 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.474800415 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.472382022 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.463330391 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.669444229 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668946251 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464343847 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671313911 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472869745 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484975676 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.443013226 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457623351 seconds)
  done (took 1007.56232366 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.490485939 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.487664832 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.467581947 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.529410635 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.515595454 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.579044265 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.555687672 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.490665593 seconds)
  done (took 21.474577151 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.463185069 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.46356876 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.460146084 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.464730832 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.456906296 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.929936489 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.473436741 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.465076215 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.477827835 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.456894033 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.459700174 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.150625972 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.481570079 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.466568963 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.461028489 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.46530466 seconds)
  done (took 33.966205381 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.489269788 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.626732961 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.319246538 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.49487859 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.476971868 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.470757877 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.680357609 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.481555288 seconds)
  done (took 27.400850036 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.470028071 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.471514485 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.470189843 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.470370021 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.471617317 seconds)
  done (took 8.714283306 seconds)
done (took 1284.985299559 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.465544497 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.466752953 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.465333665 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.466767487 seconds)
  done (took 7.225848256 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.446093933 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.449488379 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.449858998 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.468565187 seconds)
  done (took 10.175922665 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.159885947 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.08698251 seconds)
  done (took 5.607814826 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.96391606 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.967972209 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.954252723 seconds)
  done (took 7.251241438 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.768354441 seconds)
  done (took 3.13261051 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.421819266 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.464629871 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.141659709 seconds)
  done (took 8.394887158 seconds)
done (took 43.150097796 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.468059154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.706096062 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.615300774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.4685825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.618671488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.614978167 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.19503792 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.459626523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.468935904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.463328153 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.467852372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.619906496 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.241226733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.706303169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.239819638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.707577975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.621239436 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.460722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.458986671 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.466969238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.194211992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.460398491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.467552565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.460593708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.619374452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.603376234 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.459536247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.70740839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.467550457 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.462993213 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.60317906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.471148195 seconds)
  done (took 85.412545412 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.458596613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.458050181 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.46365125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.460626939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.462595667 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.46112014 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.46082902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.4605672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.470086879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.462307215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.462669168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.457343468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.46024147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.458485328 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.475919579 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.460342464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.479992082 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.461303745 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.458873681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.458903041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.459968671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.485399737 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.476559633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.46041315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.474959907 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.46068385 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.478476055 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.460455493 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.459761472 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.45986416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.460653268 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.485754402 seconds)
  done (took 80.240266253 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.460612989 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.463492177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.459675449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.471230134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.468068258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.461080022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.461931494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.459398973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.459780175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.489066773 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.471686569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.467237115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.461587275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.462106434 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.477660042 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.460938761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.481911885 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.46320017 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.462692446 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.46218542 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.478561192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.461448373 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.46101779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.461421998 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.464561723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.462308708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.460958598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.463199756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.4723616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.461655585 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.462015691 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.46287549 seconds)
  done (took 80.263524465 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.699941085 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.473767212 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.476543439 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.467433575 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.475694942 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.47243299 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.467576513 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.702347025 seconds)
  done (took 15.603375648 seconds)
done (took 262.884320373 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.465965648 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.978573511 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.510499756 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.472580355 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.489546795 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.493468679 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.690164786 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.512212756 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.690749519 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.489493979 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.486764592 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.478475114 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.254790945 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.621381755 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.317228372 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.427529161 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.332330914 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.465492975 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.031157714 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.747633464 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.493903206 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.464327722 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.303718595 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.360429418 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.464043895 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.551643306 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.567556148 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.700068643 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.632976724 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.550314601 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.980132169 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.469193747 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.487464957 seconds)
  done (took 67.349979318 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.472057629 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.475421473 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.476080108 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.47594814 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.47679173 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.475645898 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.472096783 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.475754229 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.476706605 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.47500592 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.474278077 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.477495935 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.478035196 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.476001384 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.475898805 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.466959986 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.473475154 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.476699409 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.471677989 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.468542774 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.476481514 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.4780055 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.47796171 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.477060314 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.475563243 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.476874292 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.478476731 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.47995189 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.478143777 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.476967569 seconds)
  done (took 45.636380751 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.478394568 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.062323067 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.186771112 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.480554074 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.47379792 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.478235925 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.755719184 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.478617983 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.477494949 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.47910699 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.951508586 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.48119676 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.508844367 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.210446762 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.478650367 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.479531537 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.479358138 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.474993997 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.059160025 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.48594944 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.772794736 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.480208018 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.756371766 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.487054064 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.497462385 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.476179223 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.48027801 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.271576636 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.496466519 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.953447581 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.231754999 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.755156861 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.207862185 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.240559419 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.236244866 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.487772047 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.480769323 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.956510698 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.479063671 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.476717537 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.754151241 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.47915799 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.199413455 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.142683579 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.494798927 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.479644354 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.296833215 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.970383031 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.712555807 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.48363469 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.230500564 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.480497004 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.482988075 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.47880775 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.714083111 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.480094995 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.477687956 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.317261141 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.503279666 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.75522517 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.481653883 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.478642608 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067707629 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.478414821 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.05671014 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.480385816 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.487646096 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.498128874 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.200119212 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.482543055 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.165086925 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.495538909 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.482674114 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.952514533 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.059488407 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.348238315 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.481260568 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.061822699 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.239126714 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.774410388 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.484625674 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.254607247 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.773626447 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.484458801 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.486446865 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.485420255 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.482577823 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.547745433 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.756115589 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.113816184 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.162647031 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.325315894 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.780275108 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.487936212 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.480229471 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.320594465 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.501936555 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.484352884 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.201490695 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.164794083 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.499584187 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.488968516 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.17322842 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.502291401 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.761245202 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.492184622 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.239839182 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.482973469 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.549673697 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.483509914 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.48844618 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.5036193 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.759856861 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.489727131 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.484783707 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.148567258 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.986332377 seconds)
  done (took 204.58066825 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.475645437 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.491589864 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.47682852 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.476137435 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.475059011 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.483741753 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.475167481 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.476310778 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.482072167 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.475713114 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.474987756 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.484851669 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.483882802 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.476418691 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.47735689 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.476591371 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.475122909 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.494510626 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.476079314 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.477719785 seconds)
  done (took 46.964364068 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.488886436 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.027491577 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.99734782 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.492333965 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.487834998 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.483057248 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.537848231 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.488069918 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.488541525 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.773356081 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.651516702 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.489140717 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.487016297 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.486960159 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.996951695 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.48307605 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.774341417 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.027973675 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.48912523 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.028296298 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.478770159 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.48854419 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.482730992 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.033146396 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.788759463 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.766253957 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.545235231 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.037655966 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.493636341 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.488236489 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.036217829 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.493786093 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.486056424 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.033913668 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.510241578 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.504254786 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.489241831 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.541337372 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.543380261 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.77999877 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.039349822 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.773517866 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.50548924 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.665306918 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.492641031 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.479486652 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.038496746 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.507737475 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.479598448 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.490813782 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.494188833 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.009811269 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.508813126 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.015093926 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.506097363 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.491789439 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.032542934 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.016774987 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.025451345 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.652302477 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.492201478 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.766159786 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.491496684 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.039495962 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.509014727 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.490299248 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.490838928 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.65432392 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.040089115 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.768718274 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.779932552 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.781559027 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.491424323 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.551247681 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.511699083 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.780654483 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.548513188 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.895846265 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.783182213 seconds)
  done (took 133.6755208 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.74959088 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.605250523 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.867963314 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.069432319 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.980291788 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.623161523 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.600539883 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.747901144 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.491511421 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.576009071 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.113444333 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.603888942 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.213145444 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.576467164 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.593781079 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.635638794 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.879389897 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.476190462 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.161449997 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.090723197 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.499002521 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.594451515 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.031905702 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.702340935 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.488026832 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.043368381 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.434450872 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.997919329 seconds)
  done (took 55.831555667 seconds)
done (took 555.405479504 seconds)
SAVING RESULT...
DONE!
