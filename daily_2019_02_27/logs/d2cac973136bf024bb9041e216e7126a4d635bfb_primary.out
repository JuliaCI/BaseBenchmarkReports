cset: moving following pidspec: 29750
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.372671087 seconds)
loading group "string"... done (took 0.608524976 seconds)
loading group "linalg"... done (took 7.655056045 seconds)
loading group "parallel"... done (took 0.17984455 seconds)
loading group "find"... done (took 1.242716181 seconds)
loading group "tuple"... done (took 1.93673483 seconds)
loading group "dates"... done (took 1.304174744 seconds)
loading group "micro"... done (took 0.243909043 seconds)
loading group "io"... done (took 0.99664145 seconds)
loading group "scalar"... done (took 41.136920643 seconds)
loading group "sparse"... done (took 13.412758084 seconds)
loading group "broadcast"... done (took 1.066135004 seconds)
loading group "union"... done (took 14.595018349 seconds)
loading group "simd"... done (took 5.051990551 seconds)
loading group "random"... done (took 10.112885655 seconds)
loading group "problem"... done (took 1.982766244 seconds)
loading group "array"... done (took 22.476260526 seconds)
loading group "misc"... done (took 2.040435269 seconds)
loading group "sort"... done (took 3.408815491 seconds)
loading group "collection"... done (took 19.466460696 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.561455697 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1471487 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136117174 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127972301 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185334017 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131523304 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143509137 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087397829 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.896155812 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167276518 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142863661 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518441901 seconds)
done (took 4.963749594 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.234558318 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089555833 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099308083 seconds)
  done (took 0.859376319 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066699782 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129816086 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08208539 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068842057 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067851882 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082855205 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068555104 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067776775 seconds)
  done (took 1.241711476 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076072772 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071049883 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084857203 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070279598 seconds)
  done (took 0.970759983 seconds)
done (took 4.045012093 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.941562921 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.263435183 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.197653972 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.491402194 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136702219 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191287946 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.719840585 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.35644039 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.219968563 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102941961 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10966758 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394889482 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109956833 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.712296808 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077732562 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108446898 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.164857434 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.480595117 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082890859 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084851144 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106922583 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145389258 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104703154 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078304636 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169124149 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07063282 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154143381 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094823017 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06994412 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.253077828 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190558145 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.736268319 seconds)
  done (took 10.827933006 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09965468 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120692331 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06974633 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142061544 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123848409 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073103608 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074288907 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085350206 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094306923 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163731097 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.120772059 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126608383 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067426924 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072621149 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104112348 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233468953 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.094223918 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105560198 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074700056 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094021815 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113926511 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.102956997 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084736885 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097229567 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153745455 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19618024 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101832022 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114325089 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071959703 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099746549 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132006121 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.138049502 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069649308 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085055635 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.162618648 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099351431 seconds)
  done (took 4.646137458 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.113013756 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178750742 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095964411 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157788341 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086637603 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130338502 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067563485 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100683407 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255380127 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.173753401 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.494575198 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133080972 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.092668871 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072131591 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087833099 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069525374 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.637708587 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.152472216 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129007779 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089753943 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096843232 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.075581031 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.721783625 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083305457 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068708005 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071761628 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079277096 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155346636 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072921707 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.295200307 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.093428846 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09165533 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124603392 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.184694041 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102715269 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126953336 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087043848 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069938462 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178474437 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076666334 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085688116 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.094789322 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124818648 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12408804 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085427275 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071729638 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.189296477 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.147962205 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069020952 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105688862 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.965103888 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068464966 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069158302 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.171303511 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.112652615 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06990104 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303990626 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105471641 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070093673 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067538351 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.274421489 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188708968 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087156455 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069634424 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084870549 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071306156 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.72307185 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07102989 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.103253931 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074122131 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082263178 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090124003 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070324603 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09286231 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077853119 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105717667 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071447803 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067675769 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089352717 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070486596 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.086554534 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072366876 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107910503 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.217640425 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071477572 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088012524 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068702713 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090323706 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117904865 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089088631 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06963023 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119906985 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074154812 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070669539 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123519912 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070710248 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107610671 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085367898 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116028443 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085793509 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125215888 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069485112 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11805257 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078783145 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116000756 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097912148 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071028402 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159767206 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066610212 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085028991 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071279484 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08727774 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072891464 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073110095 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103917369 seconds)
  done (took 22.900427129 seconds)
done (took 40.15371606 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.320086864 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096702744 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095034902 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094548616 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080065918 seconds)
  done (took 1.442339906 seconds)
done (took 2.167613091 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151199071 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105225301 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081436204 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099954396 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082376491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105587188 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118170949 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083881444 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120269669 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065774585 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11705001 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067738002 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083145243 seconds)
  done (took 2.035920337 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083712773 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090087664 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088164321 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085338762 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082581467 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085080232 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083757769 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108636252 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08429774 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091348666 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066915649 seconds)
  done (took 1.668033747 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083503321 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086484121 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089236859 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084377241 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082629993 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084887088 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083223366 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106091984 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084233452 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091267899 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06836128 seconds)
  done (took 1.670085688 seconds)
done (took 6.089661791 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080666798 seconds)
  done (took 0.797624671 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.759903206 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.669172298 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086500945 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.14284957 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.232849894 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.167091926 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475399561 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.118629985 seconds)
  done (took 10.588599266 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.105738116 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101320355 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073329791 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088175822 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07427559 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088717185 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071691386 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074137461 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08692129 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070857911 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086643819 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0722579 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086958261 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073558354 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085234941 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071418606 seconds)
  done (took 2.101692634 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.108725816 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109525451 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094632038 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080864057 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091063702 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078505356 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094775566 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07848087 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089901689 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077913488 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094870688 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078319728 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09042719 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070522751 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093034053 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081114215 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089448021 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079064239 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093704516 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079989202 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092885074 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068936699 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091153439 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079561063 seconds)
  done (took 2.926604602 seconds)
done (took 17.138662994 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133319774 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079412243 seconds)
  done (took 0.937209 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084710169 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098381898 seconds)
  done (took 0.916268397 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08534499 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081417185 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093543659 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094956009 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083565853 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068758246 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105171162 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069660263 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082398994 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069396058 seconds)
  done (took 1.567426069 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072109752 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095560334 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072648482 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097271594 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077152552 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081252074 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076629849 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08480964 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082619479 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079378601 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074992458 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101339173 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075109265 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10230779 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090752008 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070698559 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087354308 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071391306 seconds)
  done (took 2.227000933 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067919893 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069692803 seconds)
  done (took 0.86926189 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06971348 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065572442 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082479218 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069141731 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07969647 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066256124 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081342209 seconds)
  done (took 1.245293515 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.424455771 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114321603 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.273347543 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075287133 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.110004237 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304290674 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070233654 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075710994 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091487512 seconds)
  done (took 2.31483784 seconds)
done (took 10.809992202 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083322499 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088016997 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114235389 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.449706484 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108837543 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070579196 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147462651 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.21903185 seconds)
done (took 2.01885521 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129287065 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635046072 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427621979 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.238944637 seconds)
  done (took 2.041072976 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.391062108 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.096065125 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075151359 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070790615 seconds)
  done (took 1.373421713 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06935209 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071875929 seconds)
  done (took 0.887087385 seconds)
done (took 5.17219825 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069578278 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069154301 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.082508145 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070303518 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.067125946 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08254986 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070377011 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.116873357 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069631721 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083556816 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070538915 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070099841 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086724047 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068059814 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067417511 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085763666 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06824327 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07065646 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082794649 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070290374 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08217921 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070155214 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068137017 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082191788 seconds)
  done (took 2.606924266 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089518044 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083769985 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074658374 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090422392 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07375654 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089410144 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077576917 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068656814 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089369465 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073021373 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089239019 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075196537 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08740581 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075384611 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088139761 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075515341 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090499779 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071253761 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086114231 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075728558 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075030425 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086020952 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.075419004 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090255424 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075172285 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088147093 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072781008 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084970058 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076219905 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089132475 seconds)
  done (took 3.182864748 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072601721 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066446619 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08384073 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074864735 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068320437 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084280183 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067542398 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083635247 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069084718 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067643782 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084706324 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067035929 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068513814 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084136483 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068935077 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08654807 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086304647 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068393205 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083552206 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06852255 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085842522 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067865965 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068066496 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083028876 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067078327 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067452165 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082475777 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068220298 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.084067772 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067644583 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070070455 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086694969 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067741079 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075083422 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085828706 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067250394 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08612513 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067584442 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068640769 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082732203 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067864337 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067664606 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083226092 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074046801 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068185314 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085968019 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068164755 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083946465 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068914734 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070949917 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082362752 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066972634 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084430819 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069593401 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071241107 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082548284 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069326443 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068160733 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084617387 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067954153 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082569459 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067096599 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070057915 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083826662 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083959172 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089140938 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067991509 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070269425 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084353176 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070766479 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070183533 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098519905 seconds)
  done (took 6.177714153 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120669429 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095736706 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083705633 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068815295 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082247662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067913566 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072540005 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083924976 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069709229 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089713109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068313888 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084239831 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069661743 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084023527 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083520801 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069505945 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089657267 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067656968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068765125 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087355544 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068120734 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086682914 seconds)
  done (took 2.516031815 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.191822009 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088972675 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.115871318 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093460465 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087570447 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077923962 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090191162 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074677033 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074837572 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088209248 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072481678 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089095578 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072883435 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088170239 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072624559 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087686734 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074474753 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089081602 seconds)
  done (took 2.382236675 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081354103 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069244783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107039931 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069316508 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084141477 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071489101 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090964472 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080100435 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088213053 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070671554 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096178024 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.187354371 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0885368 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071187569 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087615038 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070952522 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073004286 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08553995 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079654882 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090998864 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076897224 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095370311 seconds)
  done (took 2.668206688 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084696091 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070856426 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104451698 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088918001 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066601277 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068582252 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092172059 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070962725 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093427254 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072348704 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085273931 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070517705 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075600962 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086013369 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076843771 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08607469 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072745235 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086943636 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072311731 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067523263 seconds)
  done (took 2.346567982 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090249583 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085748922 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070961162 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096316263 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072527411 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087102349 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0813738 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087950419 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072246154 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113765116 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072786433 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087924565 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080852214 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092097145 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072845433 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095441492 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095843225 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081264086 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088088865 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071845483 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113385449 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072479914 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096530806 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071483591 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086696634 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072161174 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086556566 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077162074 seconds)
  done (took 3.133276094 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069781941 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069642825 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081146386 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066250107 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065966349 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082381726 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067902693 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067418226 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086006339 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067381991 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085486889 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070532008 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069762984 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085419413 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069618079 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070128496 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085884084 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06752187 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067637987 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083621594 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069973526 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085967131 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070378768 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068151621 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083138367 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07056781 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068463343 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083339623 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069643104 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068112491 seconds)
  done (took 2.978736757 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079785108 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091847282 seconds)
  done (took 0.931991395 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067215596 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084076926 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081918387 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073254754 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089948241 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071247197 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095139442 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075328985 seconds)
  done (took 1.394585164 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086170925 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081760146 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088223463 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099470067 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08297976 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.088259217 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16353398 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088549334 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078269324 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086304392 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086327825 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086645265 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07810845 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071098524 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092719169 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077638302 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084818281 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.077875808 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074329705 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085873569 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072725509 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099040136 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073768289 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084066497 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072701915 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.080869218 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099248151 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072244756 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089755961 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078417951 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092760622 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065790601 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086520135 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.072127638 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069254699 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09800187 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087808852 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091162347 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080974245 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088103681 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082394282 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082127539 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076238403 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09427022 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083498701 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071877593 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087395154 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066485145 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085505882 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074550213 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066820888 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086779685 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066936102 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094730486 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075202548 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099196803 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070166323 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073093205 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089699064 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075289481 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094155982 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073852236 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07346698 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087571935 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078620968 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092189398 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081493657 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.082326796 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065413287 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069084476 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097805875 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095525787 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093974332 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.072701061 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087831756 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068389872 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089831884 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073155151 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077798156 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094337171 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.071494828 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093335421 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079391903 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086946594 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073956717 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095554445 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.070195837 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073038043 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084348659 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088673144 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085787736 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069225878 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085054226 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083163427 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074542073 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087191117 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06937549 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094837361 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065317353 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071952737 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0878972 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072706537 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0996228 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07732829 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093567395 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081262884 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095336212 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070948076 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091467308 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067990658 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071905596 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08603296 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.078783974 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081964992 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074769143 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073020898 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088430529 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080420098 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085454404 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071239677 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095471296 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077593866 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07001912 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083752232 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075517301 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087663239 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074875226 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096176239 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070684411 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.067648305 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082394168 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074496016 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087942414 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074932273 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091992681 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07468339 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066687894 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08526833 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076685249 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097548055 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072125344 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087682554 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.078335865 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07333785 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087432341 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078523223 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.09020452 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071319154 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077560198 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089434789 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066811919 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090946644 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074538462 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086509712 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07609644 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074973249 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090308587 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.07283153 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085815156 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076931472 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088594898 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070452928 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071386486 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086545533 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.083057972 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090030333 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066640918 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068716164 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095115486 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069681245 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087642244 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070732968 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073540486 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088057802 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069734536 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086787945 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072668422 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100686312 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075626332 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088377751 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077100857 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099869235 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072194805 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073802431 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087238769 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073121977 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089459021 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081666109 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076748469 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093283321 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073855442 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084563898 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078484812 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096794887 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070201496 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069094416 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086440796 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.076462406 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0930128 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074233801 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088659018 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069995992 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07180645 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090528843 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074545645 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08772128 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070343797 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092583879 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071346248 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094192693 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072012375 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.082320059 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092602649 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066306169 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091860133 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069830267 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094044947 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067042079 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068817055 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086636481 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072859216 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.07029386 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091603453 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06556739 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095196396 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079897549 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087886279 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070555998 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071645996 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094685384 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073970233 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092666974 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075013633 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093960689 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082497784 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071391091 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090927312 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.083186354 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088030218 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066670781 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09377932 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070575469 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071407193 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087129732 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.070299212 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090930758 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081853123 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095415732 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065417506 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074941826 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086606065 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070291507 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082191921 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.077218959 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074731709 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088981169 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078252751 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088960188 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072088583 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074879507 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087816812 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072594939 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088939639 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074473315 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087980971 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074189685 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071419681 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09125096 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.0698881 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085345376 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073945276 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072065943 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087878848 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077748434 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087646168 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072157542 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074211264 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088948034 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072713822 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088211135 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070449357 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09118585 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07169826 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072656802 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091134633 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066662389 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09547043 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070968353 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0795539 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087624933 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068648334 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.094596574 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.075466157 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.093898979 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.072766013 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.072387303 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089312699 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070959438 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09121191 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078403499 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068541124 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099382529 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081540942 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088881903 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074844214 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088685407 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073003812 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069999522 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089000169 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072873913 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088749633 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.071284868 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091777761 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074882215 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072681682 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090595889 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072555514 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088660864 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074142948 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066501472 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087870952 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070840165 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08770367 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082464241 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072500836 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088226597 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.070933012 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089794188 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070898776 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067593217 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096543728 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098245872 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073326143 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079917237 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088033108 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073383672 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100106614 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.069040058 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086690069 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.069770253 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.069686022 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097037749 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072968079 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098048985 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071479075 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071327773 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08611974 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.073188706 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.087459546 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066330533 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069522038 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092090122 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070925231 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087781031 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072792593 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074698447 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089821824 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082037855 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08776701 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073000859 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08966074 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068924327 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071349565 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088494593 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074633561 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089833285 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069360608 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069988341 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088705081 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072396868 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072975509 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088713282 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073347018 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096769417 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071411787 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091929114 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07634893 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066623804 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091627438 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072402504 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088759945 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070864252 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075142201 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091880037 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073602222 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098567704 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.071415203 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090113091 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071938637 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069761859 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088701074 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071896678 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08932398 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.07165801 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072635009 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097307481 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069621049 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092929449 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071430959 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089491361 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.079854823 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.072432957 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091343669 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079887486 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089585505 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.074689883 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097315247 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075764776 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092977195 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072798783 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072663946 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095349137 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071454323 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096390254 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072268626 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072822879 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090395854 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069183295 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089077403 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071146609 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070950509 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095281645 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.072507132 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088544212 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070846975 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069163071 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089304781 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076233255 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097290293 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075142937 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092471385 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066878035 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069447258 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09100367 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069870827 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0913087 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074848748 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077028912 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090325429 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071378623 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.089210796 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080658151 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095413935 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076085238 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069812275 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093415747 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073315312 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092529373 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073947891 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071818312 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092008668 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076260341 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091610699 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071101634 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097254112 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075300511 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073155391 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090590239 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072645867 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089864014 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066424046 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072452327 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092331739 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07669389 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091864384 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072258591 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10083504 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069704701 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072370309 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09407568 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071448303 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094216651 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066396068 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073360401 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091279743 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07296022 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084396069 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071600234 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069980473 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092343283 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07199166 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.085139158 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083050954 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.099213799 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07519419 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069858614 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088618741 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06718946 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085529546 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07094253 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073617265 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090648083 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082463702 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088834605 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071635587 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084737127 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072534728 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074591143 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093169701 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068436678 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085321958 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070757348 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.075501804 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.095082903 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071003149 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090676333 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075994164 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074731112 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087839141 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076357336 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087140983 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075116658 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103894522 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.072690877 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072167438 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09673666 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080235414 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090701744 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.067034101 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.09012681 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075471633 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07231447 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.090654567 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072579402 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106162024 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075100153 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089619815 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.071212373 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074894917 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090101573 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080974252 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092509565 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073544377 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095168798 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073667524 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099905001 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075217247 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098579229 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075579523 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075263695 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089516341 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071791187 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.088313074 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071358083 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072850608 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091549498 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077678758 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098977903 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071513424 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102431378 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081754609 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092244539 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.069277348 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071654832 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090555353 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066820486 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073054263 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088459377 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.07069447 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.089391879 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071474651 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073024523 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09640752 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073912884 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091001028 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.072103984 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065858063 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.092749752 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075197617 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09074235 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.068868042 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072503849 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090834502 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076051378 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094510772 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069378308 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091270193 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074844797 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072595624 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.086534005 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078651799 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089351979 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075976931 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071528752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09081243 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072760089 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094094566 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078409317 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091603899 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07504719 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.080927166 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092723287 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068881533 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08752691 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077919493 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069321883 seconds)
  done (took 49.063757844 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113498791 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087482393 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066785503 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086389697 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081148099 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087260043 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067603033 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069203148 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086466699 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070219419 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085673643 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067310637 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.095731604 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0932739 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099934289 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091197068 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067180339 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067296327 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085329711 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067901404 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096161173 seconds)
  done (took 2.548294355 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.093631677 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108282409 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084175916 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106260936 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097341507 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083625327 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101883094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084630124 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105366208 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097636984 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088366061 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102965863 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.080237007 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.097183698 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079291787 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099224035 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105617338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078199179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102850494 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083926564 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098671041 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102065765 seconds)
  done (took 2.89166631 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072195161 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070845267 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091701668 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066856871 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071655281 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.085287714 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075615357 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.087852714 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076059439 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070921574 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.099084827 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070233626 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.091766414 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.070237839 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070925562 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.087893266 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.138890482 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075238417 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089851651 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073683493 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06609427 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092788589 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067703377 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.086146226 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071074211 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07583642 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.091614663 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.07009752 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.090887359 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071082528 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.071900909 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.087924065 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073432097 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07255506 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08907535 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070305844 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089881266 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070943553 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067332051 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.088044136 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072053468 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.086812276 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.072058549 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073230647 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.088340146 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069312065 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091085871 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.071452809 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066468221 seconds)
  done (took 4.703980296 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.091440688 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.148878702 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093947506 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129067697 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087654553 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.099560884 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075137726 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130628269 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.089102912 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069990237 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10973147 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.087241624 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092753177 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076585862 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096860621 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071981094 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091389795 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069811586 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.094762975 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071428063 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.095504162 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07777697 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.106477829 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.103689937 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07760624 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070823199 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0906174 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07714264 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.104632431 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094567874 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077130606 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09580221 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.088671144 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095979822 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07170086 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.09265139 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.089616695 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.090497325 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074249721 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088008404 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074201428 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09582592 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079211634 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108384903 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072579115 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.095896208 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071263765 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.087678312 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085563559 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09308321 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.080029208 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.107007148 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094257431 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072434284 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095387635 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.088570732 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.091077167 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.069729163 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.09421927 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.085239994 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.088239632 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075380589 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.105880815 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.073694427 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.098277924 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.087491607 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.095523899 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07642871 seconds)
  done (took 7.042706416 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079059671 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097389751 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087096646 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106779469 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098023438 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078651956 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097672919 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078837627 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097887173 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08397625 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096966567 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121687175 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072801916 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.101217299 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079014705 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098365791 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07858056 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098507406 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096946494 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077760378 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.098249135 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086984857 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097750928 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107354399 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1092463 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.093321485 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078744053 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096978225 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106691422 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077652154 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109868097 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078564586 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097500865 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106585844 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.090647725 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097095248 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070741373 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097616067 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079362695 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097277806 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073219884 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107646362 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097573939 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073773067 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09848123 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077552157 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107609083 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.110118378 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082124328 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102836519 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.078431817 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106766822 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097196626 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078439759 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106865883 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132725076 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088598733 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105788169 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097795695 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086585074 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106331925 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.114685255 seconds)
  done (took 6.664571136 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094024109 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101797396 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103117796 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.067864859 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069625592 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095996094 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07053018 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.088628037 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081453538 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100169928 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083733346 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096209771 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079749108 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103442748 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095167043 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080043299 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094556241 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076746244 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100409885 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076747189 seconds)
  done (took 2.582839797 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080913776 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.109892107 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07310917 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098413575 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.075203738 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078266576 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093992065 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074852222 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092216742 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07481876 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103218288 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083229532 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091612932 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079121413 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102963588 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.079884946 seconds)
  done (took 2.220668605 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085698556 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.102491814 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.088181642 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091405312 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070101919 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.088460428 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071990891 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067149834 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.088933448 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.087138172 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.092709235 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074219433 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.092520181 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.070644043 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069143377 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.095187481 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067970206 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089607732 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071662112 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10705457 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082775635 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090445353 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073362669 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.093708815 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072592179 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.097749444 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.072345663 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070392186 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090756521 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072135243 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.093173776 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.079363125 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.088897362 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070729242 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.08924965 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06890065 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.071676283 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.092491284 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075369482 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.09154705 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069780599 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.091151657 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072730328 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.072920043 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.087596002 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073076218 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.087811897 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.077783656 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070011959 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.092373813 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.071997276 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092988403 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073758079 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102105087 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075604021 seconds)
  done (took 5.353630634 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087269855 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075822051 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087734545 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070133683 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093956604 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074037526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076057517 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094028958 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074279338 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089246777 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074077107 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093966579 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07506936 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075878348 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094016834 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076024726 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087036437 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074105064 seconds)
  done (took 2.307543287 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077703037 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071635286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.099878844 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072579362 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.091002786 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074665215 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06744638 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090223609 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070766012 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091513605 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072275538 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074822394 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090748831 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07494166 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092186987 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072377017 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074497783 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089646874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071073149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08752044 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074485536 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07062074 seconds)
  done (took 2.588129957 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.078445782 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.10017661 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.173887206 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.114741488 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.088695797 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.106950129 seconds)
  done (took 1.499980206 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097578169 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107018403 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07286239 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114014537 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079783695 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09457604 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07444686 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093722003 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083419128 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108629352 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074846838 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104078151 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103222108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086277208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100173651 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080631369 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093702211 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074817094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092293513 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113120697 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074617258 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10299106 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073852517 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094543948 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074074811 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104310624 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103281424 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088818424 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092934808 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08380887 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10092197 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074312682 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102874782 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108549711 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07494429 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102711896 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074214024 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113653666 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100299155 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083144594 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094803529 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081089809 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103926562 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079265339 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104022581 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093643064 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079572608 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093683207 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07402606 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120624496 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100289599 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081923309 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100756568 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103605062 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085096593 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120214105 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10865675 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082772631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100640801 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108247544 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084434076 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100398619 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10215163 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088082044 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100863335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083046132 seconds)
  done (took 6.991291987 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089216349 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111905454 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073674961 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108262148 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103309123 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073832584 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094028052 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074881938 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093876866 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074015332 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137065807 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074322542 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102707527 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102884746 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074282635 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093494188 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073670601 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103518616 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073709918 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121756143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093793534 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083101095 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103895447 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102731174 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089017676 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100558816 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074722976 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095243418 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093351992 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074005694 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099928852 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074569928 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102766769 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073251577 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102219977 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074641016 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093442912 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080129308 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094588993 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100058427 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08168332 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112982696 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074087833 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093086785 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108095757 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074251781 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093713096 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074180412 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094979728 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073779919 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108102066 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089131813 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108115639 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103139397 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074292173 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093339712 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074886772 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093613708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074441274 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099651908 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102884643 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07441717 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120668776 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094213014 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074681745 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102733768 seconds)
  done (took 6.87456672 seconds)
done (took 134.394657037 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220519379 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.202788297 seconds)
  done (took 1.259147027 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074487553 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.123447673 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084697389 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1350604 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089306642 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103245221 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121491687 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083940542 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07183741 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092586692 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073048116 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094759391 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136923437 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070614762 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090870792 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073159245 seconds)
  done (took 2.361916383 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.110332395 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.211676809 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.116414778 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.07004402 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106938502 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.083916231 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091674045 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083194213 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099060162 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070746774 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104475534 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.081761616 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070564399 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10171664 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097739871 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083925617 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070352297 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103993222 seconds)
  done (took 2.607655747 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101512213 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.122329736 seconds)
  done (took 1.071736701 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.213835092 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125451406 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209404731 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.480897204 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.248936327 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.299608302 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178966945 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.183121955 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15915377 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175934974 seconds)
  done (took 3.122453542 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103937299 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17948811 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.327640461 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.143679612 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.093557358 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123275123 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147103535 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.117008828 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08850625 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.107285357 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107416541 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084172335 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.125372487 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.081608799 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.101299798 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083698523 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129106541 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079710457 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100628094 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08154313 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.124307188 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07203777 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.101487247 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079205638 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10682496 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084475969 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.09188657 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071568321 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102647785 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080663533 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105968675 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121350992 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08460198 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.142039066 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10982647 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.141152371 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104397525 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078937172 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080701464 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098700813 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.083112879 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.1047034 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112238569 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.082721303 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071541899 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104724274 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071413762 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.091598241 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.086639341 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106461748 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.085291589 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105390552 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.139873257 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10457067 seconds)
  done (took 6.581246001 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787996503 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143714806 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078134687 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.855340331 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121876906 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090872626 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775543231 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099008534 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249417092 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.788016379 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120059986 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.083417484 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.218591267 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.225934984 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948482199 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297146808 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.657005611 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112561356 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114789501 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.140216087 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16768065 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163575573 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.158063689 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.414341096 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100225774 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075005809 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.144978303 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101752945 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14778485 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110766687 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077854052 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165233684 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.262227816 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.165511665 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099493435 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074916832 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074267228 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175058449 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233115734 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.200130895 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.166936988 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07309931 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097001622 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.149826592 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139051752 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073825767 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15068476 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187265302 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16220386 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.079169602 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106227172 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152435506 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.151579552 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152525521 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108558489 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30352711 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308126816 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077400107 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130948255 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.090773739 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.254816606 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110693625 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.195020941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148707524 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20222654 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.077243849 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816786197 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16052289 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099271652 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.08385614 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129652551 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102702848 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.15194238 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155483542 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393922512 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157330857 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.078149622 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098098511 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.193615229 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113015312 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077072105 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.150752554 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103457573 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132771136 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.157361518 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158195064 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.159337823 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.24211165 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.157454838 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.150469489 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102816224 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136172624 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.082227714 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207304536 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.208774389 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15203584 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.202639503 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168326237 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.152643834 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159599567 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084622488 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183893063 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129189259 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.088875474 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149640613 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.204360886 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134715955 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.110428863 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08052634 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.151468358 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136479197 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113492142 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.151743062 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.1617753 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462303557 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.159807648 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073967378 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115853608 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15149191 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.151795644 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103603947 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234170752 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134408403 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.158885689 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130463621 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095386344 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128928553 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.152927287 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.087029418 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132044771 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.171345999 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08345424 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.229919084 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207819786 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.085609919 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229822207 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173022159 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.083306983 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161575251 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130773408 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.157039359 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105758833 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.150716807 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103143575 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787673276 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.177514963 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132571729 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.080578842 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.174824261 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076964821 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111946575 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090081797 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09445361 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806754257 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113424372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.108687213 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.090110363 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104759622 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132477713 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14912235 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.080168392 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173710645 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199083588 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10658368 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130388947 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090597392 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.149593813 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103014402 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113455481 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090948216 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.112955115 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.134375746 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.079059837 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111945897 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15743467 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153433512 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.209762389 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.563766462 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099669993 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091183478 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218178843 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098891428 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258841166 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150448451 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.213078599 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155293295 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.109277201 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310805452 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.156962343 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174111337 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094111958 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.163310268 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095296525 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.146890275 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155750138 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099409713 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081975502 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.151275629 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.179171383 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.154920377 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.97960402 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075226991 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216661903 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09278752 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.159969011 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081682726 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106691951 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282478116 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077712229 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.159304396 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153844291 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10193592 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112800366 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.83801887 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090680227 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.17174592 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.082000646 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21160611 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.153544502 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.150519762 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.17047214 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084082445 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.15216491 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.203664712 seconds)
  done (took 43.21388708 seconds)
done (took 61.057917309 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294550858 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.225811371 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240157832 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151983289 seconds)
  done (took 1.868470105 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.156972732 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.114133624 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127185766 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.093009888 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.111575928 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.093251641 seconds)
  done (took 1.567786098 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.435672921 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.291474385 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.252138948 seconds)
  done (took 1.854357958 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.316195713 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.244838738 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47396817 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.314164302 seconds)
  done (took 2.338360376 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.205729335 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.123946281 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.096549192 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.091322702 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195911934 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254399607 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.134619981 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200339696 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10670003 seconds)
  done (took 2.325250039 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.190786163 seconds)
done (took 11.0198453 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.300464028 seconds)
    (2/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.136715748 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.193958787 seconds)
    (4/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.229578474 seconds)
    (5/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.181397789 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.237950333 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116247624 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.231824116 seconds)
    (9/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.127926699 seconds)
    (10/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118691155 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.077620836 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.077346331 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.108432319 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.082597986 seconds)
    (15/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.208300532 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.217208018 seconds)
    (17/309) benchmarking ("sort", Int8, false)...
    done (took 0.175728099 seconds)
    (18/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.194601343 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.127830365 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.22160959 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.099958966 seconds)
    (22/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.180608179 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126987764 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082328972 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.127734351 seconds)
    (26/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.132275233 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.216747911 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.177206665 seconds)
    (29/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.109009679 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101972836 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086776546 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.102747808 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.117010335 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.153579161 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.104127308 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078798993 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.094833972 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103086037 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.193728544 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.126817059 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.173615604 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.097426978 seconds)
    (43/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.103223403 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15364879 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094095112 seconds)
    (46/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.076127757 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079533493 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.181240142 seconds)
    (49/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.172200254 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070299337 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.103158531 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.214062003 seconds)
    (53/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.115532436 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.145877603 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.159582663 seconds)
    (56/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.239342587 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.080621596 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.07131072 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169700583 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073919439 seconds)
    (61/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139865676 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143796617 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.179284274 seconds)
    (64/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.20779966 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.071710666 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134933619 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.180302667 seconds)
    (68/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.106237182 seconds)
    (69/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.056755636 seconds)
    (70/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175669639 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082750383 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.056302636 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130424572 seconds)
    (74/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.104597287 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.147757849 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093373744 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.1832866 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.120724931 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.175074702 seconds)
    (80/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079947811 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143172089 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.185328236 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082846522 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.122502156 seconds)
    (85/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178504496 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08061342 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.072826633 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.113842665 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170413127 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133863079 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.124816602 seconds)
    (92/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082827922 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.169490474 seconds)
    (94/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065163655 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.177097527 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.071813744 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056704776 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094522698 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.251279815 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169661635 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079338852 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070883302 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.102564686 seconds)
    (104/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.072380278 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079573037 seconds)
    (106/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.095079733 seconds)
    (107/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098777153 seconds)
    (108/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.088769528 seconds)
    (109/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.056694747 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.084941567 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.128150612 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099985936 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.154617799 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.14543013 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.099065412 seconds)
    (116/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.079728088 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.148780186 seconds)
    (118/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.140677752 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.201909041 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.144937679 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.104871886 seconds)
    (122/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08868495 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102989678 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.097319889 seconds)
    (125/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.102316375 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07448124 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076894152 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.101469593 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057887349 seconds)
    (130/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.087670722 seconds)
    (131/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078447591 seconds)
    (132/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.131380313 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.102379239 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071970247 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093578976 seconds)
    (136/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073356048 seconds)
    (137/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077911631 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.123105301 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071352521 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.101843926 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0721488 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.163563966 seconds)
    (143/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094600589 seconds)
    (144/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.098028783 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.079824673 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.184161248 seconds)
    (147/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.106870655 seconds)
    (148/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.090451074 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07995505 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057694599 seconds)
    (151/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.120911586 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.080903742 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.208967836 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 0.158261576 seconds)
    (155/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.155650303 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.080060351 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.293353785 seconds)
    (158/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.079576735 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.101581132 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.098065631 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.102931926 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083278875 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078844984 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080332436 seconds)
    (165/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073092813 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.072603841 seconds)
    (167/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.121964876 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.078194067 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095018529 seconds)
    (170/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074930763 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.108015386 seconds)
    (172/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085323381 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.108490652 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.07127692 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.099077443 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.10136919 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071193771 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05640436 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078814095 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09637637 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.104038468 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057448424 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078128509 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.105526418 seconds)
    (185/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.077238127 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093650627 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.057068901 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070853359 seconds)
    (189/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07999653 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056600778 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.057462134 seconds)
    (192/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073219101 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.148384391 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095479347 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143498663 seconds)
    (196/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.140305291 seconds)
    (197/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.175456952 seconds)
    (198/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.104139314 seconds)
    (199/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.080084913 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.095098247 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071587329 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.056948378 seconds)
    (203/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079150575 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148458992 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10987971 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147870744 seconds)
    (207/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.10121256 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073592429 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056579029 seconds)
    (210/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.121463323 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123871627 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.10649412 seconds)
    (213/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070815063 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.107298843 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.172524229 seconds)
    (216/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.078921231 seconds)
    (217/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.058495616 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.204334408 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.148388497 seconds)
    (220/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.092020608 seconds)
    (221/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.11745832 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096665218 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.072351596 seconds)
    (224/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057857249 seconds)
    (225/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.207043176 seconds)
    (226/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057888112 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.095787839 seconds)
    (228/309) benchmarking ("sort", BigInt, false)...
    done (took 0.222784142 seconds)
    (229/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073686592 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.095786875 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072459471 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067065869 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155658054 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.056040732 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095839604 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072116974 seconds)
    (237/309) benchmarking ("sort", Float32, false)...
    done (took 0.15995219 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.106797959 seconds)
    (239/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.106139851 seconds)
    (240/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071353103 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073690111 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080969361 seconds)
    (243/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.057923638 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.124846792 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057342018 seconds)
    (246/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077927227 seconds)
    (247/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098358998 seconds)
    (248/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078403011 seconds)
    (249/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.057746618 seconds)
    (250/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09963989 seconds)
    (251/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.056945134 seconds)
    (252/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.057703712 seconds)
    (253/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056413568 seconds)
    (254/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.102082589 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.072137678 seconds)
    (256/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098716286 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092421193 seconds)
    (258/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072977546 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079011835 seconds)
    (260/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07435805 seconds)
    (261/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05733165 seconds)
    (262/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.139436878 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095826771 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100899109 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056689381 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.129536539 seconds)
    (267/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082904183 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.098985017 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.080334146 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077911623 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101975522 seconds)
    (272/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.057666969 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.214390246 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057469284 seconds)
    (275/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057857416 seconds)
    (276/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.057727593 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081661978 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150959195 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.10100435 seconds)
    (280/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079743067 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.057578674 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.105066166 seconds)
    (283/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080270865 seconds)
    (284/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.149562609 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.071163323 seconds)
    (286/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057085347 seconds)
    (287/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.09645311 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070448725 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.056275003 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080475907 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.098223927 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10266432 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141873676 seconds)
    (294/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.16917357 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077042443 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.08218823 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056580992 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.088518864 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147333544 seconds)
    (300/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.056076215 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.127547906 seconds)
    (302/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076383967 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.10087796 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.057086656 seconds)
    (305/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056956067 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080377856 seconds)
    (307/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.058848119 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097821796 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084012848 seconds)
  done (took 35.46622395 seconds)
done (took 36.342928733 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088361874 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123650291 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081143195 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.12501893 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086828147 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.109375758 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079711678 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10854883 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087070336 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.112956901 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.086266485 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.059271736 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104629179 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080847623 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104419665 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099782252 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107973964 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079249437 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.102907293 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070537594 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.080470693 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.094283983 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073286779 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.060241359 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106723811 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078683094 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.102710655 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080722182 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07096587 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094152049 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074497846 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.102939174 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070549264 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085319064 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.10125008 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079932227 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10548819 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083129212 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072919553 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.094800345 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079431102 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094095888 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078700808 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079341902 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.101473443 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076776368 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.1033428 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086104185 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123792127 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074505095 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081122261 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105990504 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083384863 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.101705109 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074811868 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104187555 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076551922 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124529271 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.080378771 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074320502 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.104695005 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.081351946 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.102296202 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.080112827 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080896763 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106204949 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082527526 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.101278527 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.082324826 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077395866 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.095211421 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081225379 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.098401535 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071712098 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081671412 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.105619359 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.07071051 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.099835368 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077783557 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078148408 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.094103287 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073454164 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072733014 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099647238 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072425963 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058284709 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.098199431 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077885125 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.0945966 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080899469 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07708257 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.102314067 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07351937 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106561262 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.07157836 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077722306 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095087798 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071649152 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073513296 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.098406508 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.07112823 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097624351 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080540945 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.073536894 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.101498536 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.085937916 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.095141826 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078365048 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.071539402 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.094656816 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.089192598 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.105815718 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070918042 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073901553 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.093553497 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.079391013 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.071371602 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094502088 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.07179289 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094920601 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077822072 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071602126 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096653292 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078886781 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.085903576 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.09761484 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074401103 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096722893 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071973313 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077709284 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095110533 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.07145799 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073364578 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.09238913 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074075796 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071093224 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.103036421 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074431393 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.103556091 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072965481 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080116602 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.099237938 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077478354 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.101125422 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071081784 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06460925 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098736837 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073247283 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07323915 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.095450209 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072853523 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071565153 seconds)
done (took 14.110607961 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07194688 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184129602 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132260884 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100995695 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115943405 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069556209 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104413926 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.13522507 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071119894 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13292471 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09133467 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111982187 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145493256 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069679136 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071521892 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099803675 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072777486 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.122170898 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.111755419 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.117614772 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150302307 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069756503 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.130042397 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120544586 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097796302 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126359749 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072428251 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.098785529 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075311496 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134523212 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092553848 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075661912 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095848057 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133195183 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101085393 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114966934 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06956986 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113445462 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070823205 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.09278453 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.101101218 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128180298 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109598181 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08774842 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094894164 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072609354 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073370208 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117226187 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120258407 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08675868 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.117097396 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.142279847 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073113413 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.111618095 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068086436 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116596883 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089450358 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094451664 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070700469 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072499041 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.092666774 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074547124 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.118769218 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.123269884 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074286623 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.111495272 seconds)
  done (took 7.638397973 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090744239 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.12463578 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.092473177 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115273242 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071606285 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.073034411 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.096581492 seconds)
  done (took 1.598277129 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073026643 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.096387488 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.120548547 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.097994188 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11771532 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095943762 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105588728 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072901164 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113467728 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072487133 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118748708 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11319794 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097995424 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078275721 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11961563 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071211608 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097303744 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094436563 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07390852 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117479692 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073464864 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115364427 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072643064 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070826652 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11020191 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.073093216 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146836984 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077332254 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098154419 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075783738 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071136244 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.148376345 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109179728 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081577018 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093773483 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086835243 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.111334222 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070046208 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.090701028 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.102801039 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087507372 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098252684 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.074310228 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071578637 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102150847 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.085336069 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.098917498 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.074140028 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075707954 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.118659797 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073647778 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111828783 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073373097 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.078516519 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.098085531 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079109034 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107124658 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073612756 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094659593 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098936125 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.093053424 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116000911 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.088041508 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115116165 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075624479 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.113464944 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088048298 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075973752 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099030602 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076821194 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.115921804 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070405629 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074180369 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.110396518 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074692381 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.122608474 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097979989 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09934745 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.0837644 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.097684553 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073489679 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.073678295 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.123130567 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077073544 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097900311 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077946648 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07608424 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.095718024 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.072231536 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.077093835 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095489459 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07383376 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09996635 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074383366 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07598804 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.115286188 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073293891 seconds)
  done (took 9.883461081 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073669239 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073975117 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098831081 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07324042 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074174984 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097817796 seconds)
  done (took 1.445153757 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.104550395 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097847495 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085573759 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.101041877 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112787619 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109820569 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087464997 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113022783 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08992948 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10787896 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087102757 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111711943 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094109612 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104136731 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087353549 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.103248899 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087572478 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106395822 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083581208 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10236818 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.094296414 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101664205 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078443128 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111636306 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075169596 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101799193 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082628898 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107935333 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085111182 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112052569 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078125341 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.098409352 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076272529 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111319255 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088043579 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099686546 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076371913 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077248441 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104841414 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075412006 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110579193 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078936484 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106389082 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076498642 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11179137 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076270232 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099412744 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081999082 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110382858 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075318675 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.099520396 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077207898 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098643552 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075250906 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076606943 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111193171 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098629324 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087314095 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.101697606 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075897 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074692571 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098658137 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.088077925 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098693334 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085641204 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098490165 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076731476 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101272053 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07777943 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.101324612 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076545754 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097472935 seconds)
  done (took 7.671640329 seconds)
done (took 29.170210365 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.671668948 seconds)
  done (took 1.617340047 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.829250501 seconds)
  done (took 1.777456029 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.682108887 seconds)
  done (took 17.633029339 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.672470648 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.825480324 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.841218028 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16198684 seconds)
  done (took 3.44911221 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.916339272 seconds)
  done (took 1.888358417 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24930526 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261267453 seconds)
  done (took 1.462730096 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.757574953 seconds)
  done (took 1.708531259 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.322590317 seconds)
  done (took 2.276143018 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.348921833 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.19090805 seconds)
  done (took 1.503847863 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548887834 seconds)
  done (took 1.507585406 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.150315302 seconds)
  done (took 8.116331055 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238436973 seconds)
  done (took 1.210814622 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.279345051 seconds)
  done (took 1.237320418 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.44177912 seconds)
  done (took 4.405646054 seconds)
done (took 50.739675178 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084074877 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086686485 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10859711 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083878473 seconds)
  done (took 1.323022483 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084246704 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.080106875 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10778694 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078390426 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109593228 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078839748 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.106434777 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.084445256 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103900027 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.080310521 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.079432169 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104312079 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.082886922 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.106455478 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077497794 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08216353 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.108324698 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.079944638 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.107340233 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080604529 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.101389291 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.081408512 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107390864 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.078651819 seconds)
  done (took 3.161605825 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083616704 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.079191592 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.106371759 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.078432563 seconds)
  done (took 1.321555899 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082729077 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.125266844 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.096997267 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.109262764 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100453584 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11927463 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074455032 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07503184 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101167923 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08307947 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.097771855 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.105498545 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11756855 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080914153 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.108407513 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070790333 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.099223957 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.094334711 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082261295 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.107496704 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075954209 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.106841148 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072044782 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.123845984 seconds)
  done (took 3.286041458 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083815705 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13480036 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086464386 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.122499926 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099336083 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071769459 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.107315698 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097581127 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.15886547 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.094252278 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074236058 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070236731 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103341387 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070264928 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083552591 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.141640853 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.145747345 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07520632 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130025593 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071105001 seconds)
  done (took 2.991952389 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081498047 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07677503 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096748636 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074876531 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082856335 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103970877 seconds)
  done (took 1.49730959 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073684366 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073505757 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098158172 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072671049 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07780308 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.098401325 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071981626 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07407511 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097643325 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.073633444 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.097969879 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071738044 seconds)
  done (took 1.958833207 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.466653415 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073103665 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096945778 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070168207 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075922168 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096849191 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.087174223 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.074636197 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.124022708 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072933634 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.098828094 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073960428 seconds)
  done (took 2.393189997 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280770055 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082454253 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.33971341 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17581519 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144989603 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164306367 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135523307 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124650709 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.212278636 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147811131 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243618506 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237279175 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116169651 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202121604 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094748375 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.141744612 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22229742 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207571502 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137071121 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236836315 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192808236 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166071682 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214596039 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134650972 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142688862 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153688451 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077095137 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11377066 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251301975 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174341098 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217322188 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148951841 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103384844 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249515958 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236261186 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207746267 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169925895 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090050523 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.165727061 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174342102 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269538964 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1227105 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234679172 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117389311 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115119151 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182984271 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155638282 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.157012641 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143419583 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120511003 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208896612 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224583564 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199176757 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09214105 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144084871 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150106224 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.153703109 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137862637 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26333037 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235405704 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17253095 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077305851 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131696063 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229473303 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171490444 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153038913 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164495798 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128649972 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179740814 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222594713 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151929287 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185262361 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.192808864 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095903935 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154228062 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205212685 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165129782 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243922405 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164467333 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077926018 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160455344 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134251897 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1114755 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.151707647 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105471845 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246887636 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105482901 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.147158373 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144901374 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14409467 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143921779 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232279106 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189662616 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136860345 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070161683 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13639332 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15694435 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210436084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093705846 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141484272 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15485334 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107632532 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174425861 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104411267 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159736077 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082771552 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185688003 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170067184 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081114256 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160326823 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134082727 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.134137249 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1725558 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230555367 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096463641 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113733767 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24081726 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163580368 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137830291 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187200413 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225410943 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.133290245 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108106608 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213504984 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255469162 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120070267 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209576559 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137443527 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114268735 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094330722 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188137675 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122736134 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155434104 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114032229 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162423911 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240584665 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079120968 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126196488 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172414637 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112640747 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111683542 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146673659 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107350121 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12689281 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.134125926 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140439025 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179469318 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16355025 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140312961 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162823208 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13144827 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232277817 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120445917 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.137002 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110212243 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099575615 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172904977 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229097427 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084800024 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238782799 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16317688 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136319096 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155674115 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088573119 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205257099 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083039696 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100287695 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182790002 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14620266 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145706292 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196799908 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136646965 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163048735 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157213037 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19531294 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168996035 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17087776 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138616846 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118526555 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147851192 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164308566 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077675252 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127309072 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113093518 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111920119 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126353056 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114620306 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181716288 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164205549 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129900152 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147714135 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13219759 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190725099 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107923553 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16874712 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.155834731 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126118773 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198119129 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227355578 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173661492 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133820387 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210550144 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076024666 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079141413 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122439642 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164802624 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115044454 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089529829 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176266917 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191238507 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164408479 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202313119 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118848182 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155865776 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225720414 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075164849 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.152118315 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219630464 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162350781 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.139714127 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116791019 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.132182601 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184549157 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138923475 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25787419 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151400167 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160272893 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221007504 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.136507458 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085085622 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139912178 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177864142 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139340408 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220900098 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135891263 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097928605 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146988893 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113115592 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139144782 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165303882 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155162543 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200095473 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.127156097 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197795009 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082734912 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151287171 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186704218 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165459198 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069273508 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155506047 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235207083 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127581073 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154895756 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199170172 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111290276 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.158005878 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253593387 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186970148 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116081755 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143046269 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157705247 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16636695 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155044462 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178516261 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143911315 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19720852 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117729026 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.11594625 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11975981 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104297797 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141822407 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129082409 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147960915 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152471364 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126288183 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168954164 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145124436 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145839468 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154841026 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.130005309 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098099899 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130166812 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247986762 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15808032 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246251359 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.107764132 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.217254411 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242242818 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080208382 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113123802 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.087096399 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206495183 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090282688 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198645038 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.102889613 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136579796 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163124048 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182797087 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128308655 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09901627 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118606249 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199275134 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144721234 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106067132 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.140834252 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234564563 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137086521 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085192573 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16316936 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137493558 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137069137 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249923376 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065600464 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132375653 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081459358 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113726899 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168361961 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228191598 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.0891141 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160594952 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155855938 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159235619 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16784558 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133461541 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129398231 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146917137 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19045802 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167826912 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.123201294 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148900526 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167427832 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228396922 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139475563 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12839141 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21368446 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224627697 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.235440206 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094056539 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149793627 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151608882 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14894724 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207995469 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089556795 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238230212 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113700507 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175331908 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136173874 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125535019 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166048569 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.129112666 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122122568 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209603335 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155107221 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114457185 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086260482 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15133853 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158594608 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134753544 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10536625 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178664713 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.103358942 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176468588 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240691048 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086612085 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140141631 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127498427 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088284181 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142017217 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136900903 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118653054 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.126293015 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240535194 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.125097643 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219960123 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179157046 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150052313 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206111148 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133939908 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671976643 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08420728 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226909807 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154670891 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25409462 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132324649 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157415541 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146289935 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159960471 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182821115 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139742367 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.211608235 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170125898 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156199433 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110073407 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13760278 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146598254 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095256488 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140544689 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149799175 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150709043 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133853721 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156727917 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193872517 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.089070225 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128633676 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202536902 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155832114 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210617107 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180383855 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117394345 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15612679 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181508051 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111623226 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158999611 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225522066 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143421852 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13307149 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087912547 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142685262 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244188619 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079456714 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234597397 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160828488 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144187294 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149853845 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.157229993 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197617658 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14326884 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164557736 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129509471 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149944939 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154698991 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093578167 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.111654919 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143322342 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152380328 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.133767726 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111941228 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152255114 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219855174 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077017619 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128908565 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110813028 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213774506 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251899755 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095543147 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11753774 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155130956 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147941495 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.153366769 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161868902 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112806162 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08852172 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.115250194 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.120351782 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142381574 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151888145 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135212243 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146510081 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239076257 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089839729 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.262027766 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127406692 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14471952 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074265422 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112738065 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103902072 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129731357 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13929645 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130579289 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218289475 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129591508 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123375038 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125748717 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077619314 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115728873 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167694575 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147116487 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158198628 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130615798 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067766291 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144769471 seconds)
  done (took 75.375768994 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149952608 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.124063803 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.134597453 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.195494687 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166297521 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263041948 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.200775432 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247070068 seconds)
  done (took 2.527552647 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075241971 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.123259097 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10910925 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.123347069 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093567274 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071600546 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.311301159 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.116472001 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094422412 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095012763 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124988173 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095816106 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.496564399 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072061314 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.102013431 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089206847 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071427122 seconds)
  done (took 3.313692546 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.454657537 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.669700417 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.455991207 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.104326634 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.024833385 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113340837 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.582946633 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.16998937 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095512811 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.441078043 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.737643602 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.156889579 seconds)
  done (took 18.049068268 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079821857 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07484796 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.119205195 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091540579 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.106580368 seconds)
  done (took 1.517878884 seconds)
done (took 119.675871687 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085272821 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390707835 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058578908 seconds)
  done (took 1.534716381 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090908799 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0928354 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.122024102 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.092042494 seconds)
  done (took 1.458649112 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.080865012 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083258213 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.121188106 seconds)
  done (took 1.347069933 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.306090296 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17948302 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09680285 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088786216 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083606047 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.113298081 seconds)
  done (took 1.346657677 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078531156 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.082548471 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107794234 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.084413347 seconds)
  done (took 1.403978993 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08222942 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058506114 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060169793 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089864221 seconds)
  done (took 1.353776521 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095530596 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.112128083 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08584375 seconds)
  done (took 1.352157499 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.116249211 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.118829856 seconds)
  done (took 1.288839163 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086925862 seconds)
  done (took 1.135402907 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097692708 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148709708 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.175260034 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.149115616 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.185441213 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.150351534 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.12284863 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.096077149 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.112728955 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.125601632 seconds)
  done (took 2.416490839 seconds)
done (took 16.354503693 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083231387 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.397728253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365076532 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123304732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.692502748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388110578 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985426856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125498287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113983749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101788023 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088487209 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681394579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975291961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.356173391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962443486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327354734 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683584549 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072711155 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097868896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072434835 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969190735 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097865713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07186182 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099015642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654404176 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377033487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098186355 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327006719 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09814436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074658664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359612183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099684604 seconds)
  done (took 16.070917249 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076848661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152848866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079823854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088699318 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102591332 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07342219 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103150546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072791392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156413013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073353944 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118542911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072210619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105858288 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073214878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091910434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102825395 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074273019 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101119634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073207279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073093621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11995392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072851763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101078745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073565446 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072853817 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111272882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073575336 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098500825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072346742 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073734112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104198921 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073319251 seconds)
  done (took 3.972726834 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122151822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.161056979 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079340246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136580632 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.151184097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076873492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.183398027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101772368 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161770411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075338642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120883 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074550107 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.138028946 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075930198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.124887675 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075363686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.104000227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07584022 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075075088 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102544611 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.095550323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103434089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074669198 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075788492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102137794 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085444403 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099910637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0758237 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099103646 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075417183 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075537737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099132064 seconds)
  done (took 4.345620638 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077263073 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.082079295 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117937964 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089703407 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104330917 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077883019 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078425118 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.105500249 seconds)
  done (took 1.794390576 seconds)
done (took 27.229498773 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085439318 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07536393 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108375719 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087543632 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.108090432 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.086225176 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072999246 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.110690978 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081170611 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.108013629 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083109745 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.074674074 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.107004956 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073886125 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.081597047 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104259253 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08745964 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107059999 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.087089698 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.116989583 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076307882 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081823919 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110307193 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.086482611 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.116635025 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086752805 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.115313226 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.080181642 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076573961 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.104847885 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.084020271 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.120991174 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075198445 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.115272122 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074069441 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074321651 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.103522258 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074600623 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086557357 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.1100936 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076498927 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109694969 seconds)
  done (took 4.946042711 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096232054 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.100806085 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.122219033 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067853195 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.104420524 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066563697 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.126764858 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066058234 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.068038954 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.125859333 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060962904 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06390748 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.094929039 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059371068 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063369712 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062321147 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.095164175 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06172825 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063304392 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.092852674 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.066300538 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058818848 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.095640769 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064627889 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061188108 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.067667106 seconds)
  done (took 3.144224678 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081086105 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089204006 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122399374 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137132289 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.141253405 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079673081 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110202681 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090984683 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116546451 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071494431 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.103337464 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101369803 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091011237 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106376855 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071975469 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114961871 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085921289 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073466717 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106798409 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092973581 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116876163 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082343048 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.12149321 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084135071 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071374036 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104402231 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.078089118 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.117534041 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079843607 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08314807 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.107103725 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.077871286 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.104895688 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087118874 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.10706952 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.076311577 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093677663 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113527477 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08258894 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103782816 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078075567 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074999431 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.12508682 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.120482971 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103243276 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.092855251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112178325 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084059077 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.102367307 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092795764 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083479154 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.102616342 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.077931852 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073363703 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.103629717 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089548571 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.105434054 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077434936 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083003942 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106683952 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087444244 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107416007 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.091295779 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073520566 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.111872885 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073169459 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.103961382 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072612448 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09812483 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105409839 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.118129002 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.105440432 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.075428057 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.113543595 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081811811 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080265352 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.10488327 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091060585 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114375676 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.078054383 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.112327031 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.078746083 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.077787032 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.122655002 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07690482 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.0757298 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104336446 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081591706 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.106433985 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075470013 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088116234 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.104009619 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.077774188 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.122925598 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073286341 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075624516 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109918309 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.079261488 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.103106583 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088595546 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108211643 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.075288712 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.084164612 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.103907959 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078057139 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.113887853 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079351124 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.07309778 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10941203 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081267023 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.104673169 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.075796447 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.077030172 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.106294131 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.084119471 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080841861 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.109830462 seconds)
  done (took 12.123680213 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.210920384 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.1965869 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.077014621 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.191041625 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08534042 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113437312 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.192246126 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.106992686 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102015916 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073398681 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.10335205 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115699682 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139645923 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.155487832 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083825107 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072455655 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.122040604 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.144987618 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.191651259 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.156253591 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.123809632 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082564293 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.106872187 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.076008873 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076241469 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.113968306 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.124995016 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085038393 seconds)
  done (took 4.515003287 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.090250428 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.137255821 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079997517 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.127154359 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098630951 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.104487058 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078829632 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076667235 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11716168 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086592154 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103400814 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.079462446 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.111108284 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.084115056 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.075478561 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.113419467 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.084094104 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.106257298 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077487702 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078588958 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.110189754 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08823873 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107701835 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071150967 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080940669 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.101445281 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070711096 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.121831703 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073229459 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125391567 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.072911358 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110501132 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083348846 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074647038 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.103448796 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076367421 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.106373523 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.077002389 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075825326 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.10363678 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.073677444 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064135495 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102792777 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.088624535 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.110118135 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.066425822 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.081379411 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.109085104 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079494646 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.102205143 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.078036532 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075923961 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107348016 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081952873 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07966685 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.110016703 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077817814 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102904076 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081449682 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076491406 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101252516 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07312245 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078695409 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103521235 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082946478 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.108511876 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072568594 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076920913 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.107774889 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080028405 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.106541242 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077607211 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071609104 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.107854313 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07924602 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.079518953 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.107175785 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.073265569 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.104400632 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074820419 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06161427 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.10455859 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059628788 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.077534005 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.102802787 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.073211298 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075687661 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.112350924 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.089208536 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.105090558 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080345977 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.105019489 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073346857 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.077881967 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.098326245 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.077541002 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.090194569 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.120628036 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10356304 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.07231175 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.089134747 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.109808456 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073670019 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062508615 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110999984 seconds)
  done (took 10.555200351 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098315776 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.128577774 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074151929 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086411575 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.130720966 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09715969 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108968104 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079865362 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076214956 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.121639945 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074384552 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.111943981 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.077258367 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083782577 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.129622039 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081583234 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.105097712 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.084263174 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.112550525 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.113763121 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088579891 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.119386625 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.085064841 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.104709024 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079138324 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11690542 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.102331311 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08498312 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.114910322 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.089304816 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.115147668 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.103884797 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.121143812 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.079567586 seconds)
  done (took 4.472945446 seconds)
done (took 40.819347635 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.154602102 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.379723675 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.139007937 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.011165587 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.192238989 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.142020594 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.155122272 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.151984841 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.733721239 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.142967204 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.403684433 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.767360862 seconds)
done (took 59.460988021 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.199167315 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.285205126 seconds)
    (2/2) benchmarking "String"...
    done (took 1.415209734 seconds)
  done (took 3.794491297 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.543407932 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.128799526 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.422954458 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.142228924 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.135811622 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.585261638 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.737529475 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.997470722 seconds)
  done (took 27.233131495 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.154003115 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.513246979 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.680652787 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.678178841 seconds)
  done (took 18.109030768 seconds)
done (took 58.963236491 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.162094478 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.198570865 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.160574453 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.122692399 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.243641438 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.167285279 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.142085449 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.189764896 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.14242893 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.12716172 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.157852342 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.139385793 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.158129147 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.145285545 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.150780753 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.143696233 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.217890934 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.773674105 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.535980042 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.143106046 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.163369351 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.207156007 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.146537332 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.141512653 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.190877691 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.155332311 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.138468838 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.146374494 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.641928065 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.147532392 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.245308057 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.341017535 seconds)
  done (took 187.970678346 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.146346844 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.180689386 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.26895021 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.175417443 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.561266667 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.342553208 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.278868825 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.66143422 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.159353144 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.155853204 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.391284306 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.144771052 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.44905735 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.133362141 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.157164847 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.152142196 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.447176866 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.459419049 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.163158867 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.384574228 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.170945619 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.430936001 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.344473156 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.356874738 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.188873283 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.212693866 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.148792695 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.160792551 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.335251863 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.375128627 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.155688591 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.179058289 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.744401498 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.005431902 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.168161189 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.187647668 seconds)
  done (took 148.066330529 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.414108009 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.147491064 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.145200278 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.147614763 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.179661302 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.147257891 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.695715482 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.715187058 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693530452 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.542041674 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208328034 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.447593405 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.148884344 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238885417 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.153832238 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.143882888 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.163587414 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.17402413 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.142931359 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.148489021 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.718649849 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.16188557 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.170772415 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.152326745 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.149180051 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.182376423 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.546513788 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.143041609 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.178712691 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.471998997 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.190884608 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.141442379 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.486353172 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.519166502 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259215217 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.145841904 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.181217413 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.148736589 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.423147768 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.142775912 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.148773329 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.15077909 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.764486996 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.147686315 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.699391594 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.143231347 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.099792287 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.149614014 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.148725818 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.149946957 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.804256038 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.151945947 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.14698966 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.71410525 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.149460327 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.148528548 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.150155167 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.147365787 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.149583633 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.182846416 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.910413581 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.250309467 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.150366787 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.15448652 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.177701497 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.148729394 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.466133934 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.144206098 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.133912198 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.206157924 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.370556812 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.724254117 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.149833512 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244816862 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263799154 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.145316361 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.148955247 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.15133091 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.148913163 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.149870492 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.258478497 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.144782104 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.577814252 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.149749709 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.151251708 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209191335 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.246457908 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.146709715 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.501988948 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.152834455 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.150461313 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.936698428 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245979714 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.146926787 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.14949692 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.151283422 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.579796448 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.722794063 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.37879439 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.15150772 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.727427056 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.152863351 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.588306664 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.687273039 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.780498623 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.152187902 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259959264 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.151290545 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.151606321 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.150801011 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181347102 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.152243172 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.207411461 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.152041603 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.548577059 seconds)
  done (took 341.773742211 seconds)
done (took 680.309481669 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.836670698 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.787063784 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.916323325 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.798154692 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.783590606 seconds)
  done (took 10.214055925 seconds)
done (took 11.30496934 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.336453756 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.334953412 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.207774276 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.341598348 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.180442303 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.35881118 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.316497615 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.171014779 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.25515561 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.229993176 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.255319124 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.201585824 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.181358296 seconds)
  done (took 17.461322374 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.466656232 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.455922916 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.213134415 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.464332001 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.188527821 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.468444329 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.345552219 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.383743358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.344290721 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.164435991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.166684107 seconds)
  done (took 15.754478626 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.469584005 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.466836508 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.215187309 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.47830046 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.190938651 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.475704057 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356046269 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.363002054 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3543754 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.182504697 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.169253459 seconds)
  done (took 15.815305538 seconds)
done (took 50.124431281 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.165229356 seconds)
  done (took 2.257235967 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.198885928 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.361883259 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.178133673 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.17048249 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.165846502 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.168472034 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.170260072 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.165899677 seconds)
  done (took 10.673210164 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.162209438 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.166113976 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.161780245 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.160186037 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.164083429 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.165292225 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.16172397 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.16638354 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.165230267 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.161170672 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.16274929 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.160726917 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.165083081 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.164842403 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.159990122 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.161650136 seconds)
  done (took 19.704721927 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.165394132 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.161641217 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.159631746 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.163224696 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.162191747 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.161012381 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.163309441 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.16050729 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.162163491 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.159534916 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.163001344 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.161437685 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.164243452 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.163224382 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.161822942 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.16362477 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.161738616 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.161726067 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.167664583 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.162351095 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.164569816 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.163300939 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.162212731 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.161351743 seconds)
  done (took 28.995874614 seconds)
done (took 62.725872525 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.364701562 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.784649373 seconds)
  done (took 9.24413369 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.166077443 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.165203348 seconds)
  done (took 3.428137851 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.166285524 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.165854529 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.166928939 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.164651152 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.167296153 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.16450192 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.16459949 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.16772566 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.16660549 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.164090945 seconds)
  done (took 12.753413587 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.166729981 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.167803883 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.164345054 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.165518454 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.166866521 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.163131417 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.166490949 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.167016221 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.167008493 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.165621534 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.166772994 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.163913226 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.167185216 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.163429352 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.164839716 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.162536457 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.164105213 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.164259972 seconds)
  done (took 22.07108728 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.165634626 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.167724431 seconds)
  done (took 3.429959461 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.16473015 seconds)
    (2/7) benchmarking "second"...
    done (took 1.166357486 seconds)
    (3/7) benchmarking "month"...
    done (took 1.162221311 seconds)
    (4/7) benchmarking "year"...
    done (took 1.166014515 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.163708119 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.166631434 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.167830151 seconds)
  done (took 9.253517357 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.168287896 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.355356601 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.438662442 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.797425403 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.169253739 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.170727069 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.02811357 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.171025561 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.172359793 seconds)
  done (took 13.569665627 seconds)
done (took 74.846488727 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.176566499 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.153477254 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.10124433 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.177878515 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.168232067 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.503345164 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.188711893 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.293122946 seconds)
done (took 36.860298199 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.175392745 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.865031807 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.866214046 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.160944007 seconds)
  done (took 10.990564203 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.156875577 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.122155929 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.143857145 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.212403264 seconds)
  done (took 17.733812424 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.787224944 seconds)
    (2/2) benchmarking "read"...
    done (took 1.487354812 seconds)
  done (took 4.373918559 seconds)
done (took 40.370615492 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170143595 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.169684391 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.16818313 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.169121979 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.166625779 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.167162375 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.168803183 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.168938009 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.169832896 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.167112556 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.169165865 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.168679738 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168602506 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.166573516 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166104047 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.169181143 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.166644088 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.167584972 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167082583 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.168885939 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16747571 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.169133459 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.168680105 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.166267346 seconds)
  done (took 29.13589765 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.170191976 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.16477979 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.169469762 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.170803067 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.167856704 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.171048435 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.171713711 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.167650839 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.171354136 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.17022664 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169322579 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.168198159 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.171160186 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.166899371 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170109392 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.168016401 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.172899141 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.167039384 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171621396 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.169909512 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.172208556 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.168274554 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.169327215 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.172845411 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.169108214 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.168577108 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.172333884 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.167812037 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.171044509 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.169411918 seconds)
  done (took 36.192245986 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.175300365 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.182039053 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.171813728 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.172491193 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.172754555 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.170700754 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.171581251 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.17324643 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.173642508 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.173309538 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.173419427 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.172467966 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.173412354 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.171602702 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.172525124 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.17102339 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.173256569 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.174584122 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.17304439 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.172448242 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.172624922 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.171777595 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.171364034 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.173055625 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.172020538 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.174254903 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.172894693 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.173943969 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.172781277 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.173041287 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.172277261 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.173335019 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.173005728 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.171461299 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.175013686 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.171781598 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.179041722 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.183142722 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.17477668 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.172480259 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.175059029 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.172002062 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.173703691 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.173973297 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.174532551 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.173060812 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.174275638 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.17319303 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.176270899 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.173151828 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.174773275 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.175112035 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.173146522 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.173268146 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.174603447 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.17339591 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.172418374 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.175253011 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.174612706 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.173279468 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.173672045 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.176287888 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.17410572 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.175228221 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.172112486 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.17354409 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.182711339 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.175593991 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.174114467 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.176180984 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.175619426 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.173515332 seconds)
  done (took 85.623174664 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.173496912 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.172773826 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.172783801 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.171368699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172215961 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.175491048 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.172035728 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173216921 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171423979 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.175963467 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.176621323 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.173398993 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173021014 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.174376918 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175089133 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.172870117 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.176986283 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174157159 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.175902823 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.174324298 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.1763844 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.172998262 seconds)
  done (took 26.932475297 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.177627711 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.177795157 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.1731445 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.176256095 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.174334835 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.177271451 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.174973111 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.175503107 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175972635 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.174342536 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17383588 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.175848807 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.175621081 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173539528 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.175973858 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.173049594 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.176116821 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.173534703 seconds)
  done (took 22.260839884 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.176708971 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.174406808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.177230954 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.175356037 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.175949026 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.176318293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.174043425 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.176173894 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.177766331 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.176687875 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.17929483 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177629221 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.178605744 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171462513 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.175281793 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.176223263 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.178462399 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175775742 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179669621 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.176261044 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.174737327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.177278305 seconds)
  done (took 26.988204176 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.18004172 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.177158123 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.17561701 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.174043303 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.174618269 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.177288692 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.177950224 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.174224089 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.177788558 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.178917809 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.1754509 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.179343344 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.174767721 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.178194984 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.176452938 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.17537305 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.179011487 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.177729995 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.178651912 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.175079022 seconds)
  done (took 24.645797747 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.179207308 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.181601688 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.180525559 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.181120054 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179378554 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.182185766 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.18089431 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.178986585 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.180246408 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.180359109 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.181187473 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.18046884 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181145544 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.182106418 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.180266256 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.180781236 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.179759465 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.183208473 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.179325618 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.180908262 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.181518346 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.180855822 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.181991295 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.1814088 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.180971151 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.181983402 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.1827457 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.179711738 seconds)
  done (took 34.175903837 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.181020165 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.177056683 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.177901238 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.178143598 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.175095337 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.179378633 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.177786422 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.175944917 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.178506415 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.176011352 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.178019938 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.178716823 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.181810332 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.182183252 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.179316152 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.18135279 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179982314 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.178576891 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.179160828 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179109458 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.181084884 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.1818135 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.182076455 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.178742453 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180150644 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.183085659 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.180443391 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.179044905 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.184120747 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.178781076 seconds)
  done (took 36.494102402 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.201209147 seconds)
    (2/2) benchmarking "in"...
    done (took 1.203115477 seconds)
  done (took 3.515434026 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.178926268 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.182854107 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.184226851 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.179250096 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.180125703 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.181393988 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.185174281 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176536507 seconds)
  done (took 10.561352546 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.179445672 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.182176746 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.182870092 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.183439409 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.181878666 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.182439369 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.189147949 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.201751127 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.183550906 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.181186849 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.18764119 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.187333373 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.185079153 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184390864 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.179651252 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183185567 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.183765994 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.184689784 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.186173454 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.180913529 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185685778 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.18354299 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184077957 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.179930511 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.18506587 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.193732195 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.188132808 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.183739645 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.184649634 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.188142713 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.182802759 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.183195373 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.185276786 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.185125813 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.183347904 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.184983519 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.19104302 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.20105785 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.190088688 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.184750406 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.183155974 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.184085868 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.184149443 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.18649856 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185184283 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.185698153 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.1861919 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.182314104 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.185488287 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.188233256 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.191963149 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182984618 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.184764411 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.188855057 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.183212649 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.192659122 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.203678624 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.188361132 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.188179533 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.198348211 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.198577839 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.194343877 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.187391167 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.18477156 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194902653 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.208392132 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.190545109 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.201191517 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.18371203 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.185160667 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.191476975 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.198109413 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.194147189 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.186314637 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187325428 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.187482991 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18546961 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.187422909 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.194340785 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.205758336 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.184820119 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186292541 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.19597505 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201981204 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.183544594 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.187025508 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.186951538 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.18883116 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.188191457 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.197653573 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.207472504 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.190193634 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.18407796 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.186793696 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.187760546 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.189502982 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.185328167 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.186885373 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.1868779 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.188172959 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.189303537 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.189897054 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.196449387 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188548121 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.189030926 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.194866698 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.187725219 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.184659962 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.193491913 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.189652882 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191660535 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.188938063 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.1940007 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.18744622 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189861273 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.197218994 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.191832857 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.190712303 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.191120385 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.18998183 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.200506915 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.214839809 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.187046428 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.187891477 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.193797251 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.204227508 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.190701189 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.19235434 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.189712968 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.187997849 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.187062556 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.189503859 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.190342662 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.188468539 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.19258774 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.190662993 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.187107786 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.19002783 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.192026836 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.190778102 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.191394224 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.18929017 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.190066164 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.191099703 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.191502086 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.189560204 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.197027954 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.187552168 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.189748345 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.19203379 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.188218162 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.190734829 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.192509207 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.191431751 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.188293155 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.19097652 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.189697982 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.188524712 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.19080559 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.190341373 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.192210103 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.190199859 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.191627643 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.191796637 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.193609888 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.189858352 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.189990919 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.192717393 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.192837562 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.191136662 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.192050709 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.189838903 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.195583164 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.201942117 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.193065055 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.190427191 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.192484795 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.193143876 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.190753278 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.192022226 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.19265165 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.198778041 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.192286667 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.196646315 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.192753515 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.193000934 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.193190881 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.191054029 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.188717484 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.1927947 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.19223398 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.202870105 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.204699596 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200865126 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.194706071 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.196424894 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.192640042 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.197580254 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.195608458 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.191848061 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.193941858 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.194193041 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.191798855 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.193184093 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.194177553 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.194637568 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.193482983 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.192151607 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.193584379 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.196072199 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.194222037 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.192879625 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19361262 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.19150787 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.195969335 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.195340962 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.194369328 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.191474096 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.192126859 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.191846633 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.191657782 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.196318922 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.200001447 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.191755734 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.193582256 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.194009199 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.192419712 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.189166633 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.193961088 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19504894 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.194499816 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.199221087 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.213604288 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.194284533 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202622211 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.209722715 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.193391364 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.19515195 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.192923403 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.194194079 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.195869407 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.199333234 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.195835329 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.196613577 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.193344206 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.192475463 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.19338242 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.201827616 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.193448666 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.193126542 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.195903771 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.195287048 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.193009128 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.194855108 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.196617284 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.195728651 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.19595678 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.196109693 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.196486611 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194716134 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.196168716 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.198930295 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.198020165 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199989206 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.208540964 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.199993027 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.198182928 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.197154624 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.197076036 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.203244861 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.195155553 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.198862067 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.19520903 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.208047948 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.206432285 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.201904498 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.198133378 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.196888 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.200003168 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.19779158 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.200298502 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.197175325 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.196461098 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.195778006 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.195274951 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.193670458 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.197553067 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.198532989 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.197876644 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.195127322 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.202918084 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.19725385 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.198121209 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.197120722 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.198697736 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.199434574 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.198115805 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.198766093 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.199050266 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.199334955 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.195043581 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.197464339 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.203880694 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.214096204 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.195330086 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.195319152 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.196379979 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.197239222 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.198805863 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.198719869 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.198059171 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.209984939 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.1999809 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.20733002 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.197628433 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209288548 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.195566778 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.202599927 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.209286315 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.194318857 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.197152823 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.198860823 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.200772338 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.204823308 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.213065848 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.20009227 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.20354864 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202174326 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.202299718 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.200261378 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.198352718 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.201096518 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.20156854 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.207408355 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.215242822 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.203184674 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.19749155 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.19734118 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.200335559 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.203181965 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.200917869 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.202023901 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.198524531 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.20162755 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.198479813 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.198519274 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.201702043 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.200954812 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.200575563 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.198213957 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.201779479 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.204905598 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.214283824 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.205028956 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.201411403 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.20675641 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200406685 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.20826052 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.215352255 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.198977798 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.202165157 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.200000783 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.202171679 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.199010136 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.202327663 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.202912127 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.197710077 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.208933028 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.203261981 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.199464032 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.197390918 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.200404763 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.198127486 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.213011907 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.224978475 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.201157198 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.206323698 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.201162926 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.2020848 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.207880593 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.202305276 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.201312249 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.202447511 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.208175306 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.204539569 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.20206799 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.201339326 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.202140932 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.202587934 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.20058324 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.202158232 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.205445166 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.204111278 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.202502768 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.201796591 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202677653 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.203407526 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.203759481 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203740169 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.200529651 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.213432715 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.203904312 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.203072541 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.206278792 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.203492738 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.202919361 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.203059848 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.206233039 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.203865289 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.203704998 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.204823085 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211485166 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.210406968 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.200667943 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.20166468 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.205159824 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.203375861 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.203905582 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.205945223 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.203849921 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.202799979 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.20629856 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.203001287 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.201468198 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.201968209 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.20384604 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.202085531 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.204202633 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.206146361 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.213534589 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20628452 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.203384085 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.20581398 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.20244252 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.199685308 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.205309185 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.211419885 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.205733358 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.216012418 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.214054931 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.211259804 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.20445923 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206901092 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.21326552 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.20414607 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.204250145 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.207377125 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.207547865 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.204658286 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.209597184 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.204434539 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.210994784 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.202817993 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.204242187 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.213806705 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.223551798 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.203906815 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.206334369 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.210641348 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.205007268 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.203150569 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.206107358 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.203953349 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.211267931 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.226493374 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209641954 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208168916 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.204710842 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.206592552 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.212193985 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.206720353 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.206500146 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.206166819 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.206181204 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.205682986 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.209731943 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.204187915 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.206582016 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.203427063 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.208169353 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.21676813 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.205990856 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209761873 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.205152218 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.20615127 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20962602 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.208789362 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.205397086 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.204203155 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.206282462 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.207504385 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.207063338 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.20864834 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.206304737 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.20736749 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.211691941 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210108967 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.208302211 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.218077068 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.215979757 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.206776055 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.205336437 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.207537465 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.208944395 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.20280929 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.206168783 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205403985 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.20687481 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.210523522 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.207722431 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.208691309 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.209855822 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.223682278 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.22688978 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.207813124 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.208101445 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.21244521 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.207926967 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.206885774 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.209194922 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.210560376 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.212243091 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.216721189 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.209530097 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.215638343 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228114099 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.208608461 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.216232799 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.212712975 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.218921283 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.209781628 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21113137 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.211415407 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.212997914 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.22627953 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.210308975 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.221032159 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236596952 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.230787569 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.212765368 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.210842803 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.207808237 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.210883804 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.212070761 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.212356898 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.210128812 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.21164559 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.210654688 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.213271764 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.217594516 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.213708427 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.210905596 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.212335956 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.209937813 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.210082401 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.211230409 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.211807122 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.211754384 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.210422648 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.210919222 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.210335937 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.211801862 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223756911 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.221908022 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.213319454 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.211385223 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.211223764 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.214880822 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.212615754 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.226589303 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.22078841 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.211837648 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.21211551 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.212570979 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.212712786 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.20802021 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.210035973 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.210178478 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.211130365 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.212446046 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.224527746 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.222746997 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.21689367 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.212072578 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215560998 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.214372861 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.21228684 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.210872063 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214349529 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.21337039 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.213724163 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.216977354 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.212413202 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.213876263 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.215212505 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.221157609 seconds)
  done (took 716.276515573 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.211803687 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211157497 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.209767503 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.211719844 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211356512 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211535108 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209430884 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.210544647 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.212513654 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.21153109 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.210920473 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212031756 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.210221352 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.214520394 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209958514 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.211592224 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211448083 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.212389843 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211804058 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.210276597 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.212114346 seconds)
  done (took 26.578361021 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.214195796 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.212523211 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212441129 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215000108 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210815256 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215666388 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.212819329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216829456 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214748537 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210209392 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216264667 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215590031 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.213244047 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.213714099 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212997404 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21680785 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216885264 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211844861 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.216442139 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214051632 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214540502 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213777374 seconds)
  done (took 27.856373515 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.217411801 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.215625716 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.214163977 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.213138838 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.217337463 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.215842671 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.217025435 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.215918325 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.214117358 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.214037612 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.215585932 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.21599233 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.222514322 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.222325071 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.21876851 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.215601731 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.362163269 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.21647291 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.213894308 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.214604539 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.215967248 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.220440408 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.214964136 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.213881354 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.21278689 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.216937868 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.2179705 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.218689273 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.218895883 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.216909912 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.222160378 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.218157955 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.21608587 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.21737938 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.215122197 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.216144512 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.220314691 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.219640346 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.214109534 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.217355649 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.225577761 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.238902411 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.218478793 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.224352736 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.21642837 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.217123379 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.220909955 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.227046026 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.215464402 seconds)
  done (took 60.965505841 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.218295615 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.216408612 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.214346299 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.219474235 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.221053452 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.217463779 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.219325692 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.219287503 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.214818684 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.215587831 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.218477645 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.216646271 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.214605811 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.220360559 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.221251467 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.21704566 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.216602232 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.217457538 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.217210687 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.217317676 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.217286281 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.218513114 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.221895486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.217729171 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.219135062 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.217447686 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.219584048 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.22008883 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.217486492 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.216504846 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.221888568 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.22047778 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.22070336 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.215353727 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.219924442 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.221592195 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.219194893 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.216797836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.22046841 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.218286051 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.220554133 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.219184085 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.219428335 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.219062436 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.218179377 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.218826581 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.218870889 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.218041066 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.216118604 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.221509195 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.22223046 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.216032222 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.22020751 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.218587753 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.222665609 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.222496774 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.218094512 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.218317926 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.221041627 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.216979364 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.220224425 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.218956739 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.21899347 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.221934275 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.22195948 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.217432408 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.21768232 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.21966682 seconds)
  done (took 84.027050139 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.221445378 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.222500414 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222481052 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222765161 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22292476 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.222435118 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.222307754 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.2228259 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.223090491 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22278349 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221123629 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.22327211 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.223266149 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.222553161 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.22304945 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223716061 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.2229316 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221594827 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223715702 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222661374 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.22319219 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.223299768 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.224216921 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.223511988 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225458022 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.222343012 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222601213 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.224455979 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225370842 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.223271736 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22489855 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.221972443 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.222878288 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.223325882 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.223192609 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.223844112 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.224591516 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224063143 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.222817093 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223061361 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.222574084 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22511248 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224663171 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.224770208 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223115628 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.22362597 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.225802135 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.223845184 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.223633668 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.226171649 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.223060406 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223590535 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226151001 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222670936 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.223626028 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.226203142 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224534179 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224393557 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225182055 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.226034365 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225880077 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.226193492 seconds)
  done (took 77.016222355 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223889756 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224945118 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.220538183 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.223556463 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223372145 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22244782 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223934648 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.224386192 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225625777 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.226920407 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223381318 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222337809 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221494041 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224620101 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221339756 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223281732 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224347524 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224526914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22636372 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223415905 seconds)
  done (took 25.626357662 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.224131114 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.22340708 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.218756858 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222658056 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.224499514 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.223774702 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.226293687 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22518931 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224472116 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224750063 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225190114 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224119456 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223446045 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223015468 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.227289546 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.224269371 seconds)
  done (took 20.739067402 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.223673486 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.226810752 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.224490114 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.227320324 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.223671582 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.225055471 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.227239412 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.222357261 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.223703511 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.227401223 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.229103547 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.226896633 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.228346028 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.226589378 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.224871865 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.229272896 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.228715194 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.223842273 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.22770177 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.229531046 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.225079261 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.227035394 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.226419504 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.228387573 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.224291517 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.226940134 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.224289575 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.226320293 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.226849474 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.228417062 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.224199308 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.227232176 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.225350653 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.225149017 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.228878068 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.227461836 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.228412399 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.227364972 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.229753654 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.226694249 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.228093977 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.226941126 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.227660895 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.230358348 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.22587582 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.228881211 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.225115746 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.225692378 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.226983383 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.227350335 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.227670233 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.229063302 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.228638705 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.229262691 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.226228897 seconds)
  done (took 68.631480423 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23037617 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228876962 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.22571607 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227802426 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.230891258 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.228342248 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229681808 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.226681303 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227111083 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226352304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227834953 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.228839774 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224373291 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227484555 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227148097 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23020433 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22558263 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.227629643 seconds)
  done (took 23.257808699 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226673443 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229167802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.230132266 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.227394967 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.228677677 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.228506618 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227266286 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.22923884 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231043795 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228830896 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227148844 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.232813006 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230837335 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.231531086 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229911249 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229081512 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.232876205 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229669956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.228022302 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229611033 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232440428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230816515 seconds)
  done (took 28.208024764 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.228315855 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.227550063 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.244812732 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.271498313 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.263834068 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.229531034 seconds)
  done (took 8.624949943 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22946431 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230407817 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.228995478 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233545041 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232863657 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227463239 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226279971 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227966646 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231654295 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23058292 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231801795 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232617728 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231606626 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229507619 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232209877 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23172633 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230500502 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231389144 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226635661 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233786483 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228748891 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23428409 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229110233 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229753987 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228721374 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231295685 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231854629 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23012433 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229420355 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233038242 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233142861 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230732005 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232124878 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232291988 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233733198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231899608 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228972071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233839395 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230511201 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230991944 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.234304146 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233543893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2339742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231941754 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234615317 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23198812 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231094393 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231944593 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229618308 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235859816 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234814189 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230295677 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233668577 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232769181 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234696954 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234459611 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231926588 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232275459 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229529196 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230416309 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231360437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235759475 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231464296 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233275649 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234262532 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230975422 seconds)
  done (took 82.446331757 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231983232 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231097872 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231239012 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231463323 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23467891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2326372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230768595 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234196837 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231640215 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233763331 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235604892 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233896462 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231473422 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232922969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234724797 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232178562 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23329685 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233111338 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234586782 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238301116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23442656 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230182475 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233322867 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236380559 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235408667 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236402296 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234132741 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234797303 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233878552 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23514574 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233733557 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233535561 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233331078 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.235191649 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233155293 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232908502 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23471368 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233074269 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23396399 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2380164 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234994657 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236473259 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235971518 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233439776 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234772477 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232827081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235726955 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234399424 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236687546 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233779182 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235516264 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234388268 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233958929 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232920947 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236336892 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235951567 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235757347 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236515487 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233960529 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238593733 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23589558 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232765923 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237739614 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234389465 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233795474 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235030923 seconds)
  done (took 82.624573191 seconds)
done (took 1670.505119532 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.243775996 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.28720459 seconds)
  done (took 13.69504568 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.3971279 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.354904957 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.233661184 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.228136072 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.229591176 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.241486753 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.252056291 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.2269995 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.232730625 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.234958574 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.235883577 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.422840194 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.250332783 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.231383279 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.234374704 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.325859584 seconds)
  done (took 41.504640254 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.26443552 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.240484577 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.35702352 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.255365339 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.261999617 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.42835598 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.294517892 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.241809672 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.422744687 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.28104496 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.906179377 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.260989273 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.234069902 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.418027868 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.251924223 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.428275829 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.50283978 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.927117137 seconds)
  done (took 29.145604957 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.7261027 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.245385865 seconds)
  done (took 9.137418299 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.231347894 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.260810158 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.256333648 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.25315418 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.273999909 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.265535396 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.272584899 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.302403701 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.269512173 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.2373845 seconds)
  done (took 63.796693507 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.260052202 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.243624103 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.23890735 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.23937004 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.2285831 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.239843647 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.240801921 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.232161908 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.153768116 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.374026283 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.25306742 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.246054452 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.240399938 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.241867741 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.236719212 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.279182095 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.360762634 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.238450763 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.238735835 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.247538644 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.237960501 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.367328086 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.279724487 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.239211188 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.377160842 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.192366693 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.243934992 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.247846931 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.352194526 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.24114222 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.238592928 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.235508377 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.24090551 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.83229247 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.740452168 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.242307565 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.26065249 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.24473491 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.237480325 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.392843772 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.243091546 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.250373165 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.246605107 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.707730785 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.396578657 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.358254341 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.579389793 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.235312477 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.245228272 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.307638184 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.244290913 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.241561733 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.269266387 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.007758786 seconds)
  done (took 106.980327826 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.270027846 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.735609961 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.403306741 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.263786619 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.102808431 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.970139671 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.229170399 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.545042083 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.271521414 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.234116228 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.575948767 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75752776 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.230610965 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.309611095 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.4631892 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.286513164 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23790344 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.082391046 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.231102238 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.237391673 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.678856558 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.251192492 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.236373102 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.386710673 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.275472834 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.721484267 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.80572412 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.746255019 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.230594255 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.227969747 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.724393059 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.238282425 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.296797215 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.234366739 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.52701434 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.61037612 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.587573318 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.236145068 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.286738663 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.234793153 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.256028297 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.718130392 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.592937586 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.230621057 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.22858972 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.715981209 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.231110308 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.243792873 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.234110742 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.442032093 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.326557233 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.235701731 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.784424224 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.230106722 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.589946943 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.237209315 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.264588828 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.742044933 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.232680622 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.38557187 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.283332146 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.23557689 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.232320053 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.240671161 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.231350801 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.601330369 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781809587 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.238511035 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.603672708 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.713832143 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.232052807 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.783061477 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.091919451 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.262344247 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.320549218 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236882866 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.89681845 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739368857 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.262279061 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.234349338 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.58945795 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.235879301 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.565926594 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.246072643 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.234357242 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.682590156 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.254817364 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.290687311 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.239728603 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.234252426 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.925265169 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.249615425 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.515267847 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.302649727 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.240188938 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.240045929 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.290367089 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.232844338 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.249423275 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.248356258 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.794219364 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.246124732 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.550982016 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.261772282 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.239287899 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.237159645 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.236335188 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.238443923 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.458389076 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.709638114 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.244363014 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.240366808 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.234946368 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.23919772 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.370011998 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.240729741 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.567365395 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.236348656 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.235251944 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.241906635 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.04084476 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.247320787 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.232110744 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.241041265 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.113106045 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.453064184 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.262042343 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.237446597 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.243375136 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.241904702 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.752809604 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.236223176 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.280569233 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.238112678 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968587353 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.247709417 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.258190166 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.9895591 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.247046944 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.243471374 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.244100146 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.243410063 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.566327907 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.529766081 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.711894043 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.236922926 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.259205946 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.945435654 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.274104356 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.390538182 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.260914732 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.277257524 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44342063 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.330833825 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.23847617 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.822603514 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.241455887 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457467525 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.243487434 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.573909507 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767228478 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.24379335 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.242426272 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.974455573 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.927000132 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.867024514 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.243486603 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.580808886 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.252494659 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.697955245 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.24178196 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.24319651 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.732910553 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.241506523 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.252627997 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.242481505 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.24280749 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.401794562 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.418760544 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.851134752 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.240152329 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.726958154 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.254376111 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.237686983 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.249927046 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.240122431 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.600074733 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.285412976 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.248539318 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.263043318 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.238635331 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.246973538 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74522596 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.113861484 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.244159224 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.401572987 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.905289937 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.244740025 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.2456333 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.868016812 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.698978722 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.769423889 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.289806962 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.575559909 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.242975892 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.285040396 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.050901118 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.257085234 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.736138142 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.241061108 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.239161497 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.870828736 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.242899617 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.594433113 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.237366706 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.244508307 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805462696 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.240303691 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.247528767 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.694027 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.239674817 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506037267 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.244149788 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.275246024 seconds)
  done (took 1093.349572925 seconds)
done (took 1358.774468265 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.249189641 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.248898437 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.23398195 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.251118 seconds)
  done (took 26.163747846 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.264315827 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.25400668 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.259743638 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.253464257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.259352914 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.257790606 seconds)
  done (took 8.734982087 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.55253019 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.248382546 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.249188893 seconds)
  done (took 19.234679241 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.481150448 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.562111721 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.640551651 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.552358141 seconds)
  done (took 10.421794078 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.258204077 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.259569623 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.259660062 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.258655688 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.265311335 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.264329408 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.261662138 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.261156947 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.266261939 seconds)
  done (took 12.538997604 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.421602127 seconds)
done (took 83.697055054 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.350074896 seconds)
    (2/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.306426943 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.252404888 seconds)
    (4/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.447758977 seconds)
    (5/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.61941432 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.36095801 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.171551497 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.136955971 seconds)
    (9/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.613603393 seconds)
    (10/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.378063486 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.526167401 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.744139932 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.284588295 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.276892611 seconds)
    (15/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.649951129 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.946684728 seconds)
    (17/309) benchmarking ("sort", Int8, false)...
    done (took 4.277952465 seconds)
    (18/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.89704627 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.441428728 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.237116778 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.370217263 seconds)
    (22/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.296743461 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.938377439 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.254193938 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.678805026 seconds)
    (26/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.281790066 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.691510365 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.249659173 seconds)
    (29/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.650938652 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.06103122 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.242395035 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.272214588 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.220612959 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.263736973 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.357083494 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.335286919 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.22736279 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.665687467 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.246665526 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.632245288 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.177564489 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.370772431 seconds)
    (43/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.273016635 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.08297266 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.225472508 seconds)
    (46/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.311148222 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.365109492 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.237628557 seconds)
    (49/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.285046546 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.751521968 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.507252386 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.249451006 seconds)
    (53/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.653600318 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.319093105 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.88221246 seconds)
    (56/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.035766561 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.239643466 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.268004393 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.42420441 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.306640243 seconds)
    (61/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.726720884 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.253489371 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.253567101 seconds)
    (64/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.250754298 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.241321065 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.256123007 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.817441697 seconds)
    (68/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.24987296 seconds)
    (69/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.485145812 seconds)
    (70/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.057743857 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.245294231 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.699405315 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.249503843 seconds)
    (74/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.260057335 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.80594554 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.880681742 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.246678617 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.744096416 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.242882341 seconds)
    (80/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.292636435 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.884566467 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.238149371 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.331742894 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.268242299 seconds)
    (85/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.720174467 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.360982743 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.485468759 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.742687368 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.363972904 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.330731563 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.137719146 seconds)
    (92/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.352694834 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.279999074 seconds)
    (94/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.639784789 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.269497333 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.618582884 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.776739182 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.25806566 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.252462577 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.89023501 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.265845247 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.680092804 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.290694479 seconds)
    (104/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.25374855 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.467251725 seconds)
    (106/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.253649087 seconds)
    (107/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.334035879 seconds)
    (108/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.636959922 seconds)
    (109/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.521228179 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.356667085 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.950454805 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.057931858 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.247132079 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.549248054 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.13957812 seconds)
    (116/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.470659913 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.85682741 seconds)
    (118/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.119701033 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.592957557 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.768218888 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.274059758 seconds)
    (122/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.810913888 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.532350575 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.538291208 seconds)
    (125/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.300279166 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.03923817 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.090309111 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.510809903 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.288441873 seconds)
    (130/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.001495853 seconds)
    (131/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.360011804 seconds)
    (132/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.222219559 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.354170409 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.255965114 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.101297202 seconds)
    (136/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.269693889 seconds)
    (137/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.137954196 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.761465418 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.069979265 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.27866976 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.021123162 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.235310481 seconds)
    (143/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.808803124 seconds)
    (144/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.316982119 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.453793841 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.860598768 seconds)
    (147/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.132336586 seconds)
    (148/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.06165919 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.285146016 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.906297407 seconds)
    (151/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.275932992 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.279271922 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.565331171 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 5.610713117 seconds)
    (155/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.44713276 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.156650099 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.144930633 seconds)
    (158/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.38000182 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.285479779 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.435206875 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.27729163 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.365291729 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.28335293 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.592313019 seconds)
    (165/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.279424433 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.263796953 seconds)
    (167/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.251298503 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.77631741 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.928888379 seconds)
    (170/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.316564162 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.367943484 seconds)
    (172/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.674682879 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.984557205 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.058873169 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.983004347 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.287440033 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.764075179 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.662024674 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.545492646 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.02261102 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.299648169 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.241137247 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.341675584 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.376766318 seconds)
    (185/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.530793422 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.374509675 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.860277971 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.330252345 seconds)
    (189/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.851500248 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.694778494 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.948128531 seconds)
    (192/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.253675444 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.392135085 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.256482121 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.267684195 seconds)
    (196/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.796621562 seconds)
    (197/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.295221666 seconds)
    (198/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.913191204 seconds)
    (199/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.487913076 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.260347824 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.154721897 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.250875774 seconds)
    (203/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.156088909 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.36283213 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.389725748 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.906611766 seconds)
    (207/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.284561057 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.253410316 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.575909587 seconds)
    (210/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.288075175 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.331726204 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.267785818 seconds)
    (213/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.300209954 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.267014065 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.491037026 seconds)
    (216/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.901976601 seconds)
    (217/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.246059675 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.301353876 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.271134699 seconds)
    (220/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.939184078 seconds)
    (221/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.655317018 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.302475533 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.272368182 seconds)
    (224/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.125376926 seconds)
    (225/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.253901018 seconds)
    (226/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.266445622 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.488007657 seconds)
    (228/309) benchmarking ("sort", BigInt, false)...
    done (took 6.26716656 seconds)
    (229/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.336391156 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.680054307 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.315982824 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.839112484 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.260530676 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.653708397 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.358826999 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.061598887 seconds)
    (237/309) benchmarking ("sort", Float32, false)...
    done (took 5.289572227 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.302719234 seconds)
    (239/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.272059519 seconds)
    (240/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.484576178 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.330653017 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.245578927 seconds)
    (243/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.239980745 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.824102214 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.726758323 seconds)
    (246/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.282832905 seconds)
    (247/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.389343353 seconds)
    (248/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.28725154 seconds)
    (249/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.567431955 seconds)
    (250/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.346972758 seconds)
    (251/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.929346999 seconds)
    (252/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.819767091 seconds)
    (253/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.169469303 seconds)
    (254/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.643456856 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.687800074 seconds)
    (256/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.288668974 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.893631662 seconds)
    (258/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.363846251 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.602435955 seconds)
    (260/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.40624472 seconds)
    (261/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.409122531 seconds)
    (262/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.690550201 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.682072689 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.361661205 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.693823639 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.240989478 seconds)
    (267/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.281543598 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.308011956 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.745278228 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.283327389 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.271886835 seconds)
    (272/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.932823031 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.264807592 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.3000117 seconds)
    (275/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.935131956 seconds)
    (276/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.948264181 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.970049995 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.25467702 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.287082677 seconds)
    (280/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.276094302 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.28315647 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.368363184 seconds)
    (283/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.291530449 seconds)
    (284/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.263670171 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.345527641 seconds)
    (286/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.782010941 seconds)
    (287/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.354616604 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.373700933 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.728761921 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.775872045 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.919362255 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.003428785 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.364961803 seconds)
    (294/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.564391719 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.323489063 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.265887256 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.794035152 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.627636165 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.264148729 seconds)
    (300/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.063302302 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.322909471 seconds)
    (302/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.349315185 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.285239736 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.595311379 seconds)
    (305/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.687079645 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.978671622 seconds)
    (307/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.250434199 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.891566503 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.247431188 seconds)
  done (took 911.598414731 seconds)
done (took 912.784268493 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.297000066 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291323848 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.274481628 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.296957338 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.388684764 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.304953269 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.285582602 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.276040205 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.323806965 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.323812671 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.2744345 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.301710432 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.278008116 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.276367353 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.27665989 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.289078202 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.445934739 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.269874664 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.291547543 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.283802264 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.29444035 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.274471164 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.328002221 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.302064209 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.28008272 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.281431695 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.278234636 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.29469344 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.391139912 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.281150171 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.280062487 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.28845891 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.392212143 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.269222781 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.26797342 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.299415686 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.286336146 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.284450245 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.280194475 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.306987587 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.820431154 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.268505075 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.276969307 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.275139109 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.276985067 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.277832352 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.277265077 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.283723591 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289749187 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289601175 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.810029839 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.286061914 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.280209588 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.275808338 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.285810409 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.278043377 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.279985084 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292025468 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.297388502 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292656332 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.378565256 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.276306792 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.281478778 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.295682532 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.284205647 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.848913627 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.263650164 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.284889648 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.827242134 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.277113133 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.849980513 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.281364511 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.283620812 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.293080517 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.313684189 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.468216495 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.275084337 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.277537375 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.284353803 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.276439515 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.292248545 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291467454 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.284752094 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.278279405 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292698804 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.309617319 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.291389563 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.279837426 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.291320239 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.299663467 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.285119113 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.287621213 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.280707524 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.27365429 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.289272973 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.280527216 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.281409747 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.279612303 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.28275544 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.290296803 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.819913822 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288601103 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.277603889 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.275435086 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.277931629 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.290024212 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.826905626 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.275187076 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.299829173 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.327796287 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.281117129 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.459675123 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.286040584 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295586103 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.287769143 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.283189647 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.276784598 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.461637792 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.827161438 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.290563465 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.283064098 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.279044366 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300633067 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.284503929 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.28058716 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.476747749 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.28315078 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298551711 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.40513541 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.294583484 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.312470631 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.281207831 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.288569919 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.309430473 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29799485 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.315730431 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.287718944 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301382912 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.30156573 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.27981443 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.29581404 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.293926511 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.283858359 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.29045194 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.279973834 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.314535436 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294304508 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292176362 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.304815478 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.405614587 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.280505429 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.39919074 seconds)
done (took 218.900322287 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.339941968 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.278587499 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.365391601 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.280300433 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.38101624 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.379890899 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.277892017 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.277961232 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.276159762 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.657559323 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.279262426 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.27784555 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.277252279 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.279419008 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.368434481 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.280754927 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.278074506 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.622248327 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.280429485 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.352363939 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.275069263 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.278663152 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.281368849 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.660228899 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.277658179 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.277863098 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.35368858 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.278823831 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.626199197 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.278622117 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.276344894 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.629267738 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.370920386 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.301049049 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.293048117 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.28970674 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.385672469 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.293280982 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.361998519 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.361887252 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.369107796 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.323461334 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.271848265 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.27937864 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.279788829 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.281848981 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.28211964 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.309614781 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.27721728 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.282104424 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.62557629 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.290991999 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.291101576 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.277923295 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.278459381 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.301809424 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.280081048 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.283932063 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.371292011 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.282622478 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.343448429 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.655279871 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.658725313 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.281260799 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.279141009 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.28041107 seconds)
  done (took 144.90975732 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.348622152 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.352095242 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.395243472 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.276229491 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.329891556 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.402032558 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.276662351 seconds)
  done (took 10.590180076 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.291159144 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.284881349 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.332373938 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.332276106 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.282296203 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.430109974 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.285491318 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.290442531 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.279946105 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.336911243 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.284407514 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.278647008 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.289211947 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.286663168 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.33360424 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.297508718 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.399599147 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.284212644 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.28626843 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.433945732 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283638126 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.290887397 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.337167444 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.293010418 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.286665995 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.29085337 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.848085357 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.282643156 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.281302691 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.286936188 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.28547258 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.321895208 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.286455355 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.277220598 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284337837 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399869918 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.286773369 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284496587 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.285799665 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.284635619 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.286738033 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.287929808 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.285516691 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.2839917 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.288042042 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.30804397 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.288713087 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.289036134 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.287777802 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.28987184 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.335517079 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.29017356 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.285602667 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.284320935 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.341982978 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.294371677 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.288852923 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.284494926 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.286581725 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.283617729 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.436766183 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.333086143 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.286975596 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.332981681 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.288049157 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.291681007 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.288294253 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.289608478 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338454322 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.286192163 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336386472 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.286397028 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.440332502 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.312517404 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.285302755 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.291779236 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.289100305 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289325165 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.288384318 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.295807319 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.287918789 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.290048415 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.293413142 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.285725429 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.28735594 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.391181818 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396397793 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.287476756 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.300490874 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.293471837 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.287961556 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.33942165 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.287979464 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.28705407 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.33888411 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.401889372 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.343281781 seconds)
  done (took 148.569671807 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.291911171 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.293987618 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.28783785 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.302271157 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.288472002 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.28350957 seconds)
  done (took 8.962667153 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.291309466 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.292669207 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.28882652 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.290737588 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.289260393 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.292597538 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.291544819 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.291702053 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.296854832 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.290691743 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.293427306 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.291841085 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.28948355 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.290466961 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.289358434 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.291595821 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.289951173 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.288286551 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.29047281 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288446525 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.386291699 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.284914088 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.290558231 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.289942559 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.295870338 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.28765306 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.296031538 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.288200924 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.291541494 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.297652091 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.294056812 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.294250956 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.291931635 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.289202495 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.294807159 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.287938877 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294605829 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.294938532 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.286940882 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.290766263 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.290166405 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289842226 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.291708782 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.295411914 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.292738587 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.2945019 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.29868153 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.294227898 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.292210011 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.292497352 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.288888705 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.288455313 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.291374543 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.290548456 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.287222273 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291245223 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.295709204 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.293643015 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.288743645 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.291610548 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.290140254 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.289940721 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.291818777 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.294175621 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.30034781 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.295967877 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.287557037 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.300673198 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.29485959 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.28895391 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.295810351 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.290348864 seconds)
  done (took 95.324303551 seconds)
done (took 409.562244675 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.36550808 seconds)
  done (took 7.582033675 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.487703213 seconds)
  done (took 7.706909124 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.425469231 seconds)
  done (took 23.645584694 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.311218529 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.337785001 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.301866402 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.278299211 seconds)
  done (took 26.44614519 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.365424546 seconds)
  done (took 7.586383107 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.29342729 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.27918416 seconds)
  done (took 13.792817237 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.347303575 seconds)
  done (took 7.563889124 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.977096607 seconds)
  done (took 8.196705229 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.287497304 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.296952002 seconds)
  done (took 14.056087706 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.272424988 seconds)
  done (took 7.493208633 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.09024285 seconds)
  done (took 9.311568787 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.297672596 seconds)
  done (took 7.517174186 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.353370952 seconds)
  done (took 7.572192827 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.907715274 seconds)
  done (took 10.123895346 seconds)
done (took 159.815468508 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.285466764 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.288795893 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.284581066 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.286172023 seconds)
  done (took 26.363239021 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.328332102 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.326763895 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.329581101 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.33914007 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.334159111 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.324050142 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.317192986 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.319676166 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.339984514 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.329786304 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.326195065 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.329803657 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.326595578 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.31527657 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.324610052 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.347805941 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.338242297 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.333319791 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.322091659 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.332359985 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.291332231 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.338537086 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.326887667 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.291052844 seconds)
  done (took 33.056590439 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.491327414 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.363141212 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.444637661 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.344011304 seconds)
  done (took 6.864547392 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.345773834 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.350216937 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.357730201 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.397190298 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.425793408 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.358658932 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.32087825 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.313126537 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.302572992 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.344475738 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.418547827 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.361336453 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.443515834 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.297416338 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.479125591 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.291152138 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.296283206 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.348310018 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.401694922 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.413553774 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.294101611 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.34556191 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.348222282 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.359698828 seconds)
  done (took 33.833800846 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.288921466 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.303542337 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.297130456 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.290728907 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.296123151 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.291621234 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.30057213 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.292114368 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.31246355 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.292955676 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.290258128 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.29155926 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.291519945 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.290237524 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.28953878 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.303515537 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.304963753 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.289087777 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.292485785 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.293297845 seconds)
  done (took 27.124294021 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.282160804 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.132976596 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.634788745 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.540169842 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.280894898 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.280467735 seconds)
  done (took 27.373553386 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.365634704 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.51354418 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.285845035 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.684299636 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.758294545 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.289420419 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.288981025 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.549622299 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.887873081 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.895082679 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.355147813 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.366038356 seconds)
  done (took 19.462770541 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.28801305 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.287121519 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.289827769 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.304511385 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.350640027 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.291313006 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.297265863 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.280999411 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.360300129 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.356083551 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.298600485 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.353528686 seconds)
  done (took 36.97929498 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370071259 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333140689 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.346961925 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.126045951 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016233718 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.496953035 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.183063164 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.741542832 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.301007216 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559948793 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289890377 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372516019 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544690968 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284853074 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288937264 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.296690692 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511146148 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822924981 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284632925 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.595962129 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32249097 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30849397 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.695554144 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.322755819 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.496979112 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267182358 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.544266866 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.064373501 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595424189 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29311005 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295624648 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289659152 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562818213 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01322883 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391255359 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29718248 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.160489955 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.929109877 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.270421957 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.60766316 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297461012 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.29603636 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297827715 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286961127 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.224176147 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293401335 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754006657 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.303742709 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.999668446 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.287808549 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298867946 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381124433 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.294888164 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.281254678 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389785814 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.294547209 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.286388958 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29687742 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865389427 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.69221225 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305036142 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.224111628 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.773467825 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.691355136 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958499928 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.391152098 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.297646538 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295953274 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224806357 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.651143343 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314799969 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431380275 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.315030834 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952774214 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048262077 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.299406937 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.221034238 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888562387 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304352327 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.231981938 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520723592 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071709423 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22726131 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.244211345 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.227585656 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0404835 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298444866 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.858459726 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.307572883 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.745719943 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.309696818 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314132762 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314024957 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.519615959 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.178841862 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293257207 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.309499661 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406020775 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311221517 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.743179427 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236168713 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.292966776 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549449933 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.509561601 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308956379 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.310907189 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507334745 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305445125 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.312016185 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.293956426 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.324916304 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.928429378 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311924825 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.192246565 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310521826 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.070592383 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07547974 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29455066 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.402527698 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.295056256 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555598571 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.08869251 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.17164526 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366379276 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.300201621 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.29781606 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.710757013 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153328197 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.176508969 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.303875098 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314317631 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.313768677 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.297456184 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256669754 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.288574583 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29018457 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.069230271 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521790276 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295666907 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595652644 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236010526 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435155256 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305222604 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.514784459 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.562810667 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.288880952 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55788563 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296413342 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309799962 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313822945 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31808761 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398118754 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324892243 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.313042745 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559754724 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.298131527 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.300870536 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.719592747 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.076959988 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305103598 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.299816359 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.196573242 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937996562 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276706897 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302230293 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195146053 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.308961516 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361466977 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304331886 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.306397587 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.340138339 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.282159245 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.306610158 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.310107748 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529625414 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305750228 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.616511258 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383241211 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.511598351 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936003715 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306160919 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.231097471 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.007863788 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.992896456 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303458489 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.499326626 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299962564 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303086166 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307922794 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.97799833 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.930342257 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293580619 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.615152914 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.310165323 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314361445 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.303015757 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30333553 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.287403735 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208773182 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306505605 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.332913609 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443267034 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.313113789 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.233077845 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.81796644 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301833132 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299156432 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.075036728 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333492132 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.628220619 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805156383 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557327205 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.137164481 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318945263 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.809305406 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.336550536 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.297576827 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312529976 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312466495 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.305597953 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301853678 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.308725574 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.743572558 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.751890923 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865822666 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064041064 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866312199 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266123322 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.313292936 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.187360254 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.757044089 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242065521 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95706678 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507360031 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.751483602 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26474581 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513107669 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.57829068 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158916962 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.317328248 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.532209461 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262462574 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.298708088 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307778086 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510265536 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333449642 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.306310226 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238428699 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.582453727 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540455976 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308537461 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377735824 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753029661 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317174733 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.07357009 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.298913246 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.822097605 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497783832 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.859155272 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.698274204 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.298545825 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311604865 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793828946 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307730979 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.82977093 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965273469 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314758836 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.523513538 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251240465 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.31184282 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.313264429 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.298971804 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.780967302 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.300398267 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.553881813 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310804786 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236800671 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.303836345 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881704883 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.1557753 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.31262555 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303661142 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093366287 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304550092 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627686944 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.311093399 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.27176713 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298803491 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.235066254 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237225236 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.994082477 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.306613851 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27794322 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842860016 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.729373344 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356942733 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332209572 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160061421 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559603889 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.313849513 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93783633 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525360385 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.279911893 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328515688 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.400953453 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304836145 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.284789938 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.201222547 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.53870314 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192059447 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.526465616 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.396437028 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.205921244 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.298737441 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.523250159 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.206448493 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317238334 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580680858 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.013897835 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.312126851 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06167937 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326475633 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315357469 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.317793526 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.789422087 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318363769 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374303107 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315420814 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.315588952 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.314963093 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495095389 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328251159 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303694118 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.322510802 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401635695 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.254768008 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.332429149 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.079562031 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945650625 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09024891 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952058775 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313870094 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301952891 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30302409 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239102752 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450968021 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.836305937 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577495088 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430339551 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.871594072 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335717721 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328743587 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313462538 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524297623 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581204134 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.180512301 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306258028 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973682501 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.20196767 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315750375 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.518609762 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856049523 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914658995 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430197025 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.306363545 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.768154034 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586424786 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396264614 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305521301 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9024182 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.324767929 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.83232613 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.317569831 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309116495 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471817959 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318015184 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045167491 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.323732862 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.466497844 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.082754043 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.74804932 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.57301068 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.869022887 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.316036587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949319247 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071803132 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567791927 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373767619 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320963454 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.43462386 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45672075 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.320890348 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.207538962 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313926543 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158677142 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.019341314 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.316582109 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962910612 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579069335 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.303471546 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.313217554 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330836094 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.324853796 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53676274 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07066786 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532911391 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322059238 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311150567 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.305126113 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960993807 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328137574 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240495437 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.310352788 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588765199 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.550019053 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336074008 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.765577091 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.020282211 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923221933 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.283987051 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33121113 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312003259 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109182661 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951490017 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.28735885 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855448439 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967706258 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327655959 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590043382 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.319265973 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328031447 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594139469 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.314293799 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.320842646 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327106874 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.950751509 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178709441 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.34273598 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.697182776 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.251510673 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.53881277 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019513145 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255283364 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317397633 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.522275066 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.317969372 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432154298 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320540204 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.326933838 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316099882 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.051237425 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60392606 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.314722788 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.303236619 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.299906718 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311986816 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317410746 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555593529 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31542277 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.986970861 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.66295574 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.570773105 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.326457513 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.300996756 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.320201021 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312581299 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037446772 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.287028545 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.974452144 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931357963 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.311181333 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.327837129 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314066774 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.528828367 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521785467 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.310574065 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324181945 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322382024 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330829393 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.223957533 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085573924 seconds)
  done (took 1583.712599831 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.333397504 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.357192432 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.349508972 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.367704507 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367176483 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.371275462 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.370243417 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.4378104 seconds)
  done (took 52.200887912 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.320117027 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.464941725 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.348238787 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.307782051 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.315583018 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.312207242 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.811856327 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.3153189 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.314920809 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.317545266 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.325319884 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.316611778 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.0247543 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.319252919 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.315019644 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.307698216 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.318201171 seconds)
  done (took 65.012645005 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.313695934 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.815193484 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.367348296 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.319245379 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.73175482 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.316665721 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.689495725 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.382745638 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.312129955 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.622033115 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.996436966 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.315650423 seconds)
  done (took 80.434990501 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.321406894 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.318554918 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.320168135 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.31987869 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.318827296 seconds)
  done (took 7.850633267 seconds)
done (took 2001.494292834 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.556665436 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.095345147 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.015514983 seconds)
  done (took 5.362066164 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.455997382 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.502486935 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.634845292 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.638099962 seconds)
  done (took 7.482854126 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.589540792 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.678635308 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.499552279 seconds)
  done (took 6.021182988 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.900775336 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.311024885 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.446445367 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.308761801 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.313223584 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.318618492 seconds)
  done (took 20.197595873 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.313774028 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.313436945 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.312925625 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.31505018 seconds)
  done (took 6.510586961 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.292246033 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.036328652 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.295102673 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.324083564 seconds)
  done (took 18.200522432 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.061778821 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.072451262 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.056254713 seconds)
  done (took 7.444930084 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.312635105 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.150733548 seconds)
  done (took 9.715120861 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.625598324 seconds)
  done (took 2.868026039 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.4442676 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.640217562 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.469846866 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.382228819 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.476234245 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.796172688 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.230091681 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.738077655 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.387594672 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.757916147 seconds)
  done (took 29.577510473 seconds)
done (took 126.850702211 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.491700479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.326327319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.51372102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.463998029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.54178699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.512459535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.593478292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.430746573 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.967183057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.956497969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.461430323 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.542047568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.544860374 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.33236087 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.54790992 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.330292705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.545892468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.518887454 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.153029496 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.31770384 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.594054385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.095188098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.291701725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.111843559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.545638647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.463426772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.676221375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.329186326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.323261401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.694807862 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.463425348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.315144077 seconds)
  done (took 194.245682004 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.308537663 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.328550223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.309190389 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.308484781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.325258652 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.30903556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.310108736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.327249614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.31146293 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.308726672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.308626557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.308648825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.308010606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.317556008 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.313333266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.309944507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.320533506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.311580527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.30799623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.316172503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.310413723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.324374686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.327157229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.325128522 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.309348524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.308830345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.33954918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.308616232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.308430769 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.309837628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.32674196 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.328806683 seconds)
  done (took 203.343913683 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.308707848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.31167664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.310695343 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.314605943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.326058681 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.3115843 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.3104818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.326108777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.308698611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.309573295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.325748716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.310290792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.310588222 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.308477078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.309674354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.310037118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.336580614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.318127323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.316275672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.327477787 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.310728928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.313685683 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.309843101 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.342898821 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.314403311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.312024639 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.318718425 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.310133658 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.310900525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.312095876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.331871982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.311544597 seconds)
  done (took 203.359431995 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.510050466 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.320834133 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.322354314 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.25995773 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.322320094 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.320532027 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.31919844 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.518843021 seconds)
  done (took 14.143316324 seconds)
done (took 616.340278299 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.729385029 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.431831601 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.536265783 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.344677609 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.171761213 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.34020467 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.341212708 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.52173561 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.279867164 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.535199602 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.642558899 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.336942504 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.788051871 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.339508091 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.614229624 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.447517692 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.254046454 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.372562793 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.672144962 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.928468394 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.61658014 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.888262403 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.524672687 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.281396886 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.7882909 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.881990377 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.085590459 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.252315382 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.341023092 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.677102986 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.085099195 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.341442579 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.406177862 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.388753072 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.445378323 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.426033435 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.319088042 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.383594739 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.533026342 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.642408262 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.931777144 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.092715462 seconds)
  done (took 92.218398078 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.309394948 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.309054871 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.308036086 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.309513463 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.309818148 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.309698872 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.310188476 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.308928555 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.30866619 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.309290343 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.307573394 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.310273457 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.307715354 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.311178171 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.308745345 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.308665852 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.3203018 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.312321057 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.308243595 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.308802806 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.309388346 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.308832009 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.311123528 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.309206117 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.310064896 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.310399139 seconds)
  done (took 35.307296441 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.323854652 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.588997113 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.7607598 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.328862689 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.323403579 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.327671351 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.410567845 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.329477793 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.326763607 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.32735395 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.485171218 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.329196236 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.362400793 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.785904697 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.32548618 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.325984248 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.325339038 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.32387458 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.595875232 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.334741528 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.434077028 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.328965547 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.411217419 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.336854131 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.347676731 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.325528974 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.329437523 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.855577096 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.326919485 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.484839386 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.203892726 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.41048752 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.81166963 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.770632796 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.197632247 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.332154714 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.327613285 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.489695296 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.326987147 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.324782349 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.411472583 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.329582117 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.781170144 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.970716197 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.343708831 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.334700737 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.875784981 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.489045338 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.61183358 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.336401343 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.810746888 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.329971655 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.328078023 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.327667035 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.611311064 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.335804677 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.326072553 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.880069722 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.348031979 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.413415898 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.332365206 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.326997839 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.608707502 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.329741756 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.598867903 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.331066301 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.334841113 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.328375531 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.785588292 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.328265819 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.009150324 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.349099712 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.327634756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.487538135 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.600700137 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.917882493 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.334438965 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.608384185 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.824288377 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.411701761 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.334063803 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.843905789 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.417409095 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.334538988 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.33141831 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.331915338 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.328324108 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.381081971 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.412031094 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.929776506 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.991647766 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.899767265 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.434681816 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.343426921 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.328715387 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.881218514 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.347659256 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.329403213 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.768734896 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.995883707 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.348293705 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.335213914 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.989293027 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.35149375 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.416604251 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.337004368 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.789470354 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.333585712 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.381551413 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.330936786 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.337117384 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.332808188 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.416680621 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.335454899 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.331870326 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.973039675 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.515631511 seconds)
  done (took 176.067893282 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.322012411 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.338434955 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.331559986 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.321826015 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.321869104 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.328310873 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.322221896 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.322601646 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.32863445 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.323016863 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.323464598 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.325192589 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.322949415 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.348026702 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.334043481 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.331668708 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.933675825 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.322955318 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.323472808 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.34369495 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.142395 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.328012316 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.338218751 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.324072445 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.32545361 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.325295833 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.325197954 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.326252565 seconds)
  done (took 151.864603955 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.332429814 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.954444555 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.333765499 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.479921075 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.359183423 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.330630943 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.47389519 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.393913583 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.334270418 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.331200032 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.330324149 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.684234883 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.337330176 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.901597873 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.54615003 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.478924 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.899731825 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.334079316 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.33169619 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.330961131 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.479710042 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.342038948 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.688070493 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.995470556 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.337666273 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.000089879 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.325079966 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.335303832 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.330860333 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.002578937 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.335045929 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.694096699 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.419142141 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.396151069 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.003241672 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.906589464 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.905214577 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.500601982 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.334547129 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.330750887 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.332413855 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.320617173 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.010617744 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.338814431 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.332398929 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.002978753 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.355897809 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.335609929 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.343746482 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.332715856 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.3986829 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.401733906 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.702581378 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.019318358 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.422670697 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.357229905 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.483061668 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.719721544 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.337632304 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.903884398 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.321530305 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.015725493 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.340365527 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.320470119 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.335233575 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.341186327 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.501677775 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.482697292 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.906281982 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.335700543 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.905360241 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.501378535 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.334813342 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.334532911 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.336372426 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.015338388 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.909280026 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.503733485 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.483829767 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.553679274 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.326732319 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.332328198 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.322271037 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.418681538 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.334926545 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.015399121 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.911715401 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.338137672 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.337197668 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.337860257 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.337670162 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.536216099 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.021299329 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.422995938 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.898865914 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.715738881 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.677975073 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.339747548 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.401698626 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.33758149 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.690202099 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.340179112 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.399119545 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.783516528 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.699146197 seconds)
  done (took 161.934328379 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.606089401 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.677150537 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.433548652 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.457571084 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.966983195 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.933036942 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.682453806 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.461977604 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.452142696 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.590565964 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.663689841 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.429671082 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.521259703 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.416269014 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.085479624 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.409877629 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.434371427 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.465040918 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.440151679 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.448249299 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.997444531 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.633212871 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.516873487 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.447644284 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.437546338 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.165856362 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.909979696 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.923850086 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.531654628 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.792669931 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.927525538 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.544603535 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.405845346 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.040428958 seconds)
  done (took 66.119472558 seconds)
done (took 684.768742714 seconds)
SAVING RESULT...
DONE!
