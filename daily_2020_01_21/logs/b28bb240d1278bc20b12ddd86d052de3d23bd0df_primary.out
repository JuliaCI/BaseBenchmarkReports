cset: moving following pidspec: 15640
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.386499209 seconds)
loading group "string"... done (took 0.575939793 seconds)
loading group "linalg"... done (took 7.209039332 seconds)
loading group "parallel"... done (took 0.159700598 seconds)
loading group "find"... done (took 1.141483289 seconds)
loading group "tuple"... done (took 1.770412389 seconds)
loading group "dates"... done (took 1.226085971 seconds)
loading group "micro"... done (took 0.215874356 seconds)
loading group "io"... done (took 1.014455643 seconds)
loading group "scalar"... done (took 38.044155491 seconds)
loading group "sparse"... done (took 11.846063393 seconds)
loading group "broadcast"... done (took 1.007051899 seconds)
loading group "union"... done (took 13.007188621 seconds)
loading group "simd"... done (took 4.660301319 seconds)
loading group "random"... done (took 9.398769452 seconds)
loading group "problem"... done (took 1.837009263 seconds)
loading group "array"... done (took 20.901291672 seconds)
loading group "misc"... done (took 1.683913122 seconds)
loading group "sort"... done (took 3.410217408 seconds)
loading group "collection"... done (took 17.870533177 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542368898 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130924099 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.123707283 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124552005 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152033097 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117747489 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130829534 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089459455 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.862328396 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152218481 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12070406 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.437454423 seconds)
done (took 5.405195596 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177861641 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08552636 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085547623 seconds)
  done (took 1.409102616 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067681686 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127972706 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069112016 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068754324 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068901253 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068244337 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06827359 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067770894 seconds)
  done (took 1.778005714 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074773133 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071446074 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067705679 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070029071 seconds)
  done (took 1.524770056 seconds)
done (took 6.207373636 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.798289558 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205385514 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191037701 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.417752356 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133314958 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161890417 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639354188 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34298328 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194346083 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082179279 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11232421 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.33206308 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11043134 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.647916034 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078623958 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092132079 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139534118 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441168601 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068357059 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083404289 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090061284 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130195767 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087824799 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07566467 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146626399 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069189333 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137458315 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082526202 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06771565 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214554412 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173403962 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.6642958 seconds)
  done (took 10.491413225 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097390196 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098626304 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069165993 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123585054 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09702778 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070539968 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072237684 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06876896 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088127235 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128140695 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089590361 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102307934 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066340852 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070133199 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086078908 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206376581 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083777418 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082773747 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072027679 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077566442 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105955247 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079323569 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078186117 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078323179 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129920563 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181469882 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10051507 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099539039 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067851744 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080376768 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115977814 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125534166 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066841149 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067665522 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125319475 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095480779 seconds)
  done (took 4.727445854 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.007309442 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145505807 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091683139 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136353532 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066112869 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110921296 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066940326 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082231185 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210504687 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.456804774 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.113342224 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.598862481 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112102426 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105866917 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071721934 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06979125 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067944695 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501712604 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097023467 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109189868 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08296996 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071685992 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070453451 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356333959 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069301533 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065761526 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069237305 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059010715 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126778096 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069895801 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.960606984 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12874916 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068557972 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102639755 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163713227 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090925713 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143473121 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069348813 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065258181 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152689758 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070988238 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066978788 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084495404 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103316146 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112236304 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065588561 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067070599 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163121635 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065455485 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07947343 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.650528915 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152277677 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075672146 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063807711 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249561122 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08698529 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068729674 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064345697 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190850143 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132536415 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068586363 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066338728 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068191676 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068667158 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384690381 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067836369 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.013246577 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070983407 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077510907 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069705284 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069948383 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072849297 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07225675 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088028481 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065077007 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066086896 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074321021 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065553518 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065979752 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066991788 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063637219 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083017421 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.369371008 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066258768 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067940636 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064239502 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088387032 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095571067 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065925186 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064865229 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09884993 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067904334 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065852526 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104954219 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065886769 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082345835 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.282159018 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115663854 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069481776 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.094929821 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067886662 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09899506 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067386091 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07456406 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100644198 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082236929 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071177637 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.426010477 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067613017 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066890733 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071276975 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067395813 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069520404 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068496596 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081181316 seconds)
  done (took 21.459181035 seconds)
done (took 38.923942894 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236071694 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079980369 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077801391 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076115404 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075446367 seconds)
  done (took 1.892048274 seconds)
done (took 3.21909452 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124513131 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101725973 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065870844 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099377735 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065593454 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10345905 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103231911 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083288398 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102186026 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06555077 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099493491 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065693481 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066201478 seconds)
  done (took 2.492578157 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084763592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085899818 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07122828 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084886268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064756162 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085151204 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082889259 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090504855 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083597936 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074263801 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065125846 seconds)
  done (took 2.192357777 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084104639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085617031 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071284957 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083395205 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065124133 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083555692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083228176 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087685025 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083831186 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075758602 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064814586 seconds)
  done (took 2.184419028 seconds)
done (took 8.183231703 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078513205 seconds)
  done (took 1.386918306 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593235442 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.113812412 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083258449 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113890248 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191634769 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119671923 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273705913 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088432433 seconds)
  done (took 9.071478197 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104206901 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070915526 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069632276 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072156875 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070343447 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074174282 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070818793 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073081155 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07207166 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071993848 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070741148 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069976967 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072787587 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070696908 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072882996 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069621521 seconds)
  done (took 2.553948691 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092827285 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093369409 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074055038 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076444791 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073679374 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073172521 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075720235 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075474143 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072221117 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073454739 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075561417 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074335351 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072777289 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06605 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075209658 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077148614 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072564184 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075429114 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075367313 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076055034 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076028975 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06555187 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073323152 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075429677 seconds)
  done (took 3.22829727 seconds)
done (took 17.557479299 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117449381 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072837924 seconds)
  done (took 1.505758739 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082436116 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084147921 seconds)
  done (took 1.488912621 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08443818 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066733748 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091175848 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079488024 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067451125 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066621717 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089469247 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067333929 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066933196 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067430214 seconds)
  done (took 2.070102233 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069849286 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078433807 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071684143 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082299164 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075103787 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06571872 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073383894 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069013252 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078225646 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064140365 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072819329 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084438505 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072935584 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085763624 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074246567 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070157819 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072477938 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069091886 seconds)
  done (took 2.655626081 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066860758 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06821509 seconds)
  done (took 1.461511897 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067983782 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064866853 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067946105 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068291474 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065357418 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063688444 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065666228 seconds)
  done (took 1.787355486 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.378463691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1146646 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313968488 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072590718 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083266382 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261577638 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067169043 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072076089 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072410206 seconds)
  done (took 2.804686094 seconds)
done (took 15.102553308 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081311654 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087948916 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09716721 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.378460484 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092851199 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067175114 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114817463 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189611664 seconds)
done (took 2.446679381 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215757808 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635058379 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406219825 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207913997 seconds)
  done (took 2.579429269 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346360119 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092456384 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062025218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07140915 seconds)
  done (took 1.910757013 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067695421 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070518249 seconds)
  done (took 1.4763389 seconds)
done (took 7.52022516 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067473811 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06747012 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084351546 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065184055 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067131341 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064292632 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064603616 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067256717 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067354383 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067894011 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069769261 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067829667 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067362144 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065485001 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064741489 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067265518 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065097557 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064812108 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067558881 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064705015 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064614948 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067193103 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064754378 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064983246 seconds)
  done (took 2.98261667 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085995116 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066749161 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072893266 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072752938 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071126642 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072123391 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072433364 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067234852 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072520609 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069670169 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070784092 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070605977 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070173566 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071422045 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069666159 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070760889 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072678542 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067330043 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069420555 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070494056 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072188841 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067247348 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070910974 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071728122 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070220144 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071778353 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069771664 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067415361 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071955749 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070346881 seconds)
  done (took 3.477072134 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071230791 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065007482 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065189311 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071857931 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065090329 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065557305 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064522955 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065428022 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065712421 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064852291 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06586208 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064515703 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064728925 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066404987 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065268462 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068519036 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080329786 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065075746 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064708093 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065292338 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06793788 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064786586 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064694627 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064432363 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064235778 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064814869 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064829973 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064368865 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065757599 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064677044 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068248533 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068504784 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064774379 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072054625 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068494387 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.177845865 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06866569 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06461097 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064964693 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064302396 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064900493 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064571267 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064506435 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071599831 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065104562 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066376934 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064846381 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066409688 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065320006 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066997965 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064562024 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064963213 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067396935 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065733277 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068611008 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064490373 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065865061 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064661804 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065214252 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064795368 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064091062 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064148571 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067483317 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065039014 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079553995 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071943468 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064464096 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066137988 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.0662765 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067682406 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066317338 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079118056 seconds)
  done (took 6.256181283 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092130292 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087810473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067672854 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066017607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062646803 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065309259 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070501609 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065245198 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066695 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083114585 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065310998 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066199101 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066186674 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069069423 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065792539 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066301921 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073293917 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062846778 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065014847 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068545674 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065761949 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070643016 seconds)
  done (took 2.892653067 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155853887 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071139773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107063522 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076740618 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071155021 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076786834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071197596 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071551823 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071389522 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069042965 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068425173 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071020833 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071419898 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068496483 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068744416 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068537355 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071438936 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068894345 seconds)
  done (took 2.753331343 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077570245 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067432921 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087621311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067038452 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067123884 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069354904 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071572687 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075452948 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069310452 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066999556 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075091728 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06936875 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069541956 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067619697 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069973403 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067070084 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06941653 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066595043 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074932831 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071632753 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071123651 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075325395 seconds)
  done (took 2.922267992 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08097462 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069244807 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082407449 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069498379 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062805483 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065706635 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070929627 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06650094 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071544997 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069095222 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06661702 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065704548 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070004581 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067014273 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069587301 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067097395 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069221582 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067208733 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06925773 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062871765 seconds)
  done (took 2.740254574 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087874612 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069861853 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069063812 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077416804 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069165693 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069121605 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076354339 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068619473 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068755299 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089585971 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068911018 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068589015 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076634687 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07375248 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068677282 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076476806 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076270697 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076544848 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06916565 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069202946 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090152204 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068958219 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076384466 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068774704 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06929116 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069080168 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068695206 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073294668 seconds)
  done (took 3.413803844 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067649162 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067315011 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064486776 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064237152 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065314408 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063932463 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064505309 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064859361 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067348738 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064967475 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067269489 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067160954 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066588806 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06702388 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06705352 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067623884 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067472402 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064347178 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064694695 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064701339 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067140795 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067102129 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067059492 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064635695 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064983681 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067260595 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06436139 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064116418 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06731739 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064705119 seconds)
  done (took 3.339045854 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076885788 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074700816 seconds)
  done (took 1.514637852 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063976032 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081457953 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064059135 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071492944 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070544035 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06742407 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074803031 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070164525 seconds)
  done (took 1.922767315 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083939371 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079150689 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068884691 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08052304 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078011008 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084573984 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136744272 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068056124 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074423981 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066255531 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08165537 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06677086 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074176051 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067796625 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073917165 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073904694 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065340362 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073175845 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070101897 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066009931 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068936326 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076658087 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070798833 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063001258 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068574493 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089875077 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079175799 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067917544 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070897994 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075587183 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073822625 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06134307 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06747988 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068088946 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065342032 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077558941 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082619154 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070667714 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076343867 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0682538 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077866775 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063034264 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072573659 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074415422 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078215277 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067986243 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068101423 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062676459 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065980294 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070140445 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062520224 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07076967 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061868794 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074794788 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071375794 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078642491 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066978983 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069109795 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070530089 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070998275 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075255922 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06955659 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070169567 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066991931 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07754009 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072743028 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07641987 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062876176 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061812111 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065766048 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077159186 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090704471 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073317209 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068695928 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068475819 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065101178 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071184724 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06834804 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073258135 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07389566 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067785048 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073340137 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074889156 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06817752 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069902323 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074932864 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066109532 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070109935 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065836157 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083803751 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066463927 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065558113 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066005457 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078575238 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071097184 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06767061 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06560019 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075075873 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061721725 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068116438 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068772423 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069015504 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078342459 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072589978 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072632149 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076507316 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075388541 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06826617 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070902234 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064997914 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068706433 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066651581 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075442082 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06191998 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070206986 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.191901541 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069015587 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076612066 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065751285 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068178692 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075951234 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074681358 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065889142 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063935391 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07083705 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067776994 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071490319 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075907895 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06576903 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063201258 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062822051 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071307801 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067489968 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071760838 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071671961 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070936146 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062279033 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065074788 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073558074 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077412458 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068172473 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069093795 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074195323 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069393716 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06753032 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074379527 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07012568 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066993619 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074099431 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068741469 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062639855 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070968207 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070632758 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066403657 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071998928 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071301182 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071098255 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068309196 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066502731 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074177253 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068842941 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067232578 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06799242 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065938755 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07843357 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069506881 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063377464 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064912474 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076283196 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064757763 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066360325 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066327956 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069521716 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068761449 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065258269 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066577568 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06925957 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076927202 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071536796 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069827946 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072718518 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07856823 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06771948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06981412 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067670412 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068669746 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067703644 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076328047 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073745666 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071969072 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069582326 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064016498 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073090101 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075440033 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066861155 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065488843 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06681118 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071939821 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07338496 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071461481 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068120596 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066023922 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068901667 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070864615 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070733061 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067563754 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067359002 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073602025 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065526444 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074243013 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068440175 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078299679 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071228114 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062982762 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070512344 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066107514 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074215518 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062573739 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065663195 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067534336 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068456618 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066661306 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070859951 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061923261 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074584622 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075529622 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068372456 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067899543 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067658647 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074696508 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069472652 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071510034 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071607418 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074202973 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.205639042 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067521858 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071472896 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078703161 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068496788 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061864864 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073208583 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066996506 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066515702 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067329635 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065825764 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071231552 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076584042 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075351025 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061335322 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071093091 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066226411 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066981045 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063343537 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071854796 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070980615 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069212476 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075206809 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068586169 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06763432 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071641099 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067217015 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068636484 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068917153 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070636459 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068562077 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069310246 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067646027 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070974024 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067829611 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066121903 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070761324 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067928289 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068721798 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072789938 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067522754 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068923813 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071230336 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068732854 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069124667 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068172479 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06698949 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07123427 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068748989 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067980776 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070084482 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062893688 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075434743 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066586895 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075176438 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068222853 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065224002 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074183754 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070517803 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072553478 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068098077 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068077109 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069288707 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067340191 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071181771 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075086089 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065726171 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079043987 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075235814 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068489213 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071334433 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067311774 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069069276 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066936808 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069439783 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067936798 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068134562 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06717441 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072100869 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070596828 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068184978 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069505154 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068526403 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068150053 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06849516 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061983515 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066745905 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066879567 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067515298 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077996192 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068100265 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067634555 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067154632 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068599116 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067789477 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064956152 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075005637 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076365273 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068007178 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074898809 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067681524 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069330167 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078628985 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061993274 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066516527 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065935433 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06578623 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074951605 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068604868 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076915674 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068292699 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067559841 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064966561 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068925659 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066712559 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06261098 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065598327 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071572078 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067342413 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06741573 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067952951 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07027851 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.198701622 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077252249 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067525134 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069166011 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068288787 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065538527 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067925995 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067843386 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071104114 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069490765 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066001666 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065636396 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067955447 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069461029 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069469414 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070232251 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069357456 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075767368 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068217853 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07183882 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070960596 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062297335 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070840043 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068625019 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067536648 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066900991 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071650752 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070922284 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068464228 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076781028 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067872504 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068988364 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06836958 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065350704 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067585031 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067680379 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067324771 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067644757 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06922634 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075862856 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065952399 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071272745 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067825048 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068415681 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074228971 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068573702 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070833938 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073950531 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067820376 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069825247 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075705683 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071093202 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070900814 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068335215 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070301178 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073426862 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067360321 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.0746373 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068621162 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068842595 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069985562 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066087462 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067595602 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068242075 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067438327 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073970043 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069198006 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067350337 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066536031 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06592403 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068913575 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070088293 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07486337 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070752494 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07146887 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063401295 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065218756 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067794216 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066327375 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069617137 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070160264 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073425056 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069970932 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06841335 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067118933 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07680195 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073667953 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071815368 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065471548 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071319253 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068468128 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069969326 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068607047 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067826754 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068737601 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071464079 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06941897 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066978256 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074854641 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071160919 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068802745 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069306351 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06864845 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068047511 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062741447 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068015493 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069632447 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072684402 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070266698 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068159478 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078553967 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065355737 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067994638 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070881609 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066683039 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072429419 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062645191 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069344753 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069100005 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068444505 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062911431 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066864711 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.195072808 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071185511 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067426223 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064248586 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078779641 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077447203 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070988749 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067097644 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066264811 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062431804 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063310847 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067442723 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06958791 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070385209 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078176998 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067325154 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067048463 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06345378 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068437015 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072001999 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071050128 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065253492 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063205166 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067279413 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070767324 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074122265 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067110481 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067159469 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07108581 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070552439 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065491774 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070976748 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064639487 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072157166 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081101537 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067950548 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068505506 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07415731 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075606216 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068285548 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062724353 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068072995 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071130897 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06768177 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068538986 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069308478 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082390581 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071277808 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066466961 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067054612 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070012449 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067957591 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077229073 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068765622 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068148566 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072982848 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069139133 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075229786 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070770964 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075651179 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07047893 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071081461 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066833438 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067769761 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065657557 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066363527 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069164682 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067916222 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071655116 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074855422 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066832571 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078086025 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076812604 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069422826 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064499942 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067334968 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067029039 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06238039 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068708878 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065881656 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066112144 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065746098 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066435308 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06880616 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073306068 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068941096 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068914621 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0673567 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061722387 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07025323 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070144751 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068774389 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064841416 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06802808 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068167073 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072044154 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071232217 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065882559 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069527927 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069656083 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068748062 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063141234 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074158794 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067200215 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069863263 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06731271 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068434214 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068149171 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071338011 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072667947 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069530214 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070318696 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071507268 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069960121 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065200282 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065022176 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07350017 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065946415 seconds)
  done (took 43.534522808 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101961593 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064434131 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063694969 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062670028 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073600994 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063792548 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06258762 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063806221 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06423936 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066099058 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062836859 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062743981 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071428173 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078121554 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073839457 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067248947 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063149418 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063568547 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063488804 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064048227 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071600345 seconds)
  done (took 2.876777841 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075166702 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07816392 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076957322 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083434334 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071815678 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071546792 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076300909 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070979085 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07957665 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07327514 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079211359 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071125809 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072868447 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073337832 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073053331 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071675811 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078952085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07178174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071165134 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076160322 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0717513 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076106616 seconds)
  done (took 3.067661174 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068075652 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066824081 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068994183 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061898068 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066404593 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062316503 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069867458 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065457021 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070294058 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066627936 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066153037 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066316358 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068969665 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062471487 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067791345 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064853532 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108206371 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070421812 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066902514 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067670574 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062543952 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068747435 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062398766 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062699221 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066271546 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070255091 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067799168 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065215009 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066741941 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066574149 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067294134 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06482311 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068751787 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067957399 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066021533 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066241551 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066481928 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06705964 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062029224 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065117401 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067793956 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062567488 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067304149 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068415318 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064560803 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064829862 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068878612 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066915746 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061835466 seconds)
  done (took 4.716655395 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079965044 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111041877 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068235105 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089588014 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083596428 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07316837 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070350284 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090605629 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064500886 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065065884 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083134374 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079352855 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066207402 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070843814 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073209169 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066437874 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067297793 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065748732 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069925042 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065683215 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069772371 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073684553 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080526704 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07941209 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070133308 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065393717 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066014189 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070625261 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078176766 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070855741 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071328568 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072073387 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081096101 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071430111 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065920082 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068582264 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082147841 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066224317 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068998776 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064131753 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068994944 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070390106 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072956312 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08203895 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06660342 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071587784 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066123444 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06395743 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078604217 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068533628 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074257373 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080336727 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070551539 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066610193 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070645447 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081163159 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065946751 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064789797 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06907573 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078495895 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064856517 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070221641 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079463177 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068518033 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073302898 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079573698 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071865685 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07027336 seconds)
  done (took 6.514193028 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076729321 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096487389 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083977278 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083599763 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076780484 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076552792 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076470812 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076040356 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076077563 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08136072 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076851512 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116255944 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071866557 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078776008 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076900455 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076905407 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07628379 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076985775 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07622809 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077156896 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076881899 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083195019 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076266091 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083662847 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080288479 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071964894 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075889124 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076704547 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08380231 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076474359 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088908826 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076698263 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076298204 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083686526 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080114784 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076130862 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066474529 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076432986 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076650117 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076459749 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07227048 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083936798 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076488687 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071669014 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076412283 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076063741 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083950335 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080178814 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078848925 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080756173 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076727931 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083997915 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076975955 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076810657 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083557408 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087076824 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084149779 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08406534 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076701591 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0844357 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084222348 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086388432 seconds)
  done (took 6.383499376 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084175416 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075262697 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083469198 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062882951 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065049485 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072725388 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065556267 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064915635 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075093822 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075164096 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076907664 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072508473 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075874948 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07686708 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072860246 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075403934 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072416094 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072523391 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074615552 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072890644 seconds)
  done (took 2.91437092 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075925855 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083663848 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067675893 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072164195 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070533459 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072075668 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070210004 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070170643 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067846153 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070224798 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077527884 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077053641 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067742927 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072193073 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076348005 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072200548 seconds)
  done (took 2.603266004 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084279555 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074360318 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080906189 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067666207 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067682714 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063596994 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066911375 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061897701 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06314016 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078985999 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066964266 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077304672 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067443406 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065616763 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063958794 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072016223 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063475063 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064480956 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066927844 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079290802 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070539454 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065344333 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07041011 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067260961 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069700638 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071884914 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06577273 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067492342 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06450284 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067457268 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070086599 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071022297 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064336016 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06499263 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065993752 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064006762 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067127495 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067145334 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072231149 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06690114 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065189601 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068891134 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066912566 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067915065 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063293764 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067401138 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063212984 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069012567 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064310992 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069418831 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066926933 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069375795 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067469223 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073784372 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069718317 seconds)
  done (took 5.205212955 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0806698 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07113578 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063214943 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064887235 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069807471 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068193472 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0704368 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068201519 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068343923 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064935622 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068288185 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069659453 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068642559 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070534566 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068733387 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07022131 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063124194 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068360445 seconds)
  done (took 2.689125596 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072293786 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067108269 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074263656 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067485291 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066622899 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069915786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063302924 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065765262 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065584397 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066646506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066964328 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069730194 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065582499 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069683013 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067146706 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067367074 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069407718 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065983348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067469524 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063280615 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069470406 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065927467 seconds)
  done (took 2.931984373 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094400621 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083520256 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141935596 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079999391 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086310762 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073109229 seconds)
  done (took 2.006371586 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093288255 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10113003 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066987015 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070583272 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077767551 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07082898 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070888773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071477718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0794087 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076857903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070950899 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079589792 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079737703 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078539951 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07651006 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077060984 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071169949 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071113948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067127259 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085364612 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071037178 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07957395 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07119491 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071118789 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071176457 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078368617 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079503169 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076839564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070819212 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079494801 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076668098 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071466852 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079572887 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076731916 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070349009 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079523188 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071457613 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084829795 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076885597 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078840687 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070070142 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077113145 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079511547 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075884567 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079459973 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070970044 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075529282 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070975629 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071007621 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086239306 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077256745 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078817687 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079275979 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080089012 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080023053 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086634604 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076746312 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078645501 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076919987 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076869161 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078564827 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077050185 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078739673 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077184351 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077197021 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078575515 seconds)
  done (took 6.517290239 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104550765 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068038109 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071188754 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077500726 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078590298 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071015973 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071225042 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071394009 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071242821 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068292519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108913735 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07162876 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078980463 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078408104 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071588644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071072551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07126724 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078527944 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067989358 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086728694 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070857638 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07878701 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078705315 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078218572 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076652867 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076961603 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071062512 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071013384 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071314357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071821554 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075991346 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071544161 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07849305 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068404677 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078435149 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071008959 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070801651 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076186104 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071337932 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077267463 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078956221 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084757387 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071064084 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071333493 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07714779 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070769159 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071163522 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067973454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071306914 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068475941 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076898071 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076715593 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0769864 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078375787 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070917481 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071109662 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071428677 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07111253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070960301 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076950717 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078432613 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07136755 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086833202 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071219976 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071483696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079053345 seconds)
  done (took 6.421305607 seconds)
done (took 133.932094523 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.189554392 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166364241 seconds)
  done (took 1.800335901 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070388589 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099329732 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078636893 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130644872 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067678004 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101133178 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10031835 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078955663 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067043816 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067455227 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067384381 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069463172 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132634599 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068040098 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06733663 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070448319 seconds)
  done (took 2.79421717 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100618725 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164250178 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103200218 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066629893 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10069493 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074261004 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06570088 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076272351 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07222695 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066319136 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073751364 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071676448 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066317253 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071473035 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07206396 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073653162 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.0661616 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073585187 seconds)
  done (took 2.918025398 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100253708 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09273733 seconds)
  done (took 1.655913716 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157733975 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13409216 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202523034 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352403984 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165337675 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149033232 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.150712118 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144923032 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118808386 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140157539 seconds)
  done (took 3.174644203 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100427396 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155395446 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26860819 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118672522 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074373308 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094878615 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120130508 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079934198 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081984863 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081682683 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081772607 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078493275 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100441608 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074513568 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075190444 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07723314 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104647232 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074086372 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075480479 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077174688 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101870978 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067111948 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074405164 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07388763 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078523651 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078985643 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067275529 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066850243 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077268875 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075545878 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077113623 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093692888 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078145559 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10728097 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072481421 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108042201 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077765088 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074655274 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075489664 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074675038 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079440708 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07918535 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074308527 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077549539 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067670878 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078146266 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06708572 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067056653 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078378132 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068205861 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078660845 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07736218 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106895743 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068159913 seconds)
  done (took 6.147526769 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104720084 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107351859 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072350602 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114638547 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103705301 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073646052 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103705508 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096704813 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105928342 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071270454 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069781937 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071813935 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083024125 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084420719 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116452574 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108405869 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07470973 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072509991 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107729135 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10623518 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069650972 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097950947 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092097286 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104004126 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.0688476 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071480431 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068836613 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072109611 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077971278 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079838677 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071153168 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081655964 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085693294 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079001917 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068447382 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069057129 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069417957 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080861517 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080662527 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080045309 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079661687 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0693825 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069638659 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071083257 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07150793 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069345631 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080568024 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082995488 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0801445 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070829899 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071490737 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069888831 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071191814 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081446399 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079134343 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082186419 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08094613 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069809028 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070224139 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07356831 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082032029 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080453764 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080415114 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07078434 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080041082 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070004062 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081602921 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085754706 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069863348 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07165468 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070396549 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071517867 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070963277 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079291348 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079137846 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071396604 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071423863 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069892808 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081647483 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079507723 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070040059 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078067601 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068922357 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069490097 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070580961 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070868652 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079537327 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081121665 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071659076 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069925122 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071049425 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069919104 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068283674 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078010263 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081702078 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081149621 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080560498 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071422735 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081157572 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080279352 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071756556 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081053519 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070018776 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072076561 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198727237 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080490753 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079537921 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081064091 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071521947 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069941052 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079755037 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082041976 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07065608 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080224995 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081387736 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07966554 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070039828 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08253971 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071127237 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080717457 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071306591 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081038819 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070750807 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081769839 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069866243 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069724025 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070690945 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080556518 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073950183 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069863958 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071874239 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071460682 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081314417 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084196157 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071968489 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079994682 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080529421 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0722258 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080305987 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069975832 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080409419 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070934822 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071064636 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068631412 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083347107 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069862335 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070075946 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070954869 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081650054 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069824654 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081524118 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079598719 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069015927 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081906172 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080780969 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078856536 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081259739 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071595956 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07041804 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069776478 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07152155 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078749743 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080584853 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072114981 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070224065 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079138039 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080947581 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06921804 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079294673 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07927907 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080337007 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069642388 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071043213 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081164746 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081843337 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079268276 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079570594 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080199825 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070193422 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078747979 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07959893 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069691056 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08661833 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069896321 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083956669 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080300412 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078435634 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080254079 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082041527 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081798366 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081680362 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084674861 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069738886 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069896765 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081112721 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069932834 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070730185 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079435594 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071116784 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071148271 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084293381 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069840883 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081555576 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069404392 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080757389 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068578537 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071554024 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085012899 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069897843 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200947288 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081500204 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071635073 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079009124 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081953533 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080368529 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070049302 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071470164 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080370324 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080429537 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069714988 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070091959 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071729921 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079752371 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078482076 seconds)
  done (took 19.09247264 seconds)
done (took 39.051347332 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2100688 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153258313 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.174541617 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119509401 seconds)
  done (took 2.217626699 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118448909 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102561173 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094121441 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066605953 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100775603 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066306237 seconds)
  done (took 2.042331508 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313072395 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21208605 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189141553 seconds)
  done (took 2.204152987 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202211129 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18985736 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41838217 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262717082 seconds)
  done (took 2.678532753 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145283471 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.0901452 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068321121 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084716641 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134445036 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161200101 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101443952 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126891803 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079917824 seconds)
  done (took 2.540721801 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150572479 seconds)
done (took 13.327688845 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.126928099 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099416975 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.257809333 seconds)
    (4/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080908306 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.084119025 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.084618099 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.217088828 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071229283 seconds)
    (9/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.163479259 seconds)
    (10/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.207103572 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073371566 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110457458 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079829537 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079692529 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.091987102 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075318196 seconds)
    (17/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17813581 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.219948915 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.163659147 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.151370468 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.091549341 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.192436603 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075429744 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075672997 seconds)
    (25/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077048175 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.213784657 seconds)
    (27/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075629134 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.154295444 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085089363 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111044561 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073041602 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.201887032 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.107359657 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199128288 seconds)
    (35/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070538906 seconds)
    (36/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069998417 seconds)
    (37/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156479463 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.203608677 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077762307 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.169571845 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076995507 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073752181 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073847577 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.076072798 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094805055 seconds)
    (46/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.073625571 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075313398 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.164145191 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087771902 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138230439 seconds)
    (51/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.113941451 seconds)
    (52/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079451704 seconds)
    (53/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052434544 seconds)
    (54/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.169066698 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068942294 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.144203882 seconds)
    (57/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073576839 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.220312829 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099471748 seconds)
    (60/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113336304 seconds)
    (61/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111452308 seconds)
    (62/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.144982508 seconds)
    (63/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103074506 seconds)
    (64/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.074963835 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185083292 seconds)
    (66/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102427984 seconds)
    (67/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076443356 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096325612 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148865166 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083063263 seconds)
    (71/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066735731 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124346701 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143714619 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084838042 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.209624736 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052033316 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067723379 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.06764901 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092128215 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063154221 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073788201 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073905376 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078331466 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156343967 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075482778 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069790049 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065422573 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.239762819 seconds)
    (89/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100712814 seconds)
    (90/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071833418 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.147402076 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106270747 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092316892 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179119538 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12725255 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069511839 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05193036 seconds)
    (98/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.162953905 seconds)
    (99/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052536394 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080079754 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066545798 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053546108 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.157624339 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.191018549 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05285585 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196794484 seconds)
    (107/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.4179726 seconds)
    (108/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113487831 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.144320259 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07418586 seconds)
    (111/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164444838 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090931439 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.19006907 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066786033 seconds)
    (115/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07530756 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078507084 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146365505 seconds)
    (118/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.102533538 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.071744854 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091584347 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.157183437 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.138415822 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074975086 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076247427 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066503018 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052225418 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052522828 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086190071 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052589326 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182091783 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067338353 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092310203 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072437941 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073331874 seconds)
    (135/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053154737 seconds)
    (136/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053116889 seconds)
    (137/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100001009 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.215340972 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088243328 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073520455 seconds)
    (141/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068617533 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075210156 seconds)
    (143/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071337626 seconds)
    (144/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072835827 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066468955 seconds)
    (146/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155127288 seconds)
    (147/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091503608 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066435205 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073513601 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051798062 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184067227 seconds)
    (152/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073660511 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074081523 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 0.131225886 seconds)
    (155/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077411141 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053366631 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073778218 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07541561 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067712564 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129471344 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090027808 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081794259 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110631307 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066472342 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052536518 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075663862 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054148323 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07301764 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077573814 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091771559 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052420537 seconds)
    (172/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067593517 seconds)
    (173/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053000263 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062548087 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054050532 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052132189 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067397282 seconds)
    (178/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188917152 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074354344 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073810334 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075408404 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081468746 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102112191 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.0814271 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053630535 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072225226 seconds)
    (187/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066395652 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186566887 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075584404 seconds)
    (190/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053194887 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091309658 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05259985 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113964949 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.247092544 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066318817 seconds)
    (196/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122902717 seconds)
    (197/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072399769 seconds)
    (198/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074736027 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067998372 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067713435 seconds)
    (201/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054035193 seconds)
    (202/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064363653 seconds)
    (203/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107675513 seconds)
    (204/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076142901 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067148654 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140583162 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09081919 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053176565 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066762942 seconds)
    (210/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.186173341 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074573658 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075800412 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065870023 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052425055 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077605524 seconds)
    (216/309) benchmarking ("sort", Int8, false)...
    done (took 0.1429752 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05600628 seconds)
    (218/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067774962 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05225233 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073971467 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131444991 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051843773 seconds)
    (223/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062290839 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067532959 seconds)
    (225/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052808035 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072269467 seconds)
    (227/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052471562 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065051174 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092447088 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053861172 seconds)
    (231/309) benchmarking ("sort", Float32, false)...
    done (took 0.133364361 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157666422 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078029515 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141159434 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069077863 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17380009 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067777844 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066790479 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053005729 seconds)
    (240/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052478447 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149523044 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068762158 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052569877 seconds)
    (244/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09114845 seconds)
    (245/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081317277 seconds)
    (246/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.110364763 seconds)
    (247/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072646325 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091945102 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072759904 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052136705 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066433511 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152842095 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140549356 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067435143 seconds)
    (255/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179105592 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062792152 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066817062 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089622767 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073733303 seconds)
    (260/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074911783 seconds)
    (261/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052308884 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066686747 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.1095388 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109997307 seconds)
    (265/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069199744 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069478197 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053995485 seconds)
    (268/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067978372 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052041613 seconds)
    (270/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064853267 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075281004 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05275145 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068063356 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090632877 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087830288 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052184582 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053272901 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067227749 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066864063 seconds)
    (280/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053676537 seconds)
    (281/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082088623 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074474534 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092011503 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065648104 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053475716 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065267136 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067094223 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097807963 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17157217 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074214713 seconds)
    (291/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052189684 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05362202 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091837051 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05322247 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065546857 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07280347 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09177414 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052209315 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053338152 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068411274 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134717737 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052689423 seconds)
    (303/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054531651 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072408459 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098527373 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067099818 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066403296 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05195895 seconds)
    (309/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064596521 seconds)
  done (took 31.482718215 seconds)
done (took 32.988544805 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085920934 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094881883 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07544997 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094910088 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081623092 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077030189 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073418416 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079445236 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081456132 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083261915 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078944408 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055305633 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075512227 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076131336 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07569127 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092095448 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080180156 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074041557 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074214729 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065961741 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073996744 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06666576 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068086855 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055084982 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079591514 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072743484 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073402199 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074844083 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066866056 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066487415 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070050606 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074671629 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066305715 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079722123 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073334912 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074703229 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075898083 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.0779752 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068462471 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067014674 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075942497 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066593894 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074304971 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074628397 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073081773 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072785539 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074073211 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079206855 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092435242 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068571815 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075581027 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077212675 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077217329 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074180728 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070559229 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074034996 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07192397 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092146602 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075335955 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069030102 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075756023 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074948428 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072903107 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07373502 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074042855 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075987533 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076564798 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072190781 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075560212 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073115056 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066394912 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074461101 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070587803 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067019424 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077471065 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078337061 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065368684 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072690386 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073926701 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072240336 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065909519 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068540268 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068240666 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073280528 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068071674 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05518482 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070941827 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073672208 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065358621 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074597442 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073526319 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074059227 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067979139 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077107583 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065994646 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072282712 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066743933 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066754402 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068400685 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070942755 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066293991 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068455626 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076164362 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068100152 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072816471 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080124605 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066470358 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073434207 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065380314 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065428582 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080913982 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076131141 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066908215 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068533227 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065912436 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073892669 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065989839 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066380922 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066731232 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066590188 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072746946 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066978726 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068314779 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074306238 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079678578 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067123689 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069924079 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068935981 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065938007 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071872047 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066062724 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200618046 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068807138 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063035962 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068814707 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06700563 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074747458 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068980772 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074787565 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069037342 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074893237 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071906617 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072911992 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072386342 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065275582 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059985452 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069113659 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068748427 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068450358 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066702644 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068532127 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066956566 seconds)
done (took 12.737622068 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067744087 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141138957 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098194919 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09606897 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08640708 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068008129 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076423406 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101151879 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069078639 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102227647 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088418162 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086783813 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115066099 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065811132 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066760657 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070698381 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068078213 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082223613 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100058071 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08798409 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116073481 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066136409 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093285763 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090101882 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089511675 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104722571 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069975106 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070854869 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070986108 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094409954 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089429951 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070245125 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067224599 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099564378 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09453521 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08483342 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067291268 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084045678 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067580223 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066558512 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068475774 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100274284 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081972595 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08183402 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070840503 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077944829 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068003473 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085098721 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091022888 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080664647 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087279422 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102933645 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070175584 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08495837 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065530825 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08803473 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.07821468 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069531781 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067311894 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07496841 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067255905 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070692035 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081895419 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082204773 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071159316 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086331994 seconds)
  done (took 7.011780484 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08480609 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092182869 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084642871 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085977557 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066236029 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067495943 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067965154 seconds)
  done (took 2.144412468 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06850353 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088986204 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090687136 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090874095 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082403995 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089049239 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077168116 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067677937 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089404205 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068870302 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088194264 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10209099 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070824264 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07523451 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092161297 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067412103 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092611536 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067704621 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071365673 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091612223 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069998073 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096890032 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071183197 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068103357 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082004967 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06746613 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114980123 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073186256 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069213098 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071075204 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065919635 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108615144 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081206277 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075953222 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068443255 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082523535 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08260085 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066120064 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084258492 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076757908 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082286023 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068168833 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06880128 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065428982 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071685271 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078318965 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069220702 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068358306 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07031862 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087606663 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068410443 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081597282 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071277594 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073887702 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069559109 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074587418 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077657585 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068726316 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08740852 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069030986 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084630159 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084351692 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082062173 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084126446 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069643979 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081850299 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081712074 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070332612 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069315344 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071240009 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083929132 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065992745 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069542281 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078636779 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069871575 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091306651 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090753516 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069839841 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081256303 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068606188 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068488007 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067834191 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091440244 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073081957 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066897131 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072445334 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070739546 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065987558 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066696429 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071523781 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066289772 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069193342 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071091541 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07060819 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070984587 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085433773 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070734874 seconds)
  done (took 9.034814677 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07024286 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068968327 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070540045 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068762373 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069778229 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068680202 seconds)
  done (took 2.031062004 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094872501 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069258811 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081652028 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072631573 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105697842 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087946473 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089024264 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079515393 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084796758 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079839919 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087605212 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08901967 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092736495 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07301039 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087672557 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072556795 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088285432 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075950586 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079167378 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073900589 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087673676 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073824589 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073668224 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083471079 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076360689 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072650039 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079568048 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079983154 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079178604 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07924592 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073028573 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07686915 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072005157 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079165014 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088387666 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071521054 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072664593 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077496488 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073237996 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076868866 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088453196 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073952283 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075078531 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078429924 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07932698 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072159692 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077629464 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080377431 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087478135 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077421772 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077595368 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072151884 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.0762736 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077734719 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071577418 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079454541 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077782338 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088129476 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072623783 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071747839 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069866629 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077274025 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078994745 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076932446 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07960675 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077692026 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071540975 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074053241 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073637959 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073091888 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078092337 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069871397 seconds)
  done (took 7.259966895 seconds)
done (took 29.064174752 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.531019035 seconds)
  done (took 2.113557767 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611278491 seconds)
  done (took 2.216857315 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.433374074 seconds)
  done (took 8.034845068 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402225224 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.526470926 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.725299166 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133426936 seconds)
  done (took 3.426417775 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.700508127 seconds)
  done (took 2.3133589 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215122638 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202751179 seconds)
  done (took 2.035993281 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377714132 seconds)
  done (took 1.983027117 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132084235 seconds)
  done (took 2.73849644 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258619195 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176229274 seconds)
  done (took 2.044084808 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.474431117 seconds)
  done (took 2.084270188 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.877132789 seconds)
  done (took 6.486536015 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211813447 seconds)
  done (took 1.861587496 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233925049 seconds)
  done (took 1.845364022 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.722733922 seconds)
  done (took 3.333505248 seconds)
done (took 44.129233164 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0825132 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083562476 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083113661 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080287989 seconds)
  done (took 1.928394851 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078246664 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074580354 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078346124 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073831029 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077881383 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074892437 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076419784 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077037647 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074056998 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074902516 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.0742387 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074410067 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076429134 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076511034 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072660702 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076568522 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077545889 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074374162 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077163777 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074561943 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072043461 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076574451 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076690745 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073485813 seconds)
  done (took 3.427665475 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079398573 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074058239 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076032253 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073758613 seconds)
  done (took 1.923306145 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079510989 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094116323 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093372784 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079643844 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094300266 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088245737 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070985143 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070273006 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072567732 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079245729 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069689802 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098359272 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089901354 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079504821 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081396422 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067245843 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070271673 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089074915 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080247888 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080194592 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071953544 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079446722 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070168862 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090571852 seconds)
  done (took 3.556120602 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087975791 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107203997 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082696665 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091278814 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092662231 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067069595 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089298312 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093669439 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128511408 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066933785 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072083678 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06750962 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075398087 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067085113 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082544684 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109888404 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113355028 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070581725 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09881866 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067416088 seconds)
  done (took 3.357636087 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075016608 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071157149 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067897953 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070859655 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079036853 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074494966 seconds)
  done (took 2.066427965 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069789997 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069934053 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069606492 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068796909 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074304076 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06982362 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068193312 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069535456 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07014771 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069559706 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068956405 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06814482 seconds)
  done (took 2.459718695 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203285358 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069823794 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071120955 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067853345 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071864738 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068323699 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083051848 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069902159 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093579105 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068613262 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068556317 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070436189 seconds)
  done (took 2.631028865 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210003314 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077964879 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241519103 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153635574 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112821529 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117883557 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114815142 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115070798 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144236092 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103031965 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170844395 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169527925 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110124358 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139265741 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091520862 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103774297 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157060346 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165561117 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107832855 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169326467 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147645629 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128819457 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154986883 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10433343 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108542781 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12479162 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073170624 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082352079 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173347342 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135584 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147194801 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113058229 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094277134 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178073924 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173290485 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143208254 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150305393 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086660314 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107410281 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.137553442 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204346581 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091458748 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165439257 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111742875 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085132591 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136618033 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121449427 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121313709 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108520855 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091528778 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148507786 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185819493 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13933778 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089889776 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126647647 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11559843 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116020438 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115891903 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185903066 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165355911 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130404349 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073341958 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110507827 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156305519 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134959574 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110712813 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129045381 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093696742 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138358245 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157964011 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123256343 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147452089 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.119425389 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090633759 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120083229 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142512926 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129856615 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163708307 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126573351 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07462664 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125880769 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104110895 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083041252 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147452974 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076895222 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178643171 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101596491 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.112191377 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128130781 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111112557 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111841461 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162249813 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1470074 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10486538 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.209314589 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107569207 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122637575 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1481743 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088816631 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109367233 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120161541 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079212651 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13922922 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077174251 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125282951 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07934217 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125890221 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134816843 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078880441 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124647657 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106911729 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101423898 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13497006 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162066137 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08979704 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083424705 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170997514 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125265096 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106239317 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146670371 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158329653 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102587855 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103209359 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151197279 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182308397 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091378579 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164729912 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108239806 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085354448 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089566552 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12522713 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113653815 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12540474 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083359268 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119300637 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170131213 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076137576 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097101918 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135206049 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080818081 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082092784 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107948636 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106796274 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097755356 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102091475 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105410016 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138950323 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125311085 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107141893 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125733703 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24521796 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173753601 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089968681 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103366633 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107141482 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071870458 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137867734 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160084955 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08139643 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166878005 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124488103 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118536268 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119716215 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085211701 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14335979 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081396346 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072000946 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147160031 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111641989 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112112502 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152926269 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118029348 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129320188 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120154702 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136293876 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132960935 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131706446 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107185781 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089562963 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112512082 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128781869 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074866391 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092599379 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081666329 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106632624 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097808806 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085122997 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143831436 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126170697 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111865782 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113087523 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098642292 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149440745 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078142429 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130301643 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120237757 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098375 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15510947 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155773181 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134764154 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101698529 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138881836 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072212987 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075782321 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089721139 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12353842 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228307392 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085840885 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119170159 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149868364 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130962089 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139328906 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126456349 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122053528 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158262906 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072595205 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119773623 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148985127 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124285688 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106321041 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09258505 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101504696 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145641934 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109658798 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186172611 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117638685 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12462444 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155447946 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102999642 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08141059 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104126541 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138057553 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105559972 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146480203 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100515109 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090205786 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111091073 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076349558 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100621856 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12943373 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120624227 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135856208 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117255587 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134398153 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079318505 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11760522 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123426139 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124164109 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065911945 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121251841 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16400741 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096918341 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120420458 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157028233 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08132431 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135892077 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176270301 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290860733 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088524215 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111178167 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122262983 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13061434 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122071858 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142423348 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109694345 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138579246 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112339223 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088120092 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090168038 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099774608 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107980574 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096651278 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108941643 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116070282 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097745117 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133007228 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105514917 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112429917 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117370005 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100928082 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092780688 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098551659 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17921472 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121561944 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174086536 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102156268 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147363514 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166367018 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077099604 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081244689 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080089124 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142858147 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086912861 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132246814 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109376599 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119906583 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126119411 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144662216 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097621148 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070120139 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110092362 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13506023 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126362874 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100394172 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105615001 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165639103 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103235577 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083876639 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115894108 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11830203 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10516671 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174461223 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063126264 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107427393 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077844476 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081922311 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274076634 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155690993 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082025052 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105598631 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121146608 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115191822 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129703273 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102127905 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110473438 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128054726 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152433219 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131269228 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091391999 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114899002 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129980246 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158632786 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107769788 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098492957 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176179688 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154788235 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162799041 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089640606 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115262189 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115344283 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109710005 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140133036 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085209389 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165644974 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084024469 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138258283 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105446683 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090768401 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131451627 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10983704 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089747352 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150200081 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119501097 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084440106 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07943462 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120212062 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122089749 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10823952 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077348943 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141294484 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075283373 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13468028 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163038628 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082771978 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106402867 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096830229 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080651963 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109800661 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24883011 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09013812 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10155515 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17509756 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089169019 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15273963 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134969752 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114757633 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138248812 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105014149 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641733239 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08032454 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154891699 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1180818 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176275214 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10146493 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118932003 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111647213 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124082742 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147992644 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105638322 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182286904 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135059443 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117362076 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081262236 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104188473 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105628282 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089734407 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109724412 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114043586 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117348518 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094273521 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117410345 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126791999 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083645084 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097772316 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157790187 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118338008 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145709818 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143214457 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087555177 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119227135 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140276356 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082367323 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122906897 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155003348 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108948954 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101408039 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082483859 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101721544 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160143033 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074591053 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.308742177 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123164447 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111722725 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115571292 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114972503 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134153115 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109084157 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12333026 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095128975 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110470955 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116251822 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08405492 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079347763 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10878997 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114100584 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10044908 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09934964 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100978345 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155120183 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074475546 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101004536 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117084786 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147335657 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178182543 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090094083 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084705219 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121245493 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116677462 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115261921 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123141225 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080925624 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084941635 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081527715 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.080459993 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111341772 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114803637 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116286152 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111769234 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166129167 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084698949 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232426486 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097205962 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107110558 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071253452 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080212699 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097887154 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100273455 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109541933 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112097127 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162411827 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097209974 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092098394 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093619161 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075706413 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085476206 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130483345 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111596228 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121540789 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245021161 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064614253 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110466585 seconds)
  done (took 60.184870777 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109691187 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084628736 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095849948 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146564604 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124849743 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204870171 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155840155 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191082212 seconds)
  done (took 2.840149214 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070232194 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09733457 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105559325 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085823389 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069162898 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070413396 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234673727 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083729977 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068733234 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100862816 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081364034 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071374775 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430738391 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067904956 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069506825 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064108398 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06911775 seconds)
  done (took 3.5600168 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392260184 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614163087 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355256961 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074784293 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.474140172 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08646608 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.158647038 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130557922 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075436317 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.52804532 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.406027593 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127048074 seconds)
  done (took 18.15716643 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077877032 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071861223 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085913623 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085824683 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075267021 seconds)
  done (took 2.126180775 seconds)
done (took 109.884612522 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082829765 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.614951174 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055182802 seconds)
  done (took 2.428925369 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085134576 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087448766 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086909671 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085357487 seconds)
  done (took 2.083549412 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076275407 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078250309 seconds)
  done (took 1.887896678 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234990412 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166768355 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098300243 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085522127 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081117683 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082199238 seconds)
  done (took 1.984892012 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074673192 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076653492 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074794913 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077990871 seconds)
  done (took 2.034997032 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078532731 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054321036 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057237478 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059411895 seconds)
  done (took 1.981804776 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089421702 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081219286 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080563895 seconds)
  done (took 1.983030808 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103739585 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088187463 seconds)
  done (took 1.92378596 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084195127 seconds)
  done (took 1.81725997 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096914339 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10367087 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133404633 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112836991 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141458533 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111565755 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086815525 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087974642 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077963814 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088387359 seconds)
  done (took 2.773482573 seconds)
done (took 23.212102826 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080527037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.460870309 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362391112 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092920353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672228482 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358015117 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999112136 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094617809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117250772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069579171 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086227243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651505324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.991853602 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419896367 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978539987 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325314161 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651933703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069919433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069543262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06955636 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986503636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069715081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069566701 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070862498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651741684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374275758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069956775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321125008 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069912354 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072038782 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356804991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070396582 seconds)
  done (took 16.52426765 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072612303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122447506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074588468 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08695577 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072211347 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071425088 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07287308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070550729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122463251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069620644 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087104089 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069055332 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074144004 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087938466 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090082623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070388416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070852251 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070838044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070358166 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070410438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089035935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069685576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070661327 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07061079 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070269026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082856492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070867 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07071514 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070313054 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072002239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072700418 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070677274 seconds)
  done (took 4.223644209 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117992596 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126466878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075401069 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10545731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113036435 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072358921 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145824122 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095335517 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129094721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070031313 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087748143 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06992284 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104535406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070698403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090970842 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070051528 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071065977 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070545683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069915917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069877735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0896807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07071949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071062681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070356643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07038255 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084075775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070034873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070603958 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070349921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071654027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073101401 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070578456 seconds)
  done (took 4.455992668 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074629482 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077611582 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084940194 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086696813 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071890759 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073752245 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075510364 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071677423 seconds)
  done (took 2.366014569 seconds)
done (took 29.30845623 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080763908 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071154601 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074393878 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084665377 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075303128 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080612606 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069079787 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077537135 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074343447 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07543226 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077074254 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069571375 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073107883 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069366899 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075803381 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069941276 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081239657 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073577315 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081503854 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080871215 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071698386 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074761302 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077043826 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080774073 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080917361 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080959967 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079234261 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07431474 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070334085 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072291237 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.0791609 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085566469 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069967384 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080865897 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069311082 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069312605 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073786689 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069227864 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081462216 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078461731 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071042197 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078499015 seconds)
  done (took 4.912459036 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089765977 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094633638 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087141701 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063155729 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068696077 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067845476 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091431411 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061752557 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061221904 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090185497 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057403706 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061566899 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065019822 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055583413 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062402041 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058035491 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063821386 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057471032 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061788601 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061427212 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093621517 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055679054 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079337608 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065717345 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057705382 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063448281 seconds)
  done (took 3.553194063 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076337894 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087554788 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092562952 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134116308 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107904597 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081100223 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08128422 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096975803 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091066446 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069249657 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073105403 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095264622 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09221704 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075801235 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069798982 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08827816 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085907116 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071122784 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075683783 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096907111 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088914169 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087781093 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098518407 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085869065 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068731781 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071542783 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072811832 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083136864 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073899453 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079309147 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073150233 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073279957 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071465267 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081119301 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072774774 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07112739 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093790051 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079318799 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081038253 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07001664 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07740372 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070579079 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094094631 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1277137 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069083849 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075507967 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072803209 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078959366 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069815856 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08987833 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080916237 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069100384 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072415466 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069337136 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069802216 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083216892 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071561565 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071147551 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078452371 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075601805 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094030891 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074281128 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085503992 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068788793 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077440604 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068649334 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069857229 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068752383 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097603172 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071043542 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113051454 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070369499 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0703177 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078385843 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077359513 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07560074 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070388246 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085007 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080077164 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07291382 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078903529 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072710124 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071994261 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093506775 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071508809 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070974871 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071152372 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075429447 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073875413 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070647836 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082946962 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069014046 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072097303 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086371055 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069195102 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070470075 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074973445 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073934362 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068819719 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080860128 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074246713 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070347079 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079282613 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069441487 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072151605 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082268576 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.0757637 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068163357 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073627607 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075723427 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07044352 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07175892 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072561339 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071645735 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078538829 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076362429 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074625955 seconds)
  done (took 10.973488299 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167519798 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159423562 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072408424 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151874397 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078207664 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081691194 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15340873 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097106056 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069588208 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070524144 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070701032 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112517632 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108028838 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118193426 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080787356 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06994776 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086390539 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117246278 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155236421 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149141436 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087117302 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079657215 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071605238 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070577976 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072999032 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080348681 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087896427 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079095434 seconds)
  done (took 4.587101346 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082619893 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107158894 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076680059 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093237259 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092547778 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069871084 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072213126 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071459037 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083663027 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080075508 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069258438 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075009715 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076441986 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072867202 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070185755 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076761807 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077163572 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071360898 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073116643 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075380363 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080973784 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093749135 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073398332 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069550533 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075605766 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068842957 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065913718 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086484946 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070432411 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097675986 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067267319 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074494228 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084626957 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070558559 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069841174 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070077714 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069760029 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069411745 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071534049 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067873727 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06828448 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059269176 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068758839 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081383487 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07660436 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05803911 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074055347 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074841027 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074449939 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067501295 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072606345 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072081925 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073025704 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077401032 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073360794 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074910358 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070907528 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076530079 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07900863 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069213027 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066449766 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067973984 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074132863 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066758529 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078044794 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074606704 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068060857 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069131987 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071571477 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076658628 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069358241 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074154921 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067048846 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071014989 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07427273 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071519947 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070552259 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067797843 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069303861 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070040809 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056945988 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069802112 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054789362 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072300498 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067517239 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.0680727 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069529365 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074329967 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081715332 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070650878 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075162823 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070464541 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068393505 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072515318 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061824922 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072496494 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085327951 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084427305 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069558903 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067787074 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083059863 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074312745 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068551274 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058304798 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074819163 seconds)
  done (took 9.480290046 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092771039 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071935665 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08675309 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093513193 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089318137 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077089542 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079619821 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0716906 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085549265 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075774243 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079287998 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069761394 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080132973 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079385318 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07180212 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079878888 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074595792 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086854952 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085291623 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070657488 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078665504 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083359671 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092568265 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08455461 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083198805 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084548071 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093451068 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08024714 seconds)
  done (took 4.075481737 seconds)
done (took 39.325417742 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.839747061 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.999905541 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.830397331 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.196773822 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.077099898 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.858874393 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.905852038 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.823979147 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.950643591 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.865640749 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.026645901 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.951372027 seconds)
done (took 66.09091171 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.866846789 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.967134221 seconds)
    (2/2) benchmarking "String"...
    done (took 2.058112652 seconds)
  done (took 5.789752195 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.048169772 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.449106858 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.078622807 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.824336705 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.83159133 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.168523925 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.631234475 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.364464931 seconds)
  done (took 31.112379101 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.017196615 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.052970146 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.575840529 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.574195155 seconds)
  done (took 16.039671205 seconds)
done (took 64.78937534 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.861602936 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.877443796 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.858951346 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.811215984 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.887435149 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.835348158 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.98360897 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.840944566 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.830004766 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.817669086 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.828566955 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.258991255 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.834334967 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.005007551 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.828730171 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.835100026 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.884539354 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.35650239 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.984206768 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.838823016 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.851529211 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.875878369 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.827318505 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.837061744 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.880432289 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.827398063 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.22256957 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.831203498 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.454532358 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.827335183 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.85657117 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.172189243 seconds)
  done (took 205.487498987 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.826761925 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.906308053 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.952936437 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.865452343 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.42896779 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.010260623 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.946978629 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.46432324 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.829322317 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.856270454 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.15261144 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.827197186 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.159660928 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.835708702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.857354696 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.82824316 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.067397501 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.161312251 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.861621575 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.997968763 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.847734526 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.93813559 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.909263815 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.122427916 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.867793714 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.919942667 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.831395193 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.997317326 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.023507742 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.056253088 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.835639865 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.841075772 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.049053919 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.701053928 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.838422791 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.844362664 seconds)
  done (took 173.227729812 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.212313342 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.829511265 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.828371547 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.82908303 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.840996645 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.829073811 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.96012411 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.95429111 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.429791761 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.578073894 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.831225164 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.881822205 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.636214492 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.829196486 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.896708559 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.841668058 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.833951137 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.845403674 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.858605461 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.829937458 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.828661521 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.955535372 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.841610611 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.867885755 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.839555841 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.829827543 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.83518053 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.202014682 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.830065303 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.835407208 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.087374822 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.830835526 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.829192573 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.67592224 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.368680498 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.922117323 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.831543476 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.835046106 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.828648238 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.046942571 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.829581625 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.829846113 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.831925961 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968021471 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.829311241 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.95968037 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.830193744 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.316735403 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.830874353 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.829953448 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.543373488 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.418621033 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.829606676 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.829478225 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.832724246 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.829675101 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.830441303 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.835802784 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.482073996 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.905133396 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.832453009 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.833879643 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.835731404 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.830531391 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.922598651 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.830839493 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.928378042 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.886046919 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.071021874 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.952065296 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.834833737 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.897556737 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.924428656 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.831546114 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.830902849 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.831608538 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.83205661 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.831473743 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.911195785 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.831992224 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.830432557 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.956526889 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.839807056 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.832928103 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.88283532 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.901048259 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.832197941 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.672247599 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.835829995 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.831442464 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.103129497 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.897945881 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.8321104 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.831569231 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.832158451 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.966521148 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.953898046 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.549335304 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.835460398 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.560423766 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.836505417 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.985565244 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.834069758 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.833325489 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.980948448 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.835356705 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.913856674 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.837842017 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.835038884 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.832671666 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.865507898 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.833725829 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.889299088 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.836263927 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.208139766 seconds)
  done (took 408.276240094 seconds)
done (took 791.023996813 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.491218506 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.441358133 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.560171566 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.470282804 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.443267703 seconds)
  done (took 14.178130526 seconds)
done (took 15.947613872 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.921658765 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.928591295 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.858649044 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.925160438 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.856009753 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.924624152 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.909326193 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.86078499 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891950716 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.861716434 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.896041586 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.860679023 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.846732168 seconds)
  done (took 26.314149409 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.065671301 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.066321409 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.907627061 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.06736162 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.883025845 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.061732632 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.999826904 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.982667915 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.985273482 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.851209954 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.847899894 seconds)
  done (took 23.492425574 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.071459705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.07345717 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.913335955 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.088356976 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.885827213 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.06421096 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.997002399 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.986561956 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.990262134 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.850998865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.848711112 seconds)
  done (took 23.54400259 seconds)
done (took 75.12097556 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.844324867 seconds)
  done (took 3.617791456 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.868610706 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.026361007 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.852351927 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.848317749 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.845402525 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.846276199 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.848612634 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.844734146 seconds)
  done (took 16.755479475 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.843361316 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.841276244 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.840577434 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.843135714 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.840794623 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.844177209 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.840717298 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.84305016 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.843340792 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.844733603 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.840647723 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.841159201 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.844206888 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.842747919 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.844894387 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.840995513 seconds)
  done (took 31.25533349 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.844675158 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.841566935 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.842195898 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.843041296 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.841503848 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.842753343 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.843098995 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.841982617 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.842505472 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.841806199 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.843218762 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.842753938 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.843978415 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.842195998 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.843348773 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.843076078 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.842081371 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.843100731 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.846999353 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.843043915 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.843392843 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.842122073 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.843786418 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.843564832 seconds)
  done (took 46.009935197 seconds)
done (took 99.409850519 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.746619854 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.221106006 seconds)
  done (took 8.74374036 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.846762697 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.845218341 seconds)
  done (took 5.50256197 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.845901564 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.846642367 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.845648547 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.8459747 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.846153814 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.846129926 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.84621983 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.846470431 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.845791746 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.846014682 seconds)
  done (took 20.23759588 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.845629043 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.847059471 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.843882794 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.845932067 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.846857253 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.844217557 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.846787881 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.846824768 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.847386745 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.845298466 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.847014741 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.844276663 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.847420221 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.844698742 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.846823538 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.844085701 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.84448185 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.844488616 seconds)
  done (took 35.001121953 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.847007273 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.847290373 seconds)
  done (took 5.472035596 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.845217729 seconds)
    (2/7) benchmarking "second"...
    done (took 1.844024515 seconds)
    (3/7) benchmarking "month"...
    done (took 1.844661549 seconds)
    (4/7) benchmarking "year"...
    done (took 1.844111273 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.845335564 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.8449238 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.845232201 seconds)
  done (took 14.691514195 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.848697574 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.004967812 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.074246536 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.477326823 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.847886279 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.849573249 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.773593043 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.849333976 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.851392205 seconds)
  done (took 20.355007907 seconds)
done (took 111.778376596 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.657183692 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.841501811 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.196965736 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.942381121 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.858780206 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.185126335 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.883981629 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.151704961 seconds)
done (took 43.492954379 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.932342443 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.38820196 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.421598926 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.267237668 seconds)
  done (took 12.854683025 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.825889751 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.359672526 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.877106459 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.422286713 seconds)
  done (took 20.282068078 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.209406096 seconds)
    (2/2) benchmarking "read"...
    done (took 2.20517637 seconds)
  done (took 6.197621543 seconds)
done (took 48.043612752 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848534251 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.847342333 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.84458527 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.844981716 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.847020377 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.844232568 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.844572808 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.848094262 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.847726716 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.847934972 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.848073669 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.848310011 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847588311 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84517101 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845420663 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848222232 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.845312651 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.845494712 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.848276062 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845011998 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845180755 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849081356 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.845717206 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.846654017 seconds)
  done (took 46.097047482 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.848477801 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.847457168 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.849077947 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.848319751 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.846624096 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.849020983 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.849887618 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.846503837 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.849338162 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.849228084 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84720345 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.847113047 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.849196176 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.84755243 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84962331 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.846717378 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.849345788 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846616595 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849785001 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.84665548 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.849806197 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847013876 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.846472916 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850110851 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.847340928 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84807005 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.849776406 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.848232507 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849391886 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.847216114 seconds)
  done (took 57.227011815 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.854391331 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.857891801 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.849698272 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.85098141 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.850374829 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.850387809 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.851059584 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.850488498 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.850304727 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.850242581 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.851057559 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.851556797 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.850985536 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.851966038 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.851400668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.850873311 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.850816979 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.851721621 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.851386558 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.85134961 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.851487572 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.851797381 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.851290743 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.851671982 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.850981987 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.852221441 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.852156813 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.851783185 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.853179221 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.85211076 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.853216562 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.851866819 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.852384582 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.852187845 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.851725307 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.852551073 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.85734733 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.859942825 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.852466796 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.853583115 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.853875494 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.853647321 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.853208573 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.853868336 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.853648065 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.853224407 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.853232573 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.852675041 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.852963543 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.852553918 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.852736283 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.853440083 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.853493972 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.853952014 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.85214677 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.853891586 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.853310925 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.853218192 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.853996396 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.852579083 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.853394461 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.853631955 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.853323905 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.853923087 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.853455979 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.853377502 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.853892319 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.853471477 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.854631537 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.854435643 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.853410376 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.854894681 seconds)
  done (took 135.179340994 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.853285749 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.851613699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.851273981 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.851421765 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851068443 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.855028701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.851997891 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853986946 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852108684 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.855530166 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853624986 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.853208018 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852198908 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.856373275 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.854742894 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.852064173 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.855188938 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852407452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.854659699 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.856081705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855668912 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.853142704 seconds)
  done (took 42.561030179 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.85471899 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.855822554 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.852918573 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.85550134 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.852531091 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.856048494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.85623092 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.854972933 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855480653 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852526775 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852885769 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855644391 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.852951765 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853328907 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853578861 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.853013701 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855970104 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.853406317 seconds)
  done (took 35.163771331 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.853564732 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.853545686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.856018791 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.853629849 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.853752722 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.856886279 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.854218168 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.856618211 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.856239839 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.854046601 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.857464783 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856696934 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.856962408 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854209617 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857108587 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.85439429 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.85645339 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855240298 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857573571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.854885094 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.854450213 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.857135991 seconds)
  done (took 42.607576338 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.857131425 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857202512 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.854051299 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.855644292 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.854150494 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.85706263 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.858054516 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.855011534 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.857214142 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.858029878 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854597299 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.858087108 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.855388652 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.856934043 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.855283529 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.854973409 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.858114298 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.856542301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858091487 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.855496089 seconds)
  done (took 38.915340981 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.859622523 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.858793184 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.859908542 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.860279156 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.860103428 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.8603014 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.860107174 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.86063988 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.860791828 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.860696291 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.860477667 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.860301434 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.860145952 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.859873103 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.860250518 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.860482658 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.860318334 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.859925312 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.860605693 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.861458243 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.860671731 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.860731499 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.861694954 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.860542263 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.861220294 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.861283164 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.86077673 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.86097312 seconds)
  done (took 53.882357363 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860797733 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.859843841 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.85839731 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.858400395 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.857701007 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.85783524 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.858731587 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.858238031 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.860866999 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.85774838 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.860620148 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.860412633 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.860703572 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.860649895 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.860393093 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.86172968 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86049609 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.857872829 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858651699 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859301483 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.861778022 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8606547 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.861879601 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.857894559 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85808966 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.861176463 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.859375721 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.858901926 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.861310042 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.859215274 seconds)
  done (took 57.580830012 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.880088302 seconds)
    (2/2) benchmarking "in"...
    done (took 1.87946385 seconds)
  done (took 5.551050333 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.858713474 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.861566842 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.86194645 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.859097397 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.859174394 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.861543921 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.861641373 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859109187 seconds)
  done (took 16.674006765 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.860966278 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.861698621 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.861425483 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.862120078 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.863620681 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.8619155 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.866995648 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.862193252 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.86337002 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.863079865 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.869265913 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.869967174 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.864269791 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862744179 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.862588271 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863962512 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.863452386 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.863803851 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.863498785 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.864390745 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.863908907 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.864709735 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.864506954 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.860487589 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.864047394 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.872618992 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.866367278 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.862735426 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.861847332 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.866478924 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.862647787 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.860891028 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.863738884 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.864055452 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.863321045 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.863878498 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.871146715 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.86356794 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.868178959 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.864596404 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.864757359 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.861887428 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.864276437 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.865879334 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.864930918 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.865338507 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.863720658 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.862670868 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.864111241 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.867292816 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.869372487 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.863798798 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.862053711 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.86663672 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.865297088 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.870937934 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.865753034 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.867940296 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.874365676 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.874245198 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.877224572 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.872890966 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.86621152 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.8668041 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.874031718 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.88954815 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.870868074 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.863108523 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.862642724 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.865807271 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.871408592 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.878781324 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.874681925 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.866561782 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.866532866 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.866521553 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865681312 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.866284924 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.871824947 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.868269579 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.868311192 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.867436871 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.875703859 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.889305246 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.865274535 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.866897777 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.866816445 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.867218841 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.867620553 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.876546198 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.867807085 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.866719166 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.866015203 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.866640751 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.868233128 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.868517344 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.8665225 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.86737169 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.864144125 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.866988319 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.867597234 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.870432289 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.876094459 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.86835899 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.868944262 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.873123838 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.867169665 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.866579614 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.872889466 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.867193836 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.868521268 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.868649475 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.873446998 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.86431203 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8703916 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.87638319 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.869171528 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.86904834 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.86996216 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.868562173 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.878278585 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.894070613 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.868926993 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.868750369 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.873253735 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.881283134 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.869719496 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.87097362 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.868845053 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.866221428 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.866121886 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.870099984 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.869432828 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.87010498 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.870558491 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.869758275 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.865631394 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.868862161 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.870079932 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.870456613 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.869398026 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.868664828 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.870656381 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.871597216 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.871258456 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.871046086 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.87499945 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.869204135 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.870199923 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.871087303 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.866193352 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.869318345 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.870893778 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.871517278 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.869953272 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.870289649 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.869165238 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.871037285 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.870565703 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.870128283 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.870218846 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.870890209 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.874081099 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.871964343 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.874228935 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.870455764 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.867434088 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.870425223 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.870510183 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.86990744 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.870659425 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.870244945 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.874813384 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.87988195 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.870210657 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.871760518 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.873319249 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.871825071 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.871673835 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.872253553 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.874680592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.878995566 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.87241448 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.877655297 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.872455702 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.87244582 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.872312353 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.87147184 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.871541521 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.873195729 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.874047572 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.879671701 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.884408252 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.880572789 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.873079692 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.876063441 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.873273106 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.877413843 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.875596452 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.873492162 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.872534915 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.873530054 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872147332 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.874078498 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.87386955 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.873820436 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.87237678 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.873492243 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.872614288 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.873019579 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.87372662 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.873383984 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.873454095 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.870663093 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.873189642 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.874041385 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.873076691 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.869878611 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.872471502 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.873359044 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.87332078 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.874798992 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.878865193 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.871009769 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.874564073 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.87512113 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.874795053 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.873351118 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.874133256 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.875376366 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.874316014 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.880085307 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.874386396 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.875436561 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.880523833 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.873730539 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.874154882 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.876999343 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.874717633 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.871955367 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.877262353 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.883091662 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.875591853 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.875649941 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.875299675 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.874200189 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.874733879 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.880520216 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.872675695 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.87403377 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.876222595 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.876983568 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.872619197 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.875996839 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.876069675 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.8757146 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.876288138 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.875746331 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.876611177 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.875993428 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.876525734 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.87658431 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.876332682 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.87779694 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.884632397 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.879517968 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.876338625 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.877687896 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.877061084 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.879395438 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.876653583 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.877013016 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.875308962 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.888232542 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.885245417 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.881282079 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.877559973 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.877002212 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.880766132 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.877860344 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.880407136 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.877225371 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.877062849 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.876170143 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.875660691 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.875308279 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.876959525 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.876796114 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.8778148 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.878236074 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.881383195 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.877211505 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.875965457 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.878753435 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.877741021 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.877180759 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.876631875 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.877663209 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.879039571 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.87886538 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.876544225 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.878143272 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.883342129 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.877593526 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.878169069 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.877643318 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.87719277 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.877111836 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.878203126 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.878915086 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.881652085 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.887578035 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.881383425 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.887699301 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.878793364 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.886696495 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.878946693 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.882399204 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.888205154 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.875158286 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.878142264 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.877981832 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.879127024 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.88425287 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.879488764 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.879708289 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.88344416 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.87989389 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.880310029 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.879600009 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.880025955 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.879355567 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.88121948 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.886050885 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.879549991 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.883979999 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.882217648 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.877139093 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.880786712 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.879588244 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.878985691 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.883930566 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.880682983 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.881768578 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.879821778 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.879729352 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.880591637 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.880654313 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.881453457 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.878352492 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.879572782 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.88493731 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.880957877 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.885220285 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.88120394 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.888754015 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.882144042 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.886490906 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.88214859 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.88071644 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.881627925 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.880897172 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.881842178 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.880762824 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.881013616 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.882358068 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.881804059 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.884784031 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.882298634 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.883110428 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.881798102 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.883272806 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.881255566 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.890998546 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.906095029 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.882914139 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.886139816 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.878818663 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.883336239 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.886836361 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.883657325 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.880848853 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.884589513 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.892095004 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.890399769 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.882867408 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.884408859 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.883065997 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.883437648 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.883474816 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.882136742 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.883511138 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.883712207 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.883946174 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.884176967 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.887056754 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.882698441 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.884058533 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.883858117 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.884342457 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.892498802 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.884340943 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.883919885 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.883275886 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.882629141 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.88328603 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.883520067 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.884038033 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.88337848 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.883232776 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.885314967 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890719585 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.889964929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.886070312 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.883365525 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.884676726 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.883851261 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.88374898 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.884975404 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.883718483 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.884267949 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.884440246 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.884481222 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.883987522 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.883138981 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.884178031 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.885072297 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.885152343 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.887032789 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.891128965 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.884819157 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.882048191 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.884436524 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.88404638 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.883643939 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.884883072 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.891149096 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887433587 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.896116349 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.894164809 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.88977354 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.885197277 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.888071874 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.893241368 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.883718676 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.886043344 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.886198428 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.8871474 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.886213045 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.88905695 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.887594192 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.891305075 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.885923634 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.885010814 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.893633823 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.887401464 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.886343176 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.887883711 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.890789439 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.885165815 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.884174409 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.885642681 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.885232312 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.891474869 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.88827558 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.88705886 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.888149731 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.884828259 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.887452883 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.89131706 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.886697819 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.887110547 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.883549381 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.887355883 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.887720354 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.887275299 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.883591395 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.886566382 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.886182346 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.8901658 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.894807084 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.884189525 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.888348431 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.888044448 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.887602275 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.888905006 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.887411731 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.884780167 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.883998613 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.887648202 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.888667373 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.887890119 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.890407567 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.887321135 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.889516193 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.890109041 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.888995276 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.890921798 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.898395383 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.897180397 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.885466867 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.888063419 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.88914249 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.891239313 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.889524106 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.889643855 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.888570289 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.88950821 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.88908777 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.890158896 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.888677894 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.891803654 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.903349911 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.889106551 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.888383123 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.88831904 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.893173401 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.889382457 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.885940057 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.889849534 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.889965681 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.892132351 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.89823973 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.890436528 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.894095817 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.888767404 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.891021087 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.893961661 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.892780341 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.897057383 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.892924584 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.890731219 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.890083574 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.89481824 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.905701704 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.889670817 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.899439462 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.91841715 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.890552979 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.891416018 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.891284713 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.889059972 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.891991563 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.892404745 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.89267992 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.891395989 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.891425358 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.891498497 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.891767893 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.897607404 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.891746057 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.89160354 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.891147133 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.890994234 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.891571155 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.887866825 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.891555429 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.89075391 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.891852953 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.891848803 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.892495458 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.891533521 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.904893334 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.900616842 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.891759295 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.89262933 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.888666514 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.894243505 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.893512448 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.902423388 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.899390967 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.892704947 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.892713251 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.893379842 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.893082442 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.888924596 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.892256125 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.891758318 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.891831864 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.888994724 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.90390584 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.901597976 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.896810514 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.892072427 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.893907426 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.893119151 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.892516549 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.893509051 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.893533955 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.893618279 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.893459565 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.898153747 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.892952104 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.893003565 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.896455796 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.900836368 seconds)
  done (took 1121.952592248 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.890355507 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.89011921 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891068694 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.889746262 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.891401543 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.891550805 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.890757515 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.891142703 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.8916427 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.891989769 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.890868576 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.891226252 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.890838565 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.892055829 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.891390688 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.891590765 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.891600757 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.891805053 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.891536827 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.891348354 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.892289754 seconds)
  done (took 41.539341771 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.893917945 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.891746773 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.892238798 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.894694751 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.892333864 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.894370718 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.892232759 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894603867 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.894845828 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892159843 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.894908296 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.895825907 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.893040981 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.892702664 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.892251538 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.895046021 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.895165588 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.891797059 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.895373005 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.89221125 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.895584831 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.892667857 seconds)
  done (took 43.483799586 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.896352706 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.896419832 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.895347141 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.89266915 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.896423369 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.892396669 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.895924678 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.89584227 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.89677006 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.897078935 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.895161188 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.897253309 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.903314971 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.901417391 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.898493198 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.896662191 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.042293494 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.897565032 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.898706846 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.899223383 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.894139457 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.902029632 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.894693312 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.894067671 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.896891304 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.897400106 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.897208477 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.896119661 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.897706769 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.897251929 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.901861737 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.897158027 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.897423363 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.898453119 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.896627664 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.898206211 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.901817432 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.898432639 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.895605505 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.897429033 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.907659129 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.918070782 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.898872031 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.903831649 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.898020073 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.898482154 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.902081643 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.906239962 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.895254557 seconds)
  done (took 94.990235617 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.898019504 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.898384109 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.895294922 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.898734422 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.898923467 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.898154592 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.898038248 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.897711473 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.895009966 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.895329215 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.898748601 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.896579011 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.895241373 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.897655045 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.898959602 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.895627327 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.89539358 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.89575721 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.895677565 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.895049302 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.895982236 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.898050699 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.899524069 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.896013238 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898382152 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.896763207 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.895830311 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.899252495 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.895785023 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.89635874 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.899157349 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898992098 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.899163189 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.896421059 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.897203975 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.898778131 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.900071972 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.896484915 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.898983292 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.895569973 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.898657566 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.899693356 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.899196565 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.900057268 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.896336379 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.897238034 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.896663447 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.897680744 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.897767087 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.90049945 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.900214208 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.897269672 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.900444432 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.897244683 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.899853476 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.901140399 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.897711338 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.896705295 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.900323691 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.897948635 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.897922617 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.899903522 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.898040134 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.900754301 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.901071588 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.898272102 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.898232711 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.90144333 seconds)
  done (took 130.888492489 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.90211078 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.902239348 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.902154276 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.902871361 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.902998048 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.903720782 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.903599405 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.902172871 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.903110864 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.903067878 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.903150491 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.902521755 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.903246168 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.903022238 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.903883896 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.903949971 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.902721666 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.9035013 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.903261768 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.903381656 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.903859924 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.904269061 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.903269004 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.904982218 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.904034858 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.904497091 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.903480065 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.904010675 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.904258761 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.904350803 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.904921979 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.904345831 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.904130713 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.904011918 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.904864609 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.904414502 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.90397947 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.903716904 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.904707586 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.904601319 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.904373162 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.904229737 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.904586523 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.904969079 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.904502659 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.904691643 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.904490725 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.905171507 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.903990046 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.904336119 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.905331965 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.905539362 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.904971393 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.905371471 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.906046042 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.904956008 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.9051959 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.905271996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.904965326 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.905906454 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.905254194 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.9050975 seconds)
  done (took 119.886693347 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.904432556 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.904327141 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.901709317 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.902127623 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.906228039 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.902742873 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.905050134 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.904803637 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.905159396 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.904609085 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.905343607 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.90211985 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.903543554 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.903811377 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.90154604 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.903611629 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.903130698 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.90237476 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.905457697 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.90287043 seconds)
  done (took 39.908865163 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.902803824 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.904971168 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.903087145 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.902737549 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.905598442 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.903339048 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.906256687 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.905647405 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.903439908 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.905577617 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.90577154 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.906023194 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.902943257 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.903394274 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.906244814 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.903414449 seconds)
  done (took 32.305908021 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.903326641 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.905680101 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.906903098 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.907078594 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.904374142 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.904344188 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.906939538 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.904163894 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.904516258 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.907423172 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.907978685 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.906491473 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.907933021 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.909032565 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.904844929 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.907956823 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.90458775 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.904554159 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.906863856 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.908770276 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.905175162 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.904083032 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.906908177 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.907262272 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.904596148 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.905123571 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.904387359 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.904598182 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.905902746 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.907479447 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.905637438 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.905616223 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.904785841 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.904947966 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.908583119 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.904707875 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.908677206 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.907347954 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.907817756 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.907778891 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.907897611 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.906379604 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.907823998 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.90824054 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.905605482 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.908029889 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.906270631 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.907147435 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.905938908 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.906633175 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.908661604 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.908909958 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.909022291 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.909519712 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.908606964 seconds)
  done (took 106.696297589 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.909010045 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.909554244 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.906432366 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.909036749 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.910380153 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.907420584 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.909489959 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.906691853 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.907232854 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.909230799 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.908340599 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.909782649 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.906680047 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.910096331 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.907229288 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.909444579 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.907345957 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.907795376 seconds)
  done (took 36.189233058 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.907636518 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.907707901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.910044085 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.90711128 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.907335038 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.910332498 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.907291866 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.910282336 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.910505616 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.907674397 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.906178498 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.909335507 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.909867751 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.911639075 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.910502633 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.909753424 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.911860843 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.911335518 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.909264227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.909322332 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.912807178 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.911810536 seconds)
  done (took 43.848582675 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.91140245 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.912211622 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.929383918 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.93384708 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.933175055 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.947646083 seconds)
  done (took 13.408637891 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909561685 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91421865 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909249015 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912499932 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.913936681 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905982489 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906814945 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905438919 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909732105 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906559582 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908554552 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909871084 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911221152 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906745102 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910479727 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909723604 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908446856 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907834237 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907901499 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911140453 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908794871 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90550198 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904233362 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903359312 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903166959 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904120881 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905215721 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90284514 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903327289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905590447 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906203698 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902120541 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902452682 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900971197 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903421836 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904139491 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900904321 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902222832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904548888 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899705254 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.902837747 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90446195 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902071796 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8998465 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902438662 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899851647 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900641293 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898589759 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898858308 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903071521 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901858467 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899266378 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902800312 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901871458 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903165105 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901605555 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900068203 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900881125 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902986495 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900220738 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898947091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903045848 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899843408 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899450191 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902736447 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900214891 seconds)
  done (took 127.53388363 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90060837 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8998137 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899745772 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900383618 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900257937 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899649187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901692095 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899085382 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900610445 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900478242 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90173419 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900806493 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900713582 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900056058 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899480023 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89975969 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900830187 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900407024 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900133086 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904185986 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901439148 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901668711 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901333267 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900500724 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900463807 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903846327 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901576574 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90152412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900857059 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901072234 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900091441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901239608 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90195298 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.901115108 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900415955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902296565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901854533 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902506943 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902249216 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904744814 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903340467 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904541577 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904140551 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90312751 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901863748 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902279718 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901582806 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901810955 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90277265 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900929835 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902319335 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903277854 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901223315 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902892896 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90223111 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902422027 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902443925 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902812454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903049955 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90527808 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902096746 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904044236 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90519375 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902016983 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903670617 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900866465 seconds)
  done (took 127.348618596 seconds)
done (took 2613.197156456 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.92238357 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.970636966 seconds)
  done (took 15.72473696 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.059288319 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.015118858 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.897491715 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.892852912 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.898488811 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.910381882 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.912679479 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.897050141 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.897188562 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.897293378 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.897304378 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.082889968 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.893178394 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.897450625 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.896139145 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.988469632 seconds)
  done (took 52.925713773 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.899736157 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.90306837 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.913431703 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.901990696 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.900661822 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.917381635 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.937515397 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.903871168 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.963107472 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.915131386 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.0195061 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.913751556 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.898345463 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.972617783 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.913438884 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.915885479 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.999402712 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.981025335 seconds)
  done (took 36.597073839 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.980289151 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.908749585 seconds)
  done (took 10.724607927 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.902029009 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.915820545 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.927983113 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.891740932 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.89503487 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.902382942 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.915850342 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.914853561 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.896242116 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.925622784 seconds)
  done (took 70.918716019 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.896165365 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.890346704 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.890741725 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.88809236 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.880025055 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.885465961 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.888361399 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.884619416 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.564454024 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.926149413 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.896503439 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.895838289 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.888474576 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.890095056 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.887978017 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.915009235 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.010783486 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.886515334 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.886802283 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.894570778 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.88945549 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.963124873 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.90352847 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.89076126 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.919321433 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.566085573 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.898899449 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.8951982 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.010246484 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.886256187 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.888332732 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.889255452 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.891222167 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.276523502 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.195286083 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.89088434 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.903148667 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.896114181 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.888994633 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.018925141 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.888858234 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.893645767 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.834241333 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.19160959 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.998183951 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.934549399 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.242399292 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.906804255 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.890269679 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.918875264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.89144475 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.890130784 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.90221604 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.405863043 seconds)
  done (took 133.822016632 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.884386483 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.147326487 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.037782811 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.883418776 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.173557556 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095460786 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.884954101 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933339717 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.88635432 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.113550271 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.106006427 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.992861441 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.884453641 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.88265521 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.884781748 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.879726815 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.043141496 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.957310884 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.883345099 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.87927902 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914517475 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.127230094 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.010341917 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.883930875 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.90224826 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.096429899 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.008486366 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.990916925 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.425525571 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.879921599 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946392985 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.882360645 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.883431371 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.878630471 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.038374377 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.978362451 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970154396 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.882869923 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879647005 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.878890707 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.557758714 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076610287 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.977851796 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.024591104 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.136818156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087039482 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.668950287 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.878409975 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.617403672 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.042379061 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.114577014 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.114983035 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006340446 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.88087844 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.14682767 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.879589926 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.878961127 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.117479278 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.122776998 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.984048105 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88175817 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.879207638 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.880299232 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.127446681 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.883277633 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.976290997 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.883706727 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.879091771 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.976553884 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.984010323 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.12899488 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095261775 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.916655296 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.179551062 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.349725921 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.129346958 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.94813097 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115023228 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.881585069 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.878669285 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.96716505 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.723294875 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081348836 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.134125672 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.136228087 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.919662101 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.602970202 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.881182908 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.109402719 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.105082888 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.135112318 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124900776 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.034403539 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.200238526 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.880834282 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.880466728 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.118597033 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.020054498 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.883072927 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.243497049 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118626576 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.460102464 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.913522155 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.193489727 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018084237 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.883881124 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.52440182 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.880785522 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.109935466 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.931033415 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.884024495 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.88400941 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.104702471 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.866185734 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.882456424 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.580218269 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.948550101 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.885535547 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.118481987 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.886182735 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152035738 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.886223679 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.125492184 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.081615483 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.919362364 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.05746374 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.126942894 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.886309911 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142770715 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.130766188 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.003239656 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.157343537 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.814473067 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.885463781 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.17590891 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.887418631 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.882829457 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.060596555 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.885558489 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.12001909 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.8878923 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.171844252 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914177893 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042938113 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.886831883 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.14482947 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.920486917 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93720826 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.886214987 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017862577 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.887216129 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.924740212 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.037010466 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.886252111 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.883148548 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.410962044 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.885353781 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.042065111 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.117682503 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90895301 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.961610074 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.555015893 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.882596096 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972304654 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90885222 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.223017574 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.88249322 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.101499308 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.884414427 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.424423885 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.883114394 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.125123132 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.122689632 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.886332741 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.882512281 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.789530898 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.883214146 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.880899873 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.043828933 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.720412433 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.884033772 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086417033 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.886389366 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015656246 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.884743515 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.958429206 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.236809619 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.882342025 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.881961547 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.883350681 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.883546159 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.883579615 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092281069 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.914860359 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.418761513 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.02248239 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154811384 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.20255011 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.137185125 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.930671494 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.885856007 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.137121072 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.885185373 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.950355421 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.884840953 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.9080071 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123469783 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.886379856 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098244336 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.167211959 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.817536849 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933817001 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.885585542 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.883267531 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.799577253 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.039099489 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980718544 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.886765745 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.885154197 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.004428561 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.01417419 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.102965924 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.886058724 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.120113174 seconds)
  done (took 906.861901963 seconds)
done (took 1229.405585944 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.884654315 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.884018155 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.8732607 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.884353005 seconds)
  done (took 29.346479319 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.89383119 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.889992753 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.895817031 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.892269334 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.893071231 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.890196683 seconds)
  done (took 13.173606073 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.919358712 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.884296953 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.887062267 seconds)
  done (took 21.510013769 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.960352972 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.280522454 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.005457298 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.316877766 seconds)
  done (took 10.387293775 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.89438458 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.893432852 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.892501748 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.894288131 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.894890436 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.895955206 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.892832396 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.896370249 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.896979041 seconds)
  done (took 18.874304168 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.711707943 seconds)
done (took 99.822798035 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.192917041 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.230398623 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.613232249 seconds)
    (4/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.010711386 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.025124705 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.125002903 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.871780956 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.08254091 seconds)
    (9/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.037770121 seconds)
    (10/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.247720531 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.137111628 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.889131919 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.017008892 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.903014469 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.154884358 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.914757709 seconds)
    (17/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.952707686 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.418054412 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.019349495 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.987307448 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.89621172 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.229811213 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.900744953 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.91313205 seconds)
    (25/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.971461263 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.230881772 seconds)
    (27/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.909263892 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.224862886 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.046644428 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.867255941 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.008368564 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.079460448 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.033434528 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.890836857 seconds)
    (35/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.953583372 seconds)
    (36/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.973235903 seconds)
    (37/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.163832278 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.422451693 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.90257156 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.983498348 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.912798409 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.968596464 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.221965738 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.874268359 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.013998802 seconds)
    (46/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.180361218 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.006486369 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.078035155 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.145167873 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.888080672 seconds)
    (51/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.200880986 seconds)
    (52/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.894098088 seconds)
    (53/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.242448007 seconds)
    (54/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.996372437 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.950351496 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.008431601 seconds)
    (57/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.972804346 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.873351533 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.043350602 seconds)
    (60/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.890365745 seconds)
    (61/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.472325466 seconds)
    (62/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.026988605 seconds)
    (63/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.0312481 seconds)
    (64/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.117119355 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.89385699 seconds)
    (66/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.401854905 seconds)
    (67/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.896513577 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.107736089 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.888236778 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.454456081 seconds)
    (71/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.989267083 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.877063426 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 3.115200033 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.715229614 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.112010389 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.562870045 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.894300318 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.697729057 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.213900177 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.145479912 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.219078338 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.013974884 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.03336224 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.984768698 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.977887677 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.953740789 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.013836462 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.400677343 seconds)
    (89/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.025958764 seconds)
    (90/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.016358345 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.229306576 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.249778578 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.966051258 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.007548432 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.966842402 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.091422837 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.107379103 seconds)
    (98/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.369044959 seconds)
    (99/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.062232485 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.89438827 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.269054963 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.22272315 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.87649675 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.350939734 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.877760302 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.860880213 seconds)
    (107/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.473960573 seconds)
    (108/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.19468589 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.26116586 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.095720077 seconds)
    (111/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.074702375 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.873998997 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.809155675 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.135671143 seconds)
    (115/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.921875285 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.184498172 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.894778133 seconds)
    (118/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.029158813 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.361879599 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.951843926 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.786827865 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.432339417 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.914420417 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.89919331 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.736471602 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.269373916 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.072559101 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.165053381 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.877032592 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.190326066 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.895562528 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.175999652 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.117265064 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.149226153 seconds)
    (135/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.351276531 seconds)
    (136/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.05342486 seconds)
    (137/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.036351747 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.857389048 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.91267538 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.995093084 seconds)
    (141/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.974686006 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.903419324 seconds)
    (143/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.356801956 seconds)
    (144/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.286383764 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.271162003 seconds)
    (146/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.976728833 seconds)
    (147/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.980187161 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.133063566 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.924214723 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.082440968 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.06165919 seconds)
    (152/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.926122567 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.919940524 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 5.680868215 seconds)
    (155/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.974711342 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.878681028 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.005711576 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.913748886 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.894083624 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.255519584 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.851647191 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.584207184 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.825780643 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.172651925 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.200032942 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.908365124 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.715610776 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.985909712 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.283114484 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.587831093 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.105345083 seconds)
    (172/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.89643969 seconds)
    (173/309) benchmarking ("map", abs, Float64, false)...
    done (took 3.472452424 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.398366392 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.885051202 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.485929465 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.114070482 seconds)
    (178/309) benchmarking ("sort", BigInt, false)...
    done (took 6.898517406 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.925967044 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.921700686 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.001803437 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.032218621 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.970345725 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.593359355 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.261241015 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.922774135 seconds)
    (187/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.2801078 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.897908665 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.931826084 seconds)
    (190/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.358482662 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.706532825 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.80561112 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.971473267 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.572012899 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.957003631 seconds)
    (196/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.8957907 seconds)
    (197/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.01720418 seconds)
    (198/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.922147158 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.224372599 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.137785676 seconds)
    (201/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.38557777 seconds)
    (202/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.109069366 seconds)
    (203/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.100344521 seconds)
    (204/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.958982651 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.085983689 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.901550863 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.825987045 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.237556469 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.282324194 seconds)
    (210/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.900844902 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.105211936 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.690438293 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.030843183 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.205699504 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.904225572 seconds)
    (216/309) benchmarking ("sort", Int8, false)...
    done (took 4.969624939 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.184805766 seconds)
    (218/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.099352277 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.199376896 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.929474727 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.004417405 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.191895415 seconds)
    (223/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.086102364 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.903710604 seconds)
    (225/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.608461903 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.919754981 seconds)
    (227/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.321233715 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.946268283 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.820954914 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.291826671 seconds)
    (231/309) benchmarking ("sort", Float32, false)...
    done (took 5.640138454 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.997388132 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.992641101 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.899306353 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.904431825 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.235675355 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.018559377 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.202376424 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.44070763 seconds)
    (240/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.106985052 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.904638456 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.130437738 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.26358812 seconds)
    (244/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.938165897 seconds)
    (245/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.725169934 seconds)
    (246/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.071695718 seconds)
    (247/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.99349186 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.095617894 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.921621708 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.08489131 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.991638434 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.938590182 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.903048981 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.579403546 seconds)
    (255/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.90488822 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.156418064 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.199623347 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.836011002 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.9315935 seconds)
    (260/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.910460536 seconds)
    (261/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.138422294 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.161218309 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.890052137 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.975637938 seconds)
    (265/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.045517465 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.091254816 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.886706153 seconds)
    (268/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.115192375 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.107866743 seconds)
    (270/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.890888551 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.486083402 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.043660041 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.023638795 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.013491912 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.916948593 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.263166267 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.364614819 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.291168776 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.9056467 seconds)
    (280/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.97481346 seconds)
    (281/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.801773017 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.989379947 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.543712905 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.993106177 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.236251255 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.049878531 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.52297844 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.902673446 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.905251017 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.660097374 seconds)
    (291/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.970942217 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.442336555 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.709433122 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.891068401 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.075575691 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.93544401 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.545016439 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.141284435 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.91914195 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.90590169 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.092368525 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.178578431 seconds)
    (303/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.891658494 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.475519915 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.012453978 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.781351666 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.501465629 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.009909414 seconds)
    (309/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.440253094 seconds)
  done (took 1016.760929587 seconds)
done (took 1018.645316762 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.93559421 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.930941151 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.913114107 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.935274796 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.025681412 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.945984713 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.92348644 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.915879667 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.962168521 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.963484004 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.913937789 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.945974073 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.917584106 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.915284547 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.914953075 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.929045211 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.221477757 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.939737308 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.933611601 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.922937893 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.931261507 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.914302674 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.964137913 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.945720442 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.91879683 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.916647079 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.919218577 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.935446848 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.027584129 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.919586588 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.917724047 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.927695756 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.221906533 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.937667457 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.910273235 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.935207797 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.927499628 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.924671613 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.919999969 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.949082194 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.312625769 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.947605351 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.918084753 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.916556373 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.917471206 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.920557622 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.917569178 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.922162994 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.928936231 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.93059687 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.308193377 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.965084812 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.921354081 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.917291466 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.927132693 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.916966545 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.919748038 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.932483249 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.937151929 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.932995021 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.21442678 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.944290223 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.918483182 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.933859427 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.924848464 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.345105868 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.944114991 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.920499734 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.315208602 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.954386459 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.346122003 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.957558593 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.919049876 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.932966855 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.951523434 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.222595516 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.936652088 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.917181718 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.925120964 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.918354333 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.927493273 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.930953568 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.92241629 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.918852533 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.932752233 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.949386111 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.928224805 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.919949793 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.927942309 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.937136048 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.927292433 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.929000898 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.922398762 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.913464275 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.927799008 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.922511224 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.921981384 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.922352121 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.923772881 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.928861567 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.311144838 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.966710845 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.91504008 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.915335081 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.918474856 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.934188045 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.310375501 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.952352851 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.941481065 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.967213107 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.921566293 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.214302348 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.946644368 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.936137936 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.929489739 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.92386373 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.915166893 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.214356691 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.335741927 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.968101644 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.92206274 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.919405738 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.937248457 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.92128689 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.917829531 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.643347054 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.944255029 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.934921847 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.042201081 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.931198634 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.954230338 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.919717678 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.923452024 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.952210501 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.936816301 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.953960176 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.923261209 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.93713629 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.937955795 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.917817696 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.932907976 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.931417278 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.922038837 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.925782279 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.915211975 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.95358789 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.933923878 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.934065448 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.941929809 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.042978737 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.918975585 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.214317816 seconds)
done (took 301.577410224 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.988510971 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.911653988 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.017834831 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.919387994 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.001088601 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.004740244 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.914569798 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.915995465 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.915113801 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.291176427 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.916065982 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.916237554 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.911502827 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.916346851 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.001953409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.918909282 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.916408585 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.255187186 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.921199589 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.991387321 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.91166388 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.917239065 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.919051288 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.293305371 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.91501503 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.918210374 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.992086086 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.919694765 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.258840988 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.919028947 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.913422215 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.258425698 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.011168086 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.938156805 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.932796419 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.926193554 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.002789042 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.922198935 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.00168921 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.001994251 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.01962665 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.961521736 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.921172298 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.916783028 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.923786499 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.923195478 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.918113807 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.948454954 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.919582782 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.919484094 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.257732079 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.931071966 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.929698467 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.91993229 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.918669435 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.944631486 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.918074333 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.923878837 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.012942018 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.922396664 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.984374313 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.29692635 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.295217621 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.921009267 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.920586852 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.919090569 seconds)
  done (took 187.652910517 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.988122818 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.996062043 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.987326612 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.925283254 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.972552179 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.9895103 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.924550178 seconds)
  done (took 15.631443098 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.927735339 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.922548089 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.971288328 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.971700136 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.923734421 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.07129336 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.921630888 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.934008531 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.920296385 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.974973208 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.924940017 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923402963 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.929742587 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.915097649 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.971102756 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.933355043 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.037747002 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.923167659 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.92491938 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.074003772 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.921145288 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.930494146 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.976001873 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.935220566 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.923680833 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.92999899 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.507434088 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.923516862 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.921777357 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.922411146 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.920292285 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.964580632 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.923118786 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.923370922 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.921227152 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.040536186 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.924628574 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.920824036 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.924237465 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.916539856 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.923218596 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.923322803 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.924272173 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.921536276 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.923661801 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.947538765 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.92437981 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.924740691 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.925321941 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.924795807 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.974277299 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.925612049 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.922298487 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.923293935 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.980063415 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.932024357 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.926476713 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.922486766 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.925354682 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.922653033 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.075871041 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.971757398 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.925268455 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.973694632 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.927013495 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.925681367 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.924877046 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.926309261 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.019485405 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.92621371 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.974506947 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.922436373 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.083277266 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.949199709 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.927932259 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.9283842 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.928130465 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.926694515 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.92231668 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.93223484 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.922503706 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.926765248 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.933031432 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.924494327 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.924326685 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.037435113 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.033816377 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.9249529 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.938606886 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.933095433 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.924407749 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.978628516 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.928350389 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.924551769 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.980770704 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.042595543 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.982327513 seconds)
  done (took 211.188170742 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.930989039 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.935106573 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.927501401 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.943089932 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.928165877 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.927013116 seconds)
  done (took 13.446594544 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.928393437 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.927957704 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.927085903 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.926502808 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.928758211 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.929073137 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.929644416 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.928307805 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.930916823 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.927840618 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.928585727 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.929183269 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.928399744 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.928129824 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.928616857 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.927539818 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.929173162 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.924362919 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.927660064 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.927602939 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.101250492 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.927712104 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.928122401 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.92899672 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.931581663 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.927615468 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.936247404 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.928135529 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.929097642 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.935735221 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.932206613 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.929568785 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.929024173 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.934098534 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.932315477 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.929326093 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.931839819 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.92984664 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.926598817 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.929745016 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.930112251 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.928941169 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.928659658 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.932351178 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.93058891 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.932179813 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.93312694 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.936338716 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.929895893 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.932264126 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.930841858 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.929292875 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.930462454 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.931063022 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.932599291 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.933255655 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.93378584 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.931782372 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.930848774 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.931221899 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.930178372 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.931338089 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.931926004 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.934024498 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.938584994 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.932160128 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.931054115 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.93408905 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.930944457 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.931503339 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.930931256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.928083708 seconds)
  done (took 142.013283599 seconds)
done (took 571.789356679 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.126414002 seconds)
  done (took 8.98249057 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.97240578 seconds)
  done (took 8.86788666 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.129193979 seconds)
  done (took 9.992714948 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.934727198 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.961327965 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.938631155 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.931138888 seconds)
  done (took 29.641563347 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.040903435 seconds)
  done (took 8.89906984 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.944129333 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.924092111 seconds)
  done (took 15.756519157 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.080223623 seconds)
  done (took 8.939894143 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.011773139 seconds)
  done (took 8.89137147 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.935687938 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.955797425 seconds)
  done (took 15.759972553 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.909416284 seconds)
  done (took 8.767081277 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.570838305 seconds)
  done (took 11.527387124 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.946645138 seconds)
  done (took 8.906975495 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.993203939 seconds)
  done (took 8.853038932 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.923535992 seconds)
  done (took 9.783670252 seconds)
done (took 165.424973876 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.940341044 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.930402099 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.926780723 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.92644054 seconds)
  done (took 29.584607433 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.967025782 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.967155933 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.968765478 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.978774855 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.969911876 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.968465465 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.95970056 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.95989956 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.97999277 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.970594162 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.969689764 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.970680531 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.983308638 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.961221202 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.971697956 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.969902852 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.978701395 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.969758276 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.962153902 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.971669815 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.935065583 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.979474854 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.970508327 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.936413848 seconds)
  done (took 49.082189664 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.13638473 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.006444141 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.089570165 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.989345462 seconds)
  done (took 10.083021245 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.986897095 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.988429633 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.999398655 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.040904388 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.062680127 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.998939226 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.96263034 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.957802156 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.944817593 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.989814829 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.064828169 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.985277884 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.0916841 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.93708082 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.123435884 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.937158148 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.936216712 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.987762609 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.039818735 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.052774971 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.936829574 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.987712592 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.991400648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.986207176 seconds)
  done (took 49.852636244 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.93423248 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.944204767 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.940929195 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.935234958 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.93669037 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.937072136 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.941990887 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.937325423 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.956860845 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.937791951 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.934163852 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.93599611 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.934926168 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.937012599 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.935987203 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.948905323 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.94994972 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.935956097 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.939322519 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.942334575 seconds)
  done (took 40.66006682 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.929743637 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.885885377 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.283324256 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.186225629 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.933099617 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.929589996 seconds)
  done (took 32.011724832 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.94935622 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.941281094 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.937894064 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.992279453 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.072748757 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.945012713 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.937139313 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.947585368 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.980436142 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.998287437 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.957045107 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.962773727 seconds)
  done (took 25.48557593 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.932121256 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.941934553 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.933026998 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.957460757 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.948231938 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.944378067 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.945385314 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.932665108 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.95031424 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.954119189 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.945038766 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.949657554 seconds)
  done (took 45.201942212 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021315955 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.822349255 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.99870159 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644886257 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406699413 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144755517 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.445868629 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273497994 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.938095995 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207117656 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987482263 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178421367 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.187996449 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958579375 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.933361712 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.434488295 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232100377 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162717835 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957208209 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748430565 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053814335 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34023626 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.763829267 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.059958407 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145257134 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.065011381 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.194018095 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.892061115 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072532766 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973261806 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945280219 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934397385 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208404976 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318190879 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032477463 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944994611 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62659385 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.651024567 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.95826954 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.683583567 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.877621385 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.070518605 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943722067 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934858824 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.870366503 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338889013 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27662125 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.940984807 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.646460221 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936612483 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946558043 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023985401 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.93965583 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.750732741 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92300671 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.213984914 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.93297861 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942544892 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.503763577 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.019249408 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439544008 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.871100377 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.127878446 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.676023982 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407378136 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.084014548 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.9400122 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940193113 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870840832 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.676317363 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058625481 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085478252 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.956808736 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.585858655 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263114234 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.043228779 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.021458005 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224009249 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.609792341 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.871047125 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16488961 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.893151344 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871910275 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.796807669 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871186756 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205229413 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97011543 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.5820237 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971349906 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.273489732 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.949831822 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955191631 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945213727 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161703505 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.82042297 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939119971 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.711308337 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228787739 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960898889 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274634922 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874621578 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.941893722 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1938512 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.149151281 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.949745069 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.525218216 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103466893 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93931052 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.022419346 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.636661399 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03663692 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.216570617 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995932577 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.015437979 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068891363 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.891241339 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237289497 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963582981 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.10870438 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.978177142 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202246118 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.273425407 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.227769738 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004396818 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948089488 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.939623105 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.683587636 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.562937423 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.206844097 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.940711987 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.225329482 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036702669 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.941645802 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875931239 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.531610713 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.948145739 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.058951198 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.164449364 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.673710082 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30341943 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876110807 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086584216 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.056838612 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.164262379 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.597915958 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.025977486 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198518721 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209782111 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.045260356 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039785319 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960382882 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032175168 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962807896 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.139955937 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283782456 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.946141621 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.945176784 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.706347476 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.013041837 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946388763 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.946472493 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.738868884 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229979219 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967962696 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.946680758 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.831035968 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.956298552 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009469012 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947562424 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952919921 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.48849483 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709667338 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.954024693 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.538348074 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168585024 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952317228 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.696240778 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125649973 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.025239169 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223306456 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001874626 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.877465661 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.65398124 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.635283774 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943546599 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878790196 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.942859602 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952489897 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954389786 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.323096103 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225402544 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989729413 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.721076039 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.056922101 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954370224 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.948855599 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943812841 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.464527104 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.034246527 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3496347 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041934506 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08181021 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.95870035 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.878631765 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.948598432 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.949739384 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.945485028 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.902738903 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99792506 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.683637318 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394779931 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20352678 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.634763768 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962625887 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.70024999 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.072415743 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.965886766 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.725773451 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803260915 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.027821204 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007355617 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.955468422 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.693902976 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.724661942 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.591137712 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285222311 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255824554 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392318522 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.198314333 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.301697517 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291782655 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183077026 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476015494 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.004354297 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.289029585 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891678139 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030536338 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.604233706 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303967477 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962343706 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173826852 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343604932 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.841803223 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107206044 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157460523 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981433266 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.63093693 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.961180307 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.151077648 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088944627 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.773388819 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165477698 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279954645 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.737993515 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.056985722 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.946724571 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.647475926 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02360713 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.659834534 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.308471098 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.359457917 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.003651936 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440090756 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.953119201 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.392724956 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304615527 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.143279287 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.031619889 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885389258 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.958913132 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.95985389 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.948708337 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.91967732 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.840138199 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.219199283 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959801852 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183021906 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.985252077 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.317869076 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.851878876 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.954271007 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948896371 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246521659 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516749677 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173475551 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.178432592 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.509892478 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956542736 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.884048076 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884021527 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.642699853 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.949923213 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924457799 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173204606 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.131604694 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906027921 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.236173913 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246327463 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20404694 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.962829124 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.230512836 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222779317 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.683331787 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977236917 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.050824229 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.742134975 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.071667476 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.218815326 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185583731 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748848034 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.179795823 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.992950296 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.759816771 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.950188559 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1642265 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.219673322 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.003939068 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198581337 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.671841618 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.958100356 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316718267 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0056377 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.048714801 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.120024656 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.142424595 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960453726 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034553176 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961621986 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.962153721 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.962265329 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999339325 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.953969589 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.088926694 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.966684089 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039809045 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.034374029 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.5340293 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.960750726 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235598562 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323876514 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282142791 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010073616 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.951561755 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960875658 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886601274 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090465848 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.397644109 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22691905 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.082469215 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.249679048 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976716506 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.749907305 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.121901686 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249577151 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228750397 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.847851909 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86433128 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.048640767 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.219475282 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964015309 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.164063292 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184970678 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265956533 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419661118 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.979477203 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380607608 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228160046 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.322011693 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.954726525 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.543018717 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.968715553 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.694168113 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.989305507 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108801756 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234069543 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965070961 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330844474 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.975564866 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.155371252 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.470437079 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.707633979 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315729432 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.945728759 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016847189 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238655173 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345846544 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265341067 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026237933 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966557452 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.657223555 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092901224 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.869053886 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.259350778 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955713848 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16713127 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.66480216 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.966353906 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239490903 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261952182 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.952172787 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.897960352 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008171358 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.966071376 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181107606 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223622229 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204398245 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96576019 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.957918974 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.771361438 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24013632 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013426611 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890387694 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.9595933 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052640772 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202347981 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978274615 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.472981639 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.668476313 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252433945 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.870729384 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979260617 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.248802738 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384881262 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288371174 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.478345838 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187652392 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.51160791 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.706576702 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315689653 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.962610469 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.249271057 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.320502362 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.961269658 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.360577488 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05311452 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.237522216 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275369441 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.977118158 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755238172 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.999229229 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180714579 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552867084 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900261903 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.967508391 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.017170349 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.959917407 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.089662098 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970141712 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.93921301 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.72295833 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.830789344 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4503862 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.963270725 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.952639202 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.788108008 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407024564 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049079467 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101083575 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966266284 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.668765831 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.253623725 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212450057 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.359501223 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.015015746 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.962807138 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959257509 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88730522 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.155355916 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.338852908 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257412665 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.196667178 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.053597063 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962891277 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.17535622 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171505673 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.974234248 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119189713 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2344268 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055046614 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.71069508 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.639392891 seconds)
  done (took 1721.25881357 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961553345 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.007134626 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.979757167 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.997475502 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.985106392 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.051688451 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.006509753 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.021095619 seconds)
  done (took 57.903363817 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.967283964 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.195988795 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.977997465 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.969339996 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.007678328 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.969107651 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.153784614 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.977450027 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.997742308 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.979861574 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.971235468 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.983361917 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.685761329 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.005141374 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.980233693 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.968617855 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.998938868 seconds)
  done (took 76.699377454 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.980505301 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.308191385 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.012461998 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.999892201 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.000976006 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.994027054 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.957347773 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.008517938 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.985662865 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.219417566 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.31997866 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.990787366 seconds)
  done (took 91.689651779 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.996016858 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.985960607 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.986485122 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.987707768 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.986579592 seconds)
  done (took 11.86197354 seconds)
done (took 2243.321748228 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.230074044 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.203536937 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.218966581 seconds)
  done (took 6.333527846 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.127608857 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.179512359 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.294284665 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.300491704 seconds)
  done (took 10.814397022 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.270065572 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.368855164 seconds)
  done (took 6.548063169 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.352179967 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.000884957 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.379039525 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.978005558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.979508672 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.983867558 seconds)
  done (took 22.855087197 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.982664242 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.985723268 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.982817972 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.985131981 seconds)
  done (took 9.84662466 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.962492584 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.719466313 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.966074677 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.980507635 seconds)
  done (took 21.538489957 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.731729328 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.381644331 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.726451995 seconds)
  done (took 9.74967376 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.465447828 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.826588119 seconds)
  done (took 9.201501978 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.236978181 seconds)
  done (took 4.146971414 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.010544393 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.253673363 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.508136257 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.497766807 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.579291467 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.825842138 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.301631366 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.220534501 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.421531318 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.439229253 seconds)
  done (took 25.969758888 seconds)
done (took 142.876457761 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.357019826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.36079368 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.183239387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.322808672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.220108171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.183775869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.194218672 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.307177846 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.827904157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.821932379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.368476577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.215162293 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.142251103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.350013714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.145747234 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.225586905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.208144962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.377198721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.018422023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.219212831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.202246979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.947102108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.203253975 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.96219017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.214422189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.136191959 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.523272441 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.230115057 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.165108659 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.535359109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.137317099 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.364038679 seconds)
  done (took 174.582405296 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.970484738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.983756219 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.983497077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.98201557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.341924088 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.98149399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.982159976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.983013399 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.259039563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.238795069 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.983454829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.332296106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.984495076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.983900071 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.983158698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.98270899 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.447651251 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.983954742 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.983720784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.98353975 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.983367874 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.169885596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.984383805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.18520906 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.410088513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.984709966 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.9842101 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.989673877 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.991152118 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.990891735 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.993565207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.984026227 seconds)
  done (took 211.920997287 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.983283131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.985093526 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.984702483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.984260171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.984945141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.983147134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.987205659 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.98459751 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.575477507 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.585630176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.992485687 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.00299603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.998159391 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.983710545 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.999537942 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.984127742 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.003274625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.003978235 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.005554944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.003559433 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.005999153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.68692195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.003653067 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.64421878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.988617756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.990347634 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.985090013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.993885634 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.996048799 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.998800892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.001732895 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.985594162 seconds)
  done (took 224.223144688 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.189028565 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.992403766 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.992462441 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.922099344 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.993025203 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.991992324 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.941962859 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.181965681 seconds)
  done (took 20.143021634 seconds)
done (took 632.788947397 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.466675176 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.315740109 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.168865595 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.01718958 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.232258512 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.050534802 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.012857411 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.080864331 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.740502673 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.085192521 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.69641535 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.033853137 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.790173025 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.042338929 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.134606479 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.074391802 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.558571888 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.650730102 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.195594429 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.054213429 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.187120497 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.987260803 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.096438578 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.762134724 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.811374147 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.034621497 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.186774789 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.565980631 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.02453291 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.179425868 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.761835767 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.400834826 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.029299862 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.011925086 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.07024041 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.048174924 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.353009197 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.025894701 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.135680861 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.788505071 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.05972493 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.616230773 seconds)
  done (took 108.456098017 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.983826777 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.981997796 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.980454451 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.981967595 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.982903142 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.982248634 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.980814832 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.981022025 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.981744916 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.980913324 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.980531126 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.982364179 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.980546141 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.982155014 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.981250853 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.981009273 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.982764897 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.984807096 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.981270977 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.982202896 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.98186554 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.982060017 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.996638184 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.981113175 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.98286769 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.983142942 seconds)
  done (took 53.472836697 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.995857497 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.147386857 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.25948926 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.01756131 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.99583199 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.999641743 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.013991592 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.001978958 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.998617434 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.998336539 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.091192414 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.002694409 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.015126298 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.259784292 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.015742425 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.997525961 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.996583914 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.997326519 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.153573597 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.01413802 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.017002216 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.00274991 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.016039181 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.011094632 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.998442308 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.997658029 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.001927221 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.469812644 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.007809459 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.090886773 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.042790549 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.021610739 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.415542823 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.280547355 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.056569072 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.008865098 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.998868639 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.093954091 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.00397104 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.998556602 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.015556509 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.003093204 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.257593521 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.49918861 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.014527823 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.998336783 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.479278156 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.103938914 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.039915637 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.009732314 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.261007299 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.017647438 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.999466478 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.998842895 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.035745346 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.00828279 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.998047314 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.32248308 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.01147697 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.016118483 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.005032989 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.999114072 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.162659431 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.009105714 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.150132794 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.009208492 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.006253375 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.999496149 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.261407518 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.01830427 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.502988143 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.015273518 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.999254097 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.092873824 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.154974372 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.505995068 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.013376284 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.164970888 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.434601612 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.024788138 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.007636676 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.459134553 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.028061637 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.008282999 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.001937756 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.00234403 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.000536908 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.045140892 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.015959284 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.426535163 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.510931753 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.344105271 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.028273482 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.016220253 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.001904046 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.326211877 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.009915038 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.001106547 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.25465194 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.517145922 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.015865755 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.009083043 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.49240689 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.019481602 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.020423881 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.010881648 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.267988672 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.020212188 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.046351283 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.001913928 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.008096025 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.004460863 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.020816207 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.010055279 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.00196835 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.479493921 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.116647509 seconds)
  done (took 247.603980711 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.998037176 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.001420457 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.996647059 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.999548751 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.995996634 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.001893899 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.995890132 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.996313734 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.002058283 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.996522654 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.996936234 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.996237743 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.998133495 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.995710414 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.11277403 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.005255809 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.653947287 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.998919174 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.997029486 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.997074506 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.646108295 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.006209717 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.997561641 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.997025602 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.998551724 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.997833892 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.006992613 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.102734939 seconds)
  done (took 171.419626026 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.005302649 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.120895416 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.025822353 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.033514573 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.013953265 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.002511456 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.028357071 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.022009588 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.009919904 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.00271389 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.003078051 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.066973124 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.016130376 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.104079669 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.037220138 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.036484493 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.109825257 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.012565156 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.003472966 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.004054077 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.034776314 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.000890721 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.067406661 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.13208948 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.025325697 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.123250141 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.012576844 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.006601821 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.005462855 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.123641414 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.023433393 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.066851856 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.035408358 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.024540945 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.130710057 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.125439656 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.116262696 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.036614493 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.010804889 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.005363086 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.004403449 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.993927199 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.123016135 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.026408945 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.007635014 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.114898435 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.026730141 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.008401331 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.015347575 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.00573245 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.020417388 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.025451396 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.074343462 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.138804236 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.043198095 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.03297308 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.031612982 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.285272194 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.015890725 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.107314209 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.001070132 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.125076267 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.03007579 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.995184167 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.007513606 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.013861205 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.037130144 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.039555542 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.113775459 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.015251149 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.107969316 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.042797481 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.0138725 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.006236798 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.009801158 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.125601912 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.127707337 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.042964043 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.045410168 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.039494918 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.003600552 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.007452647 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.996276823 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.025031448 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.011427663 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.126603049 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.128294215 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.01624388 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.009615365 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.009802326 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.009403211 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.034125754 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.133204427 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.046739494 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.105094843 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.077098292 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.086771584 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.024706456 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.022239553 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.012538504 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.073264115 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.026103636 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.020227497 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.332627894 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.078777226 seconds)
  done (took 217.158931383 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.474514922 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.060164054 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.067096887 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.333415784 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.443202062 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.895023635 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.058101818 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.058751212 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.082512323 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.251718071 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.132018368 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.077401057 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.046581244 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.03268379 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.060927122 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.079062268 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.067437061 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.387914457 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.194265435 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.143621521 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.041676964 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.352111611 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.37517073 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.484740427 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.094119203 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.387421609 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.742941011 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.199464754 seconds)
  done (took 65.566617348 seconds)
done (took 865.593320179 seconds)
SAVING RESULT...
DONE!
