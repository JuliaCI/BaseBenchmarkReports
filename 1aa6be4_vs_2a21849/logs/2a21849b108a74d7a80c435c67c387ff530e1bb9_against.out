cset: moving following pidspec: 9497
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.507776869 seconds)
loading group "string"... done (took 0.529698027 seconds)
loading group "linalg"... done (took 9.096918739 seconds)
loading group "parallel"... done (took 0.179518707 seconds)
loading group "find"... done (took 1.318579887 seconds)
loading group "tuple"... done (took 1.98083665 seconds)
loading group "dates"... done (took 1.393857114 seconds)
loading group "micro"... done (took 0.200321506 seconds)
loading group "io"... done (took 0.521789394 seconds)
loading group "scalar"... done (took 51.592278863 seconds)
loading group "sparse"... done (took 14.180813448 seconds)
loading group "broadcast"... done (took 1.336883706 seconds)
loading group "union"... done (took 10.365911603 seconds)
loading group "simd"... done (took 3.09439029 seconds)
loading group "random"... done (took 11.712445016 seconds)
loading group "problem"... done (took 2.257640533 seconds)
loading group "array"... done (took 24.680340448 seconds)
loading group "misc"... done (took 1.165724206 seconds)
loading group "sort"... done (took 3.840029636 seconds)
loading group "collection"... done (took 19.614029082 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.620955856 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.181731203 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.20514851 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.287408564 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.240092093 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.153598199 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136920039 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.257821663 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.787220698 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210628035 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.130835363 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513562965 seconds)
done (took 6.553114617 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25555951 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179671513 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167566848 seconds)
  done (took 1.121621276 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07324532 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152787852 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08827266 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107569649 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090500099 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106392102 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090684698 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105256081 seconds)
  done (took 1.517290331 seconds)
done (took 3.741943703 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.503303377 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.864612625 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.528053185 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162046347 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.301077583 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.297195677 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.333284943 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201061681 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088090955 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088227408 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175060115 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.403771848 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.43797367 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.974149442 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088803442 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111511171 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.117419022 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.772014071 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07720199 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112698161 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.517346836 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.193663363 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.09594923 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124409759 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.182164615 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131387099 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161316475 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101338492 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662803553 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131312297 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187546142 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095712828 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157965822 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.195991173 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.205495374 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.091086478 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685587651 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200504081 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090449247 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096427138 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.663091827 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118774964 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185219625 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100275071 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088608026 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180222144 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.09382369 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.0757229 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.113403842 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082676332 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16220586 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.438913376 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104817081 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169978662 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.089967069 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700007517 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09744895 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274626106 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123751439 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.090799211 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089068 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086667943 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156025258 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092846262 seconds)
  done (took 20.137928398 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148673936 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166313643 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075545876 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154454454 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121182416 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07810572 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099225734 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076452703 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106193015 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240636678 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13577433 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153320563 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07085149 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.102762169 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127375321 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245761111 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104283603 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118343122 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084830627 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087798183 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138370156 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094363284 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089567049 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108137297 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166955742 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202366604 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105900733 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120050863 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.083419252 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0938416 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139442357 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143606355 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.089656617 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083167372 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169962316 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120498031 seconds)
  done (took 5.244592219 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.164396834 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.213477479 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121434371 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.21307618 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163151402 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144286327 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167200483 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128723898 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.278417102 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.181628083 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175731167 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110573241 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109038199 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077305214 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077353424 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074772013 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.415456355 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.13611568 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.171736578 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.131830159 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106502826 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.078465078 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.383935777 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081735852 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095347533 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084667332 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066744965 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.198816227 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100669889 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.073316972 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103564503 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086234918 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130151403 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191973151 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114873164 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135592754 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084109922 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07767352 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216366115 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096677585 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090979187 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075073806 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123864964 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113584359 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138372605 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081207037 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108572414 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218372999 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07991904 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121887527 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079478551 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.058396478 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194920684 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.143813169 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077986325 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285118048 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095316393 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104037516 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079382481 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248890706 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11386064 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077645534 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094264427 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084624958 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074852546 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.442942873 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110164704 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.949409034 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08265793 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158893684 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08397996 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102331998 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083867367 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082908908 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116638663 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077502608 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074710011 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075568752 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095453623 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081763451 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108454543 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080262658 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081169069 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094692117 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144922037 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099431167 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115249624 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107480847 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099659975 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077855248 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124260803 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080210009 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080676881 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.174502993 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084031662 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109687086 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083772538 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142243388 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079271418 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.20510962 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081832608 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104193202 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099123713 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125036457 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099366312 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077791752 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098452432 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077189942 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077305267 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157381926 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081106279 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079521715 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080141736 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109025604 seconds)
  done (took 22.801350769 seconds)
done (took 48.95590726 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.449185101 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087593027 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086868603 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108116462 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088047819 seconds)
  done (took 1.675015071 seconds)
done (took 2.502436834 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32789574 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.20008436 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098523172 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195163584 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08426965 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202547049 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188406504 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093070229 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213859527 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083267389 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194692549 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083500171 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102893684 seconds)
  done (took 2.922183025 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097583076 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104721721 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096705352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114065303 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077833381 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095375503 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113554849 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107668831 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093885632 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106744542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079514885 seconds)
  done (took 1.918744549 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095138841 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100547973 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085056459 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111883341 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078610922 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092303952 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11038234 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103423543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092532992 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108176906 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079936636 seconds)
  done (took 1.888878057 seconds)
done (took 7.555895671 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.081418677 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.3538745 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.169665131 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.290446037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347565278 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.253725888 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.681934807 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154493015 seconds)
  done (took 32.317798557 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.16422688 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.104670098 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086495663 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087826113 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085736058 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.107959396 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091491715 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090568862 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111993454 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08632383 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088342376 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089570262 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.108766272 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087193926 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089499134 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103708147 seconds)
  done (took 2.470600878 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139380517 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113284438 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111399568 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093661391 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088927944 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.113308376 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095238935 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090755694 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.108217494 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089806624 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095383014 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110707824 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.092491858 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087164352 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110184825 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119362376 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086846787 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108665109 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116952381 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091755353 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111586226 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.089753025 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090650916 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110992696 seconds)
  done (took 3.381602774 seconds)
done (took 38.999056602 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15227302 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099511974 seconds)
  done (took 1.085801811 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.140600531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157441911 seconds)
  done (took 1.135324529 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108025803 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084557687 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.1335376 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098601994 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084670202 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102862395 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112533649 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084731317 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.10292994 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085012986 seconds)
  done (took 1.839065533 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089722249 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.089235232 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.117870355 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138418857 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.092559171 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.10739825 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090274667 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087931411 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10927951 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085143521 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093193851 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122919312 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090643189 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122839324 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090702149 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091948601 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111646151 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08984162 seconds)
  done (took 2.665770216 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084445783 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085489646 seconds)
  done (took 1.014368175 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089756987 seconds)
    (2/7) benchmarking "second"...
    done (took 0.084876434 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08691344 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105071682 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084591594 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084953852 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102204697 seconds)
  done (took 1.48259777 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.497353748 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265237602 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.37017803 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102905675 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143210725 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.340122578 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142711489 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098720392 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.0972713 seconds)
  done (took 2.936588579 seconds)
done (took 12.996657346 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091396642 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220788376 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.637107977 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.107468673 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.20370873 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162391388 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.299611212 seconds)
done (took 2.571020743 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350777327 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.149203146 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086156146 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083856675 seconds)
  done (took 1.516783894 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079630943 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09240021 seconds)
  done (took 1.02395972 seconds)
done (took 3.392889885 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084201101 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083450739 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.126443754 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.082991829 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082995548 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.080582186 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.102537393 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084153491 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082604146 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.082072647 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.103958927 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08385403 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081726923 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100015891 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083143234 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084198375 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08151708 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100242484 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083723913 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082195719 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082043138 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101082806 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082738077 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081191884 seconds)
  done (took 3.008634529 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108262541 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084831463 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105052516 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088649705 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087350257 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087300481 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107168673 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084813183 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087940776 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104740993 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086978699 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086823021 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.103318142 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088173267 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086496843 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105280234 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088822812 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084961239 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102518651 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088589963 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08809873 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102175691 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089068041 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087605608 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086765098 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106694384 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085676301 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083768379 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107455447 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088292676 seconds)
  done (took 3.647317226 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096118998 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083104332 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085981495 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114383931 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084288091 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086576847 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10119452 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084870087 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088352012 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085423146 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107429271 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087435722 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083067103 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.087050384 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.107019566 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089858393 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095443573 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.102938899 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084165569 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088369217 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.089282987 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.103397127 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087163471 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0864024 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103566465 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085055323 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08739525 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.086717429 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.106577162 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08838617 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08938699 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107763578 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088031932 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096398695 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.089170285 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.105768584 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092165898 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083636138 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.106015072 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08593619 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083133639 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.086506324 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.102706448 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094853861 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08674116 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088330505 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.104383405 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089415395 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08787729 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.108566293 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084966424 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.084226654 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.088723626 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.10723436 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090347623 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082326 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.106171719 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084402914 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087735904 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0861477 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.10312615 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084586958 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.090907996 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.104761524 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105001899 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.093732551 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.101414087 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092733805 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.089416285 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.092318898 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108162854 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097981327 seconds)
  done (took 7.569374957 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099912115 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09330415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083766497 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103195906 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084355931 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.084120673 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10739557 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08548984 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084784563 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108789036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086235806 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085434487 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084150696 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105182686 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086040152 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085730376 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108426667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084816033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085728107 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085122714 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104198929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089177874 seconds)
  done (took 2.891517495 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209603728 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109338383 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.133457959 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11755217 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102252376 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116292153 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090789359 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090063549 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106512276 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095177943 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093323979 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106052347 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103582725 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093338482 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112039371 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095402287 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088811751 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113596008 seconds)
  done (took 2.843791967 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098879091 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089575386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127110576 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087345757 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08656013 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087208246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112024972 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109146721 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087451917 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.105977674 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095121419 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087279613 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.107158243 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087771075 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087277661 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107678404 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09023091 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087162194 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111030386 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093747371 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091757638 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111439008 seconds)
  done (took 3.014349497 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102303492 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.086679739 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124262417 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090470615 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084530784 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085117186 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110352003 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086381491 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092044774 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106086813 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087241154 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085512932 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.119738119 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086572978 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091101742 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104586676 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088138035 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085954023 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085687573 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103740231 seconds)
  done (took 2.772392859 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172794366 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123170067 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106777451 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112136789 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124393614 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104971894 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113455584 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123126212 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106045818 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135071982 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10715299 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104980725 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132557801 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111319114 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104277788 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133351581 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1131186 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130982088 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105280331 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104865627 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136209587 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104218477 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130744764 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106071396 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104231743 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123047604 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107267069 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11108811 seconds)
  done (took 4.161867008 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086947723 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085695369 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08388794 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.102783906 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.086166485 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084279941 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083597115 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.104367204 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08616252 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084316199 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084619381 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.106509807 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086265686 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085610972 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103784407 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086762581 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086799983 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083986061 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104140896 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085387841 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086127888 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084830062 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.105592629 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08523595 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083422676 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.104221892 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086902226 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084034628 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085492103 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103628849 seconds)
  done (took 3.585425095 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095259856 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091968586 seconds)
  done (took 1.060345832 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093979458 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10131307 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085619911 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104919881 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092125131 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085748308 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113403508 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093102293 seconds)
  done (took 1.646133091 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143371948 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162392956 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092427419 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098112142 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161509169 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.155088686 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13349836 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091050138 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106928494 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082910312 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157366681 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08216922 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090827852 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084860471 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109447741 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096658855 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.087057801 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.116124281 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093823184 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088546871 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110507007 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095744288 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091127951 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.116110384 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083910285 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091189092 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112429309 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102902608 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086494957 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111730767 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089738284 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086325093 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.090228154 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.111239633 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.088123586 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162981448 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098210247 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086463052 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109646812 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092904731 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120190841 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.106408777 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093063161 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087357466 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112573167 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093315877 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092978558 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085788259 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102381356 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085873117 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.086260484 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104915307 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.086565622 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091037391 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108368994 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097612168 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.089347658 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103996341 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086963379 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085062257 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088265531 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105492419 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0931775 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.090510385 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110951907 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092079936 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089537943 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.10595853 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089219651 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087212474 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107715146 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106088092 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091216954 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.109673592 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093564498 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086958576 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086201254 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112381277 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089158997 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089876425 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.111393382 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117093217 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091113136 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104810539 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087009059 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094231293 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.109041405 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091110133 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081946673 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117926876 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09134538 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.087189689 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081899111 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107920819 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0868264 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.090643604 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101981905 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092928005 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.085307759 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.110983213 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093393529 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089749202 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110822543 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094690662 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09305053 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.088244189 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15611534 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086742742 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105442659 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.090603723 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091922495 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08359576 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11107966 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.085322458 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08729532 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105671231 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.094018506 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090245358 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.108602639 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.093056852 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092139746 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110909749 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.091371788 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086348216 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08511767 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.111021366 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096369164 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091543559 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.108929552 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.08770403 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.086789096 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108224899 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.092352632 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088051527 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092268874 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107801371 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.086804225 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.088533075 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11221691 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09137964 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08558984 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.108543567 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092351559 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089489053 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.109290677 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092664743 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084634289 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101236168 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092465822 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085310105 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.086031531 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116548104 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086088416 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089336883 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106092738 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095875351 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085909239 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.1123875 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091402947 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09318468 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111081844 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084238891 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087697498 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.089924428 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112599632 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086779379 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086520098 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.105950197 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097769652 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083654056 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090272247 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102349568 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087329835 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.093293711 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.108539826 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.091713022 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08607299 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.147548459 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10167383 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092725669 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109300079 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091307716 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09279389 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.108705532 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.092681253 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093633909 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092672142 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111082125 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090504457 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093873535 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106899751 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091120994 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088621725 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111819974 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084579318 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.088600293 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082957343 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.113336368 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09381288 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092161458 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.112787917 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091372891 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089747374 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115619118 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087633668 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.092154602 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08316162 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.114116827 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.097608805 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093760705 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115184017 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093276226 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088225608 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.108293643 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098356682 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089829214 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110185802 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.089310189 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08427519 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083427496 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113111931 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091821237 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085924659 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.106589853 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095149212 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09303361 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107840739 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085007662 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.093266036 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113992417 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087961218 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091542931 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086790639 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109536236 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100504501 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08356405 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107817726 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094080451 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.092697205 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.106715485 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092458717 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.091081063 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.116028724 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.093347586 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.091076986 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088827381 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11711309 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090692259 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0863533 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107101683 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.093163801 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085293587 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08902323 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112201761 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089575988 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087201361 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116099275 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095863326 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.093438926 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110635975 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09459591 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.094568902 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.113350201 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090215374 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.094095073 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085590708 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104517958 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087898596 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08329738 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.110279876 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088131308 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09294554 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108075014 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091269534 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.092448091 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111848112 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091143618 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093408877 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120815697 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087202543 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.093870571 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089629562 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111505849 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088336188 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086867601 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.108840318 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094736441 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.093759194 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114518489 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08924178 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.087359672 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.113673502 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.098071924 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.096717313 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.094704975 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.115379466 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088087733 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.092552368 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108310624 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097081741 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084882427 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110830169 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091616087 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090365829 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.1074682 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091734586 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087266165 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083507294 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108196085 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.095573212 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089257947 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.113796378 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091876779 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089240449 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.107580791 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088402302 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.095159369 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.108651873 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.096976334 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.08886451 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084329769 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105178759 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095528883 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091295256 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.113504093 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089280162 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.092607149 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094325347 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.113134017 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.090339502 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097960337 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117305801 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0963616 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097284427 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105443575 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090451808 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096690564 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.107985462 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.093383836 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.091678093 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085427281 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115449279 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096034885 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092903558 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111114841 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08667244 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.088371848 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.11477926 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.094476377 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091827524 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.089893692 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11297124 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087491666 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093028178 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.115037882 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09318567 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095291239 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111593623 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.094434842 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088760367 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.093819578 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.110681793 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08648148 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0849616 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10918922 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.096721654 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086043913 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095714101 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.115927415 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089171738 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089733563 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.114878609 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089536571 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094663582 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115247459 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090810237 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098913224 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.109095295 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091602418 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093632474 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.094332916 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106241854 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092096937 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090301018 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117415435 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091513106 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093698075 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111897392 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096779954 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.091573512 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.093933867 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.115911474 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.095576693 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085487117 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.117716676 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096564826 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.092349409 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107468888 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092257947 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087613604 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090394972 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.116967576 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08953081 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096986824 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.115737445 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091323859 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089150969 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.114891637 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092817894 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096153613 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107680616 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09601801 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085481474 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094448596 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.112151402 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09598816 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087837745 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.107775323 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095438714 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.094117809 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113138688 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097090542 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.095918748 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0853178 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107226643 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.092476511 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088555562 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119480345 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097071363 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089944968 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110918763 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.092510018 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.090449117 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116160206 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088633311 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088817761 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092332315 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115710428 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091745166 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086996301 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.114565581 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091722545 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09398032 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112695453 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088929748 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090655477 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.115820049 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092146128 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088268922 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088631324 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118019867 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092891038 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08908684 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106831059 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100174594 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094094187 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118162498 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090494842 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092774356 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109715605 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.092716586 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.096930193 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089756949 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113660894 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091327267 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095518033 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119736777 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086122472 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089344567 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119939878 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096097514 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097378836 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111390327 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092882875 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096141769 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096072342 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.112535503 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087728407 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086402128 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111719771 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08818016 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.091348794 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118646916 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092779832 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089507207 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093286166 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115532059 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.092689714 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.090561932 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10734014 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098475976 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089285086 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116486334 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088190204 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086905512 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.090666202 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116946737 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092664394 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09178767 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.111933592 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.093430594 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087360109 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088985144 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11883373 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09476578 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.095196046 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113106873 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092656864 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.092596212 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12149965 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092745724 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092424938 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121364923 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.097991916 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092942551 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111912186 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09872818 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.096827299 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090808262 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118802836 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091036039 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092456509 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.119278331 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098573432 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102416877 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114049408 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088273971 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.095049687 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110592933 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089283768 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096997151 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096410789 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120069652 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093803823 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089001049 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121146428 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099222448 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092763696 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111563822 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091403423 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.094263341 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111063884 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.095862912 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090391817 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.09722092 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.119193159 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097789895 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.097931757 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108214988 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100694123 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095822098 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.121920723 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09173882 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087001682 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107125658 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093613269 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.09800016 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.098748721 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.116291837 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.095545237 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09531237 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114169181 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095200083 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090574178 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.097215201 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.117713217 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091157917 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.094841461 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.112107819 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095340558 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.092164643 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.11656319 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099412202 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095083874 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121077898 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098251539 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091858645 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089494653 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115472342 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.093409397 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094750134 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117509756 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091926342 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087377353 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096676196 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.121081094 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093651138 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098337706 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121000264 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092922955 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095472951 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120511123 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.096133172 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.091770078 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114522326 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.09615318 seconds)
  done (took 59.661110113 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144458648 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098960779 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113354053 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093985604 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111144025 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11418631 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092922443 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093172312 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.114039996 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105401 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092186503 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092013997 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1301267 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114982215 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133574027 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103485366 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091785418 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114800598 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093760336 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092356974 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129579744 seconds)
  done (took 3.198571992 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112401926 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.106979715 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123313072 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108115217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098434609 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127333348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103967515 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124731313 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109252773 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100946727 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129161416 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105421127 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.100434778 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.122841549 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101702454 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121685972 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10972154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099014052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127165909 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105585758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101289236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125121702 seconds)
  done (took 3.388622362 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.104113051 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.096563408 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09839631 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.113581744 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09835297 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092355433 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120255032 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09462415 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10180706 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093702727 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109898365 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096536394 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098837505 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.113028023 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091643229 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093782313 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122541189 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098245317 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.09904914 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091648492 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128946516 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09313363 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.092531579 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110622305 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106257151 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.098152111 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.114052063 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.099085605 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089251691 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.096096499 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11549269 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095238712 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09473051 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110895109 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090755069 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096970652 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.096564052 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.115172543 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.094312556 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.095352401 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.116445122 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.098486829 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097866025 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.113993443 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095376446 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095207753 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.0973931 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.114819927 seconds)
  done (took 5.819688779 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125827667 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15420141 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097448862 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125397244 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130929577 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10490162 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.095921953 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127037179 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094149708 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118402159 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111666592 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107815128 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12127119 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.101221469 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099008606 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11998988 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100188775 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095249818 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.123077272 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098907831 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.101654866 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.121604001 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107893675 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.106510928 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121272826 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09688759 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09670299 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.122946808 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107717786 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12281422 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10332571 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10186251 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130000683 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10094701 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.339055972 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119453312 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112161848 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097462714 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120160279 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097838085 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.099331878 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120569658 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101255685 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.109648585 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119581598 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.099465191 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.097565884 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115412904 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108663804 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.099363139 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124570901 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.109451294 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100004755 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.121678237 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102382845 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.107328252 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.119536462 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.097055703 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.09957248 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.128886607 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095302671 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.099680487 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.128425031 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.098534171 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10224022 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129444338 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.099378613 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120086882 seconds)
  done (took 8.800183432 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135156511 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101433331 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13192136 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112017426 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10123407 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124516135 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102071554 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.100631285 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123358661 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107696736 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102703288 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223295433 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119472912 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107464477 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102541193 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122997893 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102096733 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101706153 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12532527 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102497651 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101425462 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131883897 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102500124 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109441226 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135327307 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099445025 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122075817 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104225213 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110487537 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123487732 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114569132 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.101099095 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123654663 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111456619 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135537143 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103156202 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096283236 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122305502 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103252588 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102955205 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.118901185 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112104796 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101964348 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.118588384 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104277431 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101845593 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132778104 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11432051 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127576607 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109383893 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.102473129 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13210625 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103960668 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101801498 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133072176 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.11826737 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131855786 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112113491 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102238342 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13247118 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111371097 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139310522 seconds)
  done (took 8.104417817 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096706423 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094863267 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094041801 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.114544444 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096097836 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09366473 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094339156 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.117090887 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097061502 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094661146 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094375153 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116343631 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095006572 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094785591 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115807042 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095675731 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094093146 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093386457 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11660267 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095827447 seconds)
  done (took 2.944815653 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106059272 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11374459 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.095714127 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.125133059 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09866987 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101212688 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.120560448 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098731719 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096841488 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120177658 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106290286 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104928098 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119001231 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103744944 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105404382 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.124212914 seconds)
  done (took 2.685575727 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118850481 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115067684 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190997786 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101045173 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.119828036 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105773613 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.097172066 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097786962 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.119444301 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104271827 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101809009 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123778599 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.098700028 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098795249 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.117668645 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101560039 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095049207 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.101010042 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.119258461 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.169875702 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.126597052 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.09988281 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.097957282 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.12374451 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101009726 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.100407462 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.125582879 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.098733233 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098338226 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.118954569 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.100780133 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.104418974 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096259186 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.124405027 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100073196 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.097892647 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.118951496 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099607662 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.100524089 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.118825319 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102214238 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.099114253 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.097293439 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.122848359 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096710349 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.098068803 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.118174608 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104907637 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.098161427 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.120430339 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099747285 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.103168152 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.124621346 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108703867 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.105345582 seconds)
  done (took 6.994885971 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11085946 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099218205 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.108479997 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118839402 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10033861 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097281826 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121634093 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100155012 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097765035 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.117313986 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101773199 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09913706 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09751304 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12262421 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.099270795 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098581397 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117127416 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100156217 seconds)
  done (took 2.859775152 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103387105 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097958362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.102654878 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119951442 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098530583 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097837541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117565863 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098766956 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097486503 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096158284 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120003038 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0998062 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09691577 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.119546405 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099051102 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098453115 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.096949215 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121011849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097606633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09600102 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119320875 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098297157 seconds)
  done (took 3.246570712 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112066455 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185965083 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107779665 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193610876 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098251326 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096578137 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127862122 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098785676 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.1141551 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117759102 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097692216 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096190115 seconds)
  done (took 2.399355957 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128944697 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137480579 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120077414 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100106614 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106960163 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124054761 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103062614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102484044 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13338979 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114865722 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102236719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133166421 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110632377 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132402858 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108102183 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106428314 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125514935 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103495577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097300006 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140763253 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103501968 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13226348 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103358568 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102114913 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123078896 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112333334 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109854653 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138430446 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102459955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131669469 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109031974 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102888809 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133210699 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114594296 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099224411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134000881 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102332916 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140842767 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109291856 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110106372 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123383851 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108777956 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110072445 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131652438 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111911083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123787467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109728303 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102117303 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124559418 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125793321 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129622497 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1131615 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107075123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13339841 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112124671 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14726344 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115757673 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111481965 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130923825 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114113809 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133255103 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110096995 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111230556 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137046462 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108012042 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133594599 seconds)
  done (took 8.722945896 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14166535 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098679695 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124471208 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115615456 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110577189 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125029818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102804121 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102301051 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127021942 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100519906 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171089963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103517085 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114770014 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13476752 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103588289 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102195602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128074146 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11093542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119800182 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126924059 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101959035 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133940566 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11263135 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134166715 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116742559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107087539 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126672345 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103174456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102811423 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127014515 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109651126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102330624 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136630923 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099050163 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133337902 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104164894 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10268527 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130964392 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104369304 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107835908 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135099655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120751143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125725593 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105534793 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115401627 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125419309 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104082555 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09956696 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125178728 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100796609 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11526082 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139064837 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11574224 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13575105 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104102137 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103213274 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126586251 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104950815 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103299889 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130905754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112522698 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102892978 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15103192 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103252962 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125971799 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113000282 seconds)
  done (took 8.665799411 seconds)
done (took 164.544097656 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.15012991 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.190834424 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146317527 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178829796 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094592272 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126987958 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148291499 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148978791 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091615351 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115868215 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094636818 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094887435 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180149839 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09375837 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092671049 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095243197 seconds)
  done (took 2.999144964 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191443153 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311217838 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109019807 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119563841 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102469468 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.1000016 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118527575 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100115826 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096925949 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126870107 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101444281 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095284132 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127477045 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098018582 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097737665 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099176486 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.128897048 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100758132 seconds)
  done (took 3.194748561 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119650557 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143974626 seconds)
  done (took 1.232652727 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13108615 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199057145 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275752403 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171899706 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122099036 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140235519 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153406088 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133130712 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18138609 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133717177 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11363449 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097536781 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146546827 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104929276 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.110170459 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121088752 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126303583 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110190202 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.131957331 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101356911 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1197974 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125475337 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104357705 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.108369889 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.19208552 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.111263918 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.126366852 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104043818 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.100049647 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.133893333 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106562947 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136664115 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113096805 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174932272 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104696079 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171810585 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108949251 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097520729 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.131825796 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098729176 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100962705 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125638996 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115686425 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119860174 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104566268 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108573097 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.124554887 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104502623 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107157767 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.131810589 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108933162 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105363207 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.171231325 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130767035 seconds)
  done (took 7.901910945 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.855819637 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141601122 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098940672 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.019723361 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149516086 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114097897 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.852750987 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14475658 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233044463 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.904500613 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116518418 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111479 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.245060333 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.275231039 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.182250655 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.373823827 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.689761313 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135508034 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128881158 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163829126 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108981123 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146101338 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12156481 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43884339 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10138475 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098977423 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128017794 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113239651 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179092459 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100542897 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102337062 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200829764 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287439246 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208634375 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099543449 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11986197 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099377997 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184529365 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270733125 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219356858 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162475754 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116459299 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099553662 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106674316 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141020694 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095945097 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181952201 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189348208 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169065533 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125140795 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113174691 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129842107 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108768205 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178741444 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097564972 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356878803 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.353245023 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120522898 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108096672 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112773518 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.292178856 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101166679 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236537125 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124107523 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214087018 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121340311 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81614358 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161954216 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121730838 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106667553 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127501479 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106226233 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105795934 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182960725 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381528616 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134092861 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102675083 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120193867 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210315074 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122803314 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09839646 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185820244 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098852511 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106359924 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137344801 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109616805 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.192517293 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.273015959 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11040881 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131208682 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104665563 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111529151 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123378993 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209736401 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.255611945 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.153741464 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233516881 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128586121 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.15996984 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187128526 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104978517 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191059872 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127302998 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116923166 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105293719 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.24941442 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135209561 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098825809 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127346853 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108252761 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1601171 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103251035 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10791792 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187797044 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.464248025 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184193049 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096609732 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102498621 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131159667 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157258227 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129705113 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266767269 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108181684 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186847687 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106237871 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.118035662 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109470852 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1821862 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109597356 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1060866 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133147368 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110292314 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.272352583 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223255069 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134772599 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241984666 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16873 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105855133 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194001993 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131516254 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165233723 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132124752 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10737686 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099867888 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80457431 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137189457 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107123696 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127869417 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18291815 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097720474 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124866173 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099209287 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095609252 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827594111 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124993878 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102465704 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100457724 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129981623 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108121263 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106481925 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128518276 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177255246 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245734298 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112049738 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127932262 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100647056 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178490979 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102291322 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098581657 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098464393 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123971826 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109078969 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10287081 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125120176 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190175084 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15541144 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234616797 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.533132583 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122801796 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100362639 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241013275 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121205673 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318203859 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10896033 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235117788 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187270593 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097260031 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349790934 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187756898 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206730806 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102787047 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191454459 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096393133 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107005502 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180507746 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121857669 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108495783 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176596333 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115293229 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112257972 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.213438075 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101227295 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251062425 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09727213 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189758663 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101989042 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106184068 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349394527 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100950901 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117367695 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181448574 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103336124 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123862355 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.693621357 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10147344 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110782217 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129512159 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237318452 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184773312 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108765064 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108475041 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137163015 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180413281 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211285715 seconds)
  done (took 46.069899126 seconds)
done (took 62.361021468 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291404178 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255894278 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.30836091 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.215614603 seconds)
  done (took 2.135676594 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.286752853 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165396146 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235336837 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097822725 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.247689685 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097589878 seconds)
  done (took 2.127866654 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.502360041 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.389988007 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346723007 seconds)
  done (took 2.241484953 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.246993541 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2612043 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.348120103 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415139275 seconds)
  done (took 2.356634069 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.300532852 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132344859 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125695272 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.216176839 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.283121473 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.258766434 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152778131 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206184654 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.151948634 seconds)
  done (took 2.870131199 seconds)
done (took 12.728756111 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.195538071 seconds)
    (2/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.335114877 seconds)
    (3/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.133715573 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.222257645 seconds)
    (5/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.354735952 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.276633186 seconds)
    (7/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.308472303 seconds)
    (8/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.242739783 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103218499 seconds)
    (10/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.24350502 seconds)
    (11/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.226259903 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.232678337 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.105635279 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.163318199 seconds)
    (15/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.195113208 seconds)
    (16/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.107588387 seconds)
    (17/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.14304675 seconds)
    (18/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.183793242 seconds)
    (19/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.247198497 seconds)
    (20/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.165423905 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130240575 seconds)
    (22/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.279467109 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.281443844 seconds)
    (24/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113702295 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129211622 seconds)
    (26/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.152370643 seconds)
    (27/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097647511 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.137627811 seconds)
    (29/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.106252947 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104081447 seconds)
    (31/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.320626937 seconds)
    (32/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.105887915 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.104001476 seconds)
    (34/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.175839891 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.144449853 seconds)
    (36/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.264595215 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.155581434 seconds)
    (38/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097843051 seconds)
    (39/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.183224968 seconds)
    (40/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.144162758 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.335615023 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10688801 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082198698 seconds)
    (44/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.20053211 seconds)
    (45/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.109554529 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130295325 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084197767 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.136666999 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097891653 seconds)
    (50/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.202480795 seconds)
    (51/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082395271 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.223163642 seconds)
    (53/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.08567352 seconds)
    (54/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.255616352 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.162338961 seconds)
    (56/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084651386 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.116877579 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.129197965 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106213898 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104981868 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131816553 seconds)
    (62/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.08351915 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138437343 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.130369961 seconds)
    (65/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.258106815 seconds)
    (66/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.180600318 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106238367 seconds)
    (68/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083280266 seconds)
    (69/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.093201273 seconds)
    (70/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.207393136 seconds)
    (71/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.301246898 seconds)
    (72/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084850602 seconds)
    (73/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118648094 seconds)
    (74/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.105138198 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.17124208 seconds)
    (76/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083573364 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.196878415 seconds)
    (78/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.245882021 seconds)
    (79/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082942213 seconds)
    (80/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127543147 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084930504 seconds)
    (82/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177890985 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.131793197 seconds)
    (84/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.085449979 seconds)
    (85/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.082814346 seconds)
    (86/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.213043382 seconds)
    (87/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.109215237 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124815835 seconds)
    (89/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.147595848 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129007774 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108528286 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12466521 seconds)
    (93/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.206135934 seconds)
    (94/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.195740512 seconds)
    (95/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.21105473 seconds)
    (96/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107204608 seconds)
    (97/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.175819447 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.132451626 seconds)
    (99/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156701553 seconds)
    (100/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098051108 seconds)
    (101/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.215695998 seconds)
    (102/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.147721363 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098260679 seconds)
    (104/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.108476766 seconds)
    (105/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10815217 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098700286 seconds)
    (107/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084231382 seconds)
    (108/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.221440874 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.113257881 seconds)
    (110/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082101487 seconds)
    (111/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.108408922 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109153838 seconds)
    (113/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089559607 seconds)
    (114/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.201247676 seconds)
    (115/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.185071083 seconds)
    (116/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093196794 seconds)
    (117/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083491237 seconds)
    (118/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.108823535 seconds)
    (119/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.084257838 seconds)
    (120/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.145886877 seconds)
    (121/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.105300147 seconds)
    (122/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.106784419 seconds)
    (123/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084823242 seconds)
    (124/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.0844555 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.105183873 seconds)
    (126/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082436034 seconds)
    (127/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.223660012 seconds)
    (128/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083245522 seconds)
    (129/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084986452 seconds)
    (130/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083003348 seconds)
    (131/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.176906901 seconds)
    (132/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.083674864 seconds)
    (133/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083278737 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.148384837 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127688731 seconds)
    (136/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176466212 seconds)
    (137/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083010451 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133661379 seconds)
    (139/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17468235 seconds)
    (140/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.083177532 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.13228445 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085081768 seconds)
    (143/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.088740761 seconds)
    (144/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.108554302 seconds)
    (145/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.205383589 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106836433 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.108189722 seconds)
    (148/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.110182532 seconds)
    (149/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.084260305 seconds)
    (150/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.085006452 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083614557 seconds)
    (152/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084191967 seconds)
    (153/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.116650632 seconds)
    (154/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.08403182 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085220065 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106113565 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.143184501 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108550456 seconds)
    (159/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084513792 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098309483 seconds)
    (161/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.109230119 seconds)
    (162/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.182912848 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.109019926 seconds)
    (164/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.091702291 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107218055 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106450719 seconds)
    (167/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133141395 seconds)
    (168/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113491993 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.107185895 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.135321432 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128999648 seconds)
    (172/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090864684 seconds)
    (173/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084240389 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.130291569 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108117779 seconds)
    (176/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083683682 seconds)
    (177/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083034201 seconds)
    (178/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.126275442 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085664725 seconds)
    (180/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.083570724 seconds)
    (181/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084073325 seconds)
    (182/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089529148 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.110217454 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125114305 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085643215 seconds)
    (186/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.089401212 seconds)
    (187/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.106713706 seconds)
    (188/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101249482 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.094421605 seconds)
    (190/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084952391 seconds)
    (191/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.105406877 seconds)
    (192/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.110344862 seconds)
  done (took 27.527315754 seconds)
done (took 28.535069294 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.217259842 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130410861 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109871938 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108433938 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.20588314 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117727314 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.118244999 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.139605316 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114067721 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.10551575 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.126244625 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118322555 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108469063 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203741903 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111901827 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127970708 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101967105 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115533859 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.143130336 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119670298 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.206332105 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104887188 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114217493 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.09966691 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.20667717 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102194174 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.133824892 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108308442 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.115403681 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.133333379 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109920771 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101600439 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.143974438 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119236549 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101314709 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132012299 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102640155 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090927014 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107885426 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.133729463 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117403334 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.105969573 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134599579 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104027195 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108600129 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.130563534 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103171606 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112417249 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09883011 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.134509508 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104079375 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118759049 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.131067361 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10084068 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.09902639 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.125286842 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116412484 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101272199 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.117605942 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127236826 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102136411 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100571582 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.135550249 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102832942 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.107503434 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.124305308 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110332298 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.108418694 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.104983293 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130379404 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101341168 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.106721783 seconds)
done (took 9.78220398 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109214529 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.156607619 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.205888177 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.213388345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131450648 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141947016 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123273775 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128938789 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144950113 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126092442 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.159167454 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132055763 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.213621092 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114592761 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115964815 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.135506683 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117488922 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113113808 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.215544198 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125125336 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161060328 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114041416 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.161943861 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.125879685 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107518643 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165272995 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.10912725 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.10980355 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.134510785 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116542836 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124966004 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.134499977 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108553726 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152647179 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123142867 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114730746 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.141221696 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113221813 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106531569 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131585739 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119544449 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124935966 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131928756 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120006647 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111297934 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.141216483 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.118140863 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114476343 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.136116349 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112170471 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10983809 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.163041412 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114687313 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.114366535 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.141882292 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116112385 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.11402432 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.141133492 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109035209 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.114157183 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.134087743 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109270054 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11025219 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.158137735 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.108491129 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.140220449 seconds)
  done (took 9.748436166 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127331834 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137316557 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140866246 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116990427 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110692921 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124501697 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099750134 seconds)
  done (took 1.908113955 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101611772 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186822901 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21079628 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210942357 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.18018087 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.220346508 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146632829 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10146067 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131837937 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135621954 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187234432 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241206699 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.107241951 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141208671 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.189204184 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126742074 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.190103575 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126723307 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114421631 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213740604 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114622613 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127811332 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140235808 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101788923 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209160001 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102983632 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26670753 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116775813 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10721921 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.141612703 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11290034 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206398934 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184028251 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.141616025 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106437858 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210580678 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.180557439 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138782914 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.198343087 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.132285923 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.185331504 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.138834282 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11744798 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112595894 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.14320369 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.170833291 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.145059652 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115855864 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.111808622 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.220728014 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.110539447 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211310289 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.109458711 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.111479913 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.138877819 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114856833 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.119700507 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.141908724 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.194044616 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142790316 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184963919 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211690516 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.211088919 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184203001 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151541707 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.186364735 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.208918335 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.110460458 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13723717 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11379846 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.214491377 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111217361 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11244902 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201583493 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116749285 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.213910873 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.214218464 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11099239 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.112569301 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.132501827 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.111257448 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101149513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.204014477 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111513183 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135316256 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121625484 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113754283 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.137840884 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108259136 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123679622 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.138153957 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114919679 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118812952 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.139520022 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119566915 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.217707155 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112106381 seconds)
  done (took 15.691460759 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108081752 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103186092 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107352644 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130046637 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104458101 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102939618 seconds)
  done (took 1.73029609 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142704067 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114456325 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149696262 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116755537 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166332245 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.220447542 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.228579516 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111423558 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155861636 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127909893 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.221864627 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.199886536 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.23122676 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117201384 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.225635831 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118792259 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.229889534 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111798202 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150872946 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113121715 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117129622 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145093376 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112379088 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213767628 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11786042 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118609576 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13919556 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12746145 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.122578522 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.138502906 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117513389 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119012264 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.135925687 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111593307 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.229391875 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108988955 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135876823 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124729033 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115996455 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143723437 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.203407865 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13751635 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124927407 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123026825 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136772048 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110755801 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123192439 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137039338 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.20246365 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.150506245 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.125380624 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115232056 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.147326877 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123981038 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.109030243 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139153316 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124779203 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.231695552 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.117685432 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109380683 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142766306 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121180896 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110570731 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.150175487 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.116383166 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123089371 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.1370992 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116232335 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11135629 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.14231369 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126495086 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115084898 seconds)
  done (took 11.331960759 seconds)
done (took 41.4564779 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.604421103 seconds)
  done (took 2.674867111 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.910268716 seconds)
  done (took 1.982854522 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.805762508 seconds)
  done (took 19.911251476 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.545206249 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.617789534 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.059837152 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154424544 seconds)
  done (took 3.449786114 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.021299355 seconds)
  done (took 2.109530346 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295332348 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263498438 seconds)
  done (took 1.636304813 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.754791536 seconds)
  done (took 1.846360281 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.54394513 seconds)
  done (took 2.621992469 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363359442 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174304759 seconds)
  done (took 1.632828271 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.624709964 seconds)
  done (took 1.72148851 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.435980618 seconds)
  done (took 21.535588508 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248494204 seconds)
  done (took 1.347289478 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286407575 seconds)
  done (took 1.384148837 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.798089466 seconds)
  done (took 4.896187099 seconds)
done (took 69.831565332 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114327425 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116938486 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115388957 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141149125 seconds)
  done (took 1.576452064 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122592334 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117616971 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120620101 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.14328524 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123003905 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116399303 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142932761 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119482078 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11576936 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145820798 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118431461 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11618701 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145396112 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117417778 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11543186 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144332006 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122012097 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116938588 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.116727222 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.145876014 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120326036 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117913798 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.148500022 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121174198 seconds)
  done (took 4.131336484 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114203863 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107558612 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108632746 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133083919 seconds)
  done (took 1.567342012 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128392279 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129801315 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15383482 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126721305 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129836611 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154909835 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118519953 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114244343 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142649376 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127210747 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132762536 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156201463 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131563783 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119431353 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155298855 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113391416 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118795493 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156051031 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125418571 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126325961 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143678084 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125267133 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123192352 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153725601 seconds)
  done (took 4.309698296 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190762579 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126012129 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.16712722 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158340491 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.169499763 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112417983 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.137075723 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145832729 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.119768636 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.115285269 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143776241 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160391908 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14420818 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117425393 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113400437 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.144607203 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.126978847 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.118426336 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.183522 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.118816352 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.119205933 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.154819646 seconds)
  done (took 4.189942271 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120139477 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108609982 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.132033206 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11243518 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119740924 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136925923 seconds)
  done (took 1.836146116 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108053606 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101754315 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102221058 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128570289 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10754365 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101868781 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099739928 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129139941 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102906568 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10093024 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128520356 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102777046 seconds)
  done (took 2.419893885 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.345181058 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106986226 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135090222 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.10890501 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113095397 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104656407 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149377068 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107130193 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.273004211 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106866528 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146957851 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197104086 seconds)
  done (took 3.006219877 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205712451 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142365622 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299653781 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368513915 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162948052 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184222019 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270867144 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189708761 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203429977 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13373983 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241021159 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151436007 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173249799 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172399562 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160563382 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162500528 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191433664 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188509705 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171728911 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194930267 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181214716 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161935825 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204064804 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172830871 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132820304 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158068137 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.142600559 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123009477 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194644714 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162175731 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198620166 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14314068 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164191404 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217904931 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230886592 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202406886 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287946089 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15699316 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.178820031 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.207087196 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258593041 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135941982 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216012888 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149067254 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153386477 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17476605 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17848396 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.170146523 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154252408 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137767673 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20678764 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196083606 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.178492533 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159890293 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291162838 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189329276 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.138058186 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198175256 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207491718 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186603109 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190311212 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119464154 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205898933 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205936472 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177448823 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162703834 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166442116 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120341514 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191685489 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21887742 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175675574 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183816169 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.22526042 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126818575 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182389051 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169928484 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201690361 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172116804 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182911734 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115530158 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171950131 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132471834 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12303344 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.222347555 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11854793 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224938102 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128438824 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342261043 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210942646 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152549005 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184849243 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153797571 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185199077 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14074961 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110165257 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169376188 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158586749 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182178943 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128520969 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179691975 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134496082 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151534747 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148564176 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.117150886 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181851113 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13271311 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189374992 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15420054 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155069562 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161413046 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172139526 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148557962 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1952025 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179074501 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156454553 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127270752 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213450682 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152257731 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.155393887 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173791679 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208788819 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147264459 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159801401 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161224166 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214038177 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13613257 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211734137 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132385871 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160253519 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.146836688 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183808906 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15493442 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17636945 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125049366 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.171451579 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195985775 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.150358305 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134444234 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190134844 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130572984 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121757527 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162176623 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132815086 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.135018976 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.168799148 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129107301 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178317715 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152734928 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178648455 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154407309 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157224814 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172958332 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156801348 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156370341 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169501965 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115771442 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19838046 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182140454 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151815117 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200147847 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189302777 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216102536 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153746767 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154276691 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175455797 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121815254 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.14363529 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156678553 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179318584 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158894238 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.204478338 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21073072 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164491077 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.176188325 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142728157 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196048245 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.199175494 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150310226 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.166580826 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156203891 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187435932 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117552088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.1190764 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.149586232 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134393953 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124326358 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158247991 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177905252 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190267026 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207197055 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15459933 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164466309 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178944285 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151708303 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158432777 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.190118017 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135467056 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.205812878 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175994015 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192808326 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1363708 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186251376 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.115746537 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149452027 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.129832914 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188100237 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132781705 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130954243 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167844832 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178662398 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200511705 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143216912 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224810907 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192221057 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217403473 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.116666646 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.158886493 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197540998 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15228842 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.209580667 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135110626 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186345897 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177493485 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164106884 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185421641 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182206485 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157828308 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216265388 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.176950381 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128062504 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142839418 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183974162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133838743 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191988987 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143515944 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153020491 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150293174 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132406913 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14969616 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212858336 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139905748 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196372952 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156558425 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197464749 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120842289 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164692637 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157814666 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139289209 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.142646224 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167168634 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210828021 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140478176 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182410845 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198383467 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127737419 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31588274 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215508288 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202613221 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131414644 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165037697 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159722733 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186182872 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160780174 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205154008 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136998569 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204053203 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155563075 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167038962 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127708098 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144765391 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175615448 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.146712794 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.157828979 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152512234 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.164931485 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184880237 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164417977 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155783265 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18560292 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144004919 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174617631 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136919956 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219590357 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152826054 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202870741 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151637731 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193060709 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188242267 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149418977 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125544752 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126075544 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205804808 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124526972 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187762663 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203156992 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220101669 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160773189 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187457368 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134838232 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121010997 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183261291 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144286525 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219594722 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159492195 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133986778 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218029951 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13695886 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126688674 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186277006 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305294111 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141464931 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200697327 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.12047701 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.298919738 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127073135 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127671068 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18939613 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167923592 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.158321657 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179803587 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191341841 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139458521 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186937111 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134006981 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210188488 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190522739 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194930597 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202303755 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141849823 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1857175 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158236989 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203085164 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139843925 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.16952272 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158483224 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207198504 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180268602 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158080829 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155872146 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182878558 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15352378 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199406076 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132609669 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217949008 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123938568 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188502013 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134609145 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119635216 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182663783 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202295617 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128256845 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205299267 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155423636 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156932108 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124651787 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141130252 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182200492 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134052652 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.154813196 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183308051 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.154856164 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161260832 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204337452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127127173 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151652109 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172570243 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125891932 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167632573 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139324614 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127166297 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.196661406 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182963157 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.15703693 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175982475 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191058887 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161776426 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184005183 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137675553 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691318876 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.123307269 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20721043 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144435814 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212178764 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146106145 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188455308 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153466599 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174696254 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160051381 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174877093 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234316327 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189593069 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152907031 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155763341 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140337077 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135191224 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.157670752 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148424508 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183030001 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136749776 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130500715 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183272999 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13808548 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173151852 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1346019 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209170913 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144431496 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214778239 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207328729 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135057096 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156961382 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203911379 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125245339 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.190542085 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198083522 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138014396 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143148917 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.160286496 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133421325 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208720929 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120800891 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153718226 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190062632 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154462225 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184222849 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131132657 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189644893 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136976156 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186635762 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123041541 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178041297 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159194781 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12886657 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.152627047 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155445133 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188313069 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.15122252 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150352322 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171591186 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182287983 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.148363198 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130149047 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304445879 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157095313 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21740907 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.145328954 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160214835 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141046765 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179391295 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152659031 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183122495 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126653483 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125966552 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.153640596 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.172754473 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.185136199 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158428866 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201452916 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159783945 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219957941 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130547528 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.315369262 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137345331 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153146675 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.157874573 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.124693124 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165168976 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131735616 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135766847 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215523681 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208277517 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.152214022 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.170690943 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126710792 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121307908 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154503714 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163921342 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177034566 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15676623 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167937002 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113879894 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140443365 seconds)
  done (took 83.067274933 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167516519 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152718899 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170419554 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223456355 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197625508 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293417762 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231609101 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256735392 seconds)
  done (took 2.892878195 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11961705 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15961982 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141682802 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145080922 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117555933 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.455825479 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158955748 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120083033 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165195398 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.160578736 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142848427 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.618039575 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114680528 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145100291 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.10488626 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.145524801 seconds)
  done (took 4.205687119 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.528876015 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.603705937 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.387861363 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285344499 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238003327 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182432795 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.823606927 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194143213 seconds)
  done (took 13.437055392 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.147810661 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133984687 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.831447128 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.26421151 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150610443 seconds)
  done (took 2.731655606 seconds)
done (took 130.457757533 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121407859 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120369692 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119666136 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153662765 seconds)
  done (took 1.705966644 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.185432344 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095935238 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099323774 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.123561861 seconds)
  done (took 1.703196318 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442976483 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095502316 seconds)
  done (took 1.765217141 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147837964 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14286988 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165011302 seconds)
  done (took 1.668996193 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140991091 seconds)
  done (took 1.343413059 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128519988 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119962768 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.241247079 seconds)
  done (took 1.696893027 seconds)
done (took 11.088475443 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120966005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419679546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433160084 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134157943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71122142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428212886 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.065922243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175936999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177518463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137538873 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132635834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688660635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04782247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.365968084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002627873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.390487558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694024904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111417091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145157354 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11312638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.043908455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136847992 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113273011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11252622 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.688532667 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.450916669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109550552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369248088 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140060347 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113223201 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.398247614 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140597136 seconds)
  done (took 17.509973079 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118816567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173539085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147044074 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112497478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113732887 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13954452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122799764 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122128602 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207133987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109609796 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160043315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110593298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115260557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109400649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164025365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109674406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112183352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142358251 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119154955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112145146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161245232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109677329 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112409407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141892228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110396754 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131790673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140078319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123605756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109034147 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14304641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116338897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110573224 seconds)
  done (took 5.339377185 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158806337 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180766295 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149402796 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146634081 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187260991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11290464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195121312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17877076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204753103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112557996 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131942982 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136766109 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152108911 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111253108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163945843 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11213149 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114108683 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141374428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120372692 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112674556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160264502 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110450392 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11212869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140342563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11094234 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134455718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13888162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125372555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109752845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142832484 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117823126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111206033 seconds)
  done (took 5.654162466 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126498614 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126605761 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133733223 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16471984 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120853872 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124194901 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154452573 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12151049 seconds)
  done (took 2.291338845 seconds)
done (took 32.000219191 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134047819 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127455426 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127895681 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151029881 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194599813 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145195765 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125930651 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.112996216 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.12056824 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.162409844 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10999606 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.11365881 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.157966953 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119601688 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.226410592 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123862713 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.228966153 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.197152233 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143160394 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123965985 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115898307 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233006535 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.11988874 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11491479 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.234946061 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113380906 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.218077455 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118029019 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.117631566 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.143844316 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.195880628 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150139098 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115705497 seconds)
  done (took 6.142490946 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212177112 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116533845 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.150509477 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119193651 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117201624 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147886826 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.216305791 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147965397 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121077007 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118561225 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119168502 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.225861091 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122001735 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141285497 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120939603 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.116581652 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.245809471 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.11773365 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110270043 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.09716352 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.141927845 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119032507 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.256595781 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111496701 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119263796 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.118491294 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.151662128 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122586381 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.116570039 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.147960063 seconds)
  done (took 5.51106376 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12755133 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132421228 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13609774 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217104794 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147754043 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16237409 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142108614 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134260331 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174170649 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114178155 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127879057 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180832527 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131009649 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122542659 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147358539 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13362056 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137144373 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143185891 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122478698 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130489778 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133324174 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.162215878 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141059596 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.120621817 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143045558 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12031579 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12204362 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.159017421 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120989435 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126369216 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144732835 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117617204 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114760146 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177419156 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116028407 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126046136 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.169141032 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12647414 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127430259 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.17628666 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.1174606 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115046443 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169372895 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169622076 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114462835 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.155500845 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126034319 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126819712 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111077778 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.163500957 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.15559862 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141138563 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135989108 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114271447 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.109853545 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151726367 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113858119 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.114893928 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.158102035 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11716408 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136205708 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.149665224 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124322481 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114304711 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122191364 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142508356 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111799176 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116612807 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171630329 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121116296 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149192008 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.142592023 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126538085 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125775059 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.152578659 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126198561 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112275984 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123105609 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154546513 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.11978765 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125083225 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146356636 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117994925 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129334912 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164658383 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12978127 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124238704 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156245796 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118219942 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114768027 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13002049 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.1456687 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118847562 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125958982 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.1450554 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117056241 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126358877 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.154693685 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113511821 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138392923 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115863188 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.14720102 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139046418 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118555735 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.150834405 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123564574 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155156083 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.144495854 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125567481 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126971215 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.143819628 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12213636 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117915053 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.141887371 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135263408 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127897291 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119643943 seconds)
  done (took 17.056451312 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.3285047 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.284510402 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.21824139 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315456667 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126162128 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.245677226 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.314866979 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.313705773 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112154295 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183587096 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165649769 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.284308223 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146726052 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142402095 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.318078528 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.371660085 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175071199 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152838616 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181590522 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128756739 seconds)
  done (took 5.749179085 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136134768 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148926781 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170352731 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144773489 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.11985827 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.1595252 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113339149 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132570529 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153522623 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126954337 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116178584 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161146468 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123483948 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127111636 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160710024 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154997209 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122043116 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148143248 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139046776 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119955075 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.108418546 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.17542163 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122752178 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167388084 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131478526 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12589633 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.111986467 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.150803939 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117878866 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.118719807 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.150442801 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135362006 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.119529265 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.140963841 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128064318 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131328976 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.116345716 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.147708178 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119397803 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116723325 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159936779 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124242882 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121812574 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103681639 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.162321251 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117653498 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124287256 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155905965 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.114615996 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129151203 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125948613 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.156394886 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120872587 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131275103 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.149021232 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132102595 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124655297 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.155339654 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120421115 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11224125 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.141469307 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120572747 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120207136 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12425837 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.158790578 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13766553 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129630151 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.145907144 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119909482 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118233298 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.149092682 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129788234 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135076021 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.151572542 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119490706 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12567346 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.149168867 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101337208 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125001547 seconds)
  done (took 11.809554263 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141715736 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120376692 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133032573 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181887663 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12532212 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119777162 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151890441 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135458202 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124036706 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160982579 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126075366 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127920471 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168645015 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124984199 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119673696 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161100356 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125300817 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153636257 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16356864 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143902121 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124031892 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151926587 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128334593 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126332201 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175961163 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127057353 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142299776 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.154277767 seconds)
  done (took 5.190891427 seconds)
done (took 52.676024038 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.372595208 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.575945593 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.339914777 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.335142678 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.4098552 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.342363046 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.337653474 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.336929281 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.992916255 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.320064144 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.334868302 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.346722618 seconds)
done (took 30.286163053 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.348503023 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.88943326 seconds)
    (2/2) benchmarking "String"...
    done (took 1.620404539 seconds)
  done (took 4.743516004 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.329649054 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.329383295 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.555525019 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.330662876 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.328788558 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.350554759 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.329906094 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.334849708 seconds)
  done (took 16.791957251 seconds)
done (took 27.446680577 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.419695411 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.526025587 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.571567307 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.33535041 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.331715763 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.347097088 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.332603231 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.363594236 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.342894149 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.343877063 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.757733134 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.58939304 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.337447408 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.699702684 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.34785917 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.339666849 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.350579986 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.59317473 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.337724943 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.366604108 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.314529616 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.320506507 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.358209577 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.341458014 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.341175447 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.343199751 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.390149071 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.332633747 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.52462768 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.360013685 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.371615313 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.336645761 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.381018652 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.346488215 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.339817843 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.333659659 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.524962733 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.343189311 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.320555407 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.348164541 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.520252757 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.345449656 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.332433757 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.361583519 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.339896906 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.405875256 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.322296835 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.451873438 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.365946971 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.343761099 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.375235684 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.709810455 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.347529323 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.349989599 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.340863636 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.56024746 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.35889566 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.403243704 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.363219714 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.351284818 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.351519068 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.332667955 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.359379504 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.340890454 seconds)
  done (took 152.476495981 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.334492893 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.340176697 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.338773908 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.40539607 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.340190235 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.338786877 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.334232533 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.334343692 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.339732684 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.366253504 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.33952724 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.340247111 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.35526463 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.286259136 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.341638058 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.352004119 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.336705193 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.336089719 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.36457041 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.334835623 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.338308251 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.342334947 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.353689253 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.340233146 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.347039933 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.422897243 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.345205251 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.350137944 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.346216271 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.337446987 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.337900474 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.343061156 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.002641329 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.204605218 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.344196878 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.377222874 seconds)
  done (took 85.229553504 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.335961876 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.33681588 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.337216161 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.337085504 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.373765636 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.33786334 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.966258215 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.968719263 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.056096716 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.772488059 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.840272371 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.665671338 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.344392516 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.433161314 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.350363417 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.338987832 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.354330856 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.363522332 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.34304784 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.340476272 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.950200651 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.351956515 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.442412141 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.524572155 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.356893647 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.373893185 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.739189482 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.339277856 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.373956995 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.677198176 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.392304612 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.338762475 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.778935046 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.000775358 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.456746425 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.342472142 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374584354 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.338106154 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.62554592 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.339031262 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.340100436 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.339078186 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.343395404 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.068437013 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.344059939 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.9752779 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.346365916 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.346586142 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.344918756 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.340453574 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.339110158 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.398916961 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.114393501 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.344945464 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.341643702 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.343027035 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.339902448 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.340081784 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.374612454 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.384907925 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.442283428 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.342314474 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.344866071 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.377154365 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.342605111 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.373989678 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.347169729 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.704995268 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.402571855 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.477233955 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.955890356 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.345039485 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.441948345 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.46415791 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.342330474 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.342129267 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.341307841 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.34218642 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.456485685 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.342052219 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.781217736 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.342973962 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.52754043 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.360669132 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.837384439 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.44572771 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.34311714 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.782965118 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.347690213 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.342612829 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.109664057 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.443855214 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.341766084 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.342768066 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.341939644 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.786111803 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.967667107 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.627958407 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.348972291 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.548555004 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.34794865 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.794005773 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.944716707 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.095390098 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.3495973 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.458373236 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.527257206 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.3629482 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.342730845 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.844249606 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.349379146 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.401421356 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.350157651 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.749063839 seconds)
  done (took 383.085337946 seconds)
done (took 622.024581187 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.243306973 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.190921608 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.348089027 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.203313055 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.184364191 seconds)
  done (took 12.414111108 seconds)
done (took 13.657116504 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549683785 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.555159078 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.415218325 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554927508 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.383306981 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572807955 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.539322447 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.370429329 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.464058876 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.437131336 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468232107 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.407773568 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.38191805 seconds)
  done (took 20.34612605 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.636836753 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.355390915 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.417216119 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.622519729 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.392598377 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.633307783 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.67284692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.35547123 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.496903 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.362781508 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.361874552 seconds)
  done (took 19.552356533 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.634535774 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.357071095 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.410388535 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.614582248 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.388876096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.635558756 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.711723048 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.356333558 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.501398388 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.390624018 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.360142927 seconds)
  done (took 19.606497716 seconds)
done (took 60.750033282 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.227858803 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.376337861 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.390472982 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.437525767 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.362774267 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.373608613 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.442141246 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.365511976 seconds)
  done (took 29.222485177 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.358406257 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.360079523 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.357075408 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.361110252 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.359422654 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.359356228 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.360620263 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.360423801 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.363080537 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.360787419 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.357711261 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.360021022 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.359512817 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.361843156 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.359254635 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.361293359 seconds)
  done (took 23.00826787 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.362162429 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.360831689 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.358747447 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.359266819 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.36109794 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.36165219 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.36250286 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.354363843 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.359436423 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.360936466 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.358005957 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.357040294 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.358571184 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.360917163 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.360559594 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.363374288 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.357077893 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.361220696 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.366657254 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.361818875 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.359740711 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.356309163 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.358529694 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.363856024 seconds)
  done (took 33.891696745 seconds)
done (took 87.368651311 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.349127765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.391092857 seconds)
  done (took 5.986890276 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.426303675 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.418662853 seconds)
  done (took 4.094052073 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.360124209 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.361437331 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.361044048 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.361411635 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.361377976 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.362169548 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.360612999 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.362823712 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.362848685 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.361901241 seconds)
  done (took 14.865628946 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.363527388 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.362980339 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.363058787 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.367410926 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.363311325 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.362579466 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.364606322 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.362482309 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.360344004 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.364140024 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.362820862 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.360659982 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.362158647 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.361735755 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.365768704 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.363734728 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.364699809 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.366502543 seconds)
  done (took 25.791355275 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.377221008 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.383955603 seconds)
  done (took 4.009412248 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.504980475 seconds)
    (2/7) benchmarking "second"...
    done (took 1.406647269 seconds)
    (3/7) benchmarking "month"...
    done (took 1.479576561 seconds)
    (4/7) benchmarking "year"...
    done (took 1.469608746 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.408039884 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.38427449 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.405696185 seconds)
  done (took 11.309419986 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.365275583 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.582169153 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.717002221 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.892371911 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.365713878 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.37015277 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.202715363 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.367581753 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.368237541 seconds)
  done (took 15.478964585 seconds)
done (took 82.781791284 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.353985681 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.395315716 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.377374327 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.380269456 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.658520348 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.397165194 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.359746758 seconds)
done (took 17.175949577 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.339551262 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.356373046 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.360109281 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.362079773 seconds)
  done (took 10.666863135 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.372365588 seconds)
    (2/2) benchmarking "read"...
    done (took 1.646533096 seconds)
  done (took 5.269597678 seconds)
done (took 17.187143777 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367402953 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.366755528 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.368253741 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.36533738 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.36638667 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.364836393 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.36529981 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.368561037 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.366077061 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.369269748 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.36711391 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366489405 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.366845765 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.366195532 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.364920137 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367449186 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.365196399 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369009649 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.367883719 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364615197 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.366800184 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.367930085 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.368626034 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.36643733 seconds)
  done (took 34.05349886 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.367886629 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.365694485 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.368409326 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.369720927 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.365933743 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.367773735 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.37006829 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.365761736 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.369277259 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.368828822 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.36639351 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.368448489 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.368668489 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.369939699 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369538924 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.36800665 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.371481885 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370952669 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370196027 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.367481207 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.366935533 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369406093 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.366198998 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.37055532 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.369235361 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.367747902 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.367559284 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.369060592 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.368990239 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.371503621 seconds)
  done (took 42.311770969 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.376074217 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.377081822 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.374832002 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.373007673 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.373390286 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.373432099 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.373380145 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.375571287 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.371902721 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.373177908 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.372487931 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.373029835 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.371697408 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.370349141 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.373545348 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.374073843 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.373875598 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.373062336 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.373189858 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.37178257 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.373343157 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.372806652 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.369540222 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.374190955 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.372302549 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.37227869 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.371763601 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.373788752 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.375839581 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.372792819 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.377335189 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.374477491 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.370899763 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.373129543 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.373472822 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.377237384 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.380856993 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.379703703 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.376661474 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.374152754 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.375294302 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.374397896 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.374156968 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.375321291 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.372310705 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.375582871 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.373459054 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.376277288 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.374681858 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.374749231 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.372423536 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.37632526 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.375630375 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.378116906 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.373080666 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.374039356 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.376588861 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.377353391 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.378304497 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.373411366 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.378865097 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.376948788 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.375800638 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.377552147 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.376721703 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.376639635 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.373823269 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.372351815 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.372415645 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.37500738 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.377056469 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.376901034 seconds)
  done (took 100.224614552 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.372413377 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.372457024 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.373514425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.371332885 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374030702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.370958891 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.377372934 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374144118 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370689406 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.375629468 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378180141 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37537194 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373800662 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.376768797 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.375306449 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.374168213 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.37832246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.373063009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.375606493 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.376193217 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.377105081 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.374128404 seconds)
  done (took 31.497585191 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377261003 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.376080401 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.374396158 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.379713327 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.376153014 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.378402531 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.378026626 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.378481292 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.378921843 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.376536036 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376132812 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.377860313 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.376505786 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37848867 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.375413597 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.380332647 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377574636 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.37840167 seconds)
  done (took 26.052015895 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.373711791 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.378340884 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.375801572 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.37566033 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.379581279 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.377461647 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.376653951 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.379561934 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.377238626 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.376521374 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.378566916 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377164329 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.37700222 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375785279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3783048 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.376870651 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.378865294 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375830199 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.37780012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.375989118 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.378788484 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.37938891 seconds)
  done (took 31.559422704 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.37677973 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.380281383 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.376361615 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.37662873 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.378752211 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.380470549 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.380453469 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.375992009 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.379713082 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.378881426 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.379135691 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.378890225 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.381315486 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.379392125 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.378559643 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.377525751 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.382342355 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.379132674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382222077 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.380025156 seconds)
  done (took 28.844988638 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.380340576 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379837073 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.379035588 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379398509 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380071425 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.388659815 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.384280258 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.382295277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379782175 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.382653498 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.383761679 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.38253365 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381434902 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.382928302 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.383787069 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.38147195 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.381831696 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.382256789 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.37947689 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.384342754 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.383839508 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.382560724 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.381467279 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.383525325 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.382048304 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.382981723 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380644891 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.381646415 seconds)
  done (took 39.958974711 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.380374061 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.382037547 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.378887416 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.382111248 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.378745186 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.381053794 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.381202717 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.383525338 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.383063783 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.379962419 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.3833851 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.383123165 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.383290041 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.381698069 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.383102945 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.384079129 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383102184 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.382169636 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.379253263 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379633862 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.382327601 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383118404 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.384890339 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.380740728 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380762866 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.381981512 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.382730131 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.381867073 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.381739281 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.382800114 seconds)
  done (took 42.723915971 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.42450543 seconds)
    (2/2) benchmarking "in"...
    done (took 1.431485674 seconds)
  done (took 4.121198338 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.379722722 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.383920014 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.384443401 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.383240597 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.383060219 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.383532678 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.386097293 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383623968 seconds)
  done (took 12.332672858 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.375189099 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.385202295 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.383564254 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.383217642 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.385229169 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.378772834 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.388985405 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.389515302 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.379117846 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.382095895 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.383179569 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.383589508 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.384001723 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381015775 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.37898022 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.384452928 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.387008595 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.382988879 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.384614562 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.385146099 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.38683316 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.38439569 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.386008571 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.388778647 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.381852675 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.388644518 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.387452178 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.390501247 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.381311577 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.384017567 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.380633649 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.386523987 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.385974284 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.386548072 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.386831463 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.386780601 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388717403 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.385184716 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.38956848 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.38843209 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.388196727 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.3834325 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.383703227 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.384552907 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.386601401 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.390179508 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.38643422 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.386498936 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.381934248 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.386614163 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.389998553 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.383973936 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.388657285 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.387802574 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.384143809 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.39218499 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.391141507 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.383812259 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.387568491 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.390665387 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.396163091 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.394156315 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.386692536 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.392586728 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.391151476 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.399723902 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.391959224 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.391856024 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.385524383 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.387061211 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.392258767 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.402111722 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.393792174 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.391963028 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.389705994 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.386232789 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.382836772 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.390026541 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.389548967 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.387289187 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.391709048 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.39021202 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.392109748 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.400483746 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.384112911 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.392669291 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.387835765 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.388183108 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.383946887 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.392322461 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.3920567 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.388382626 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.382637936 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.384621477 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.385263832 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.38903483 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.384444025 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.386201718 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.390235141 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.392346491 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.389587552 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.390113883 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.391852697 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.39482225 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.391669998 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.391548562 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.392435402 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.387438623 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.391725565 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.391619603 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.390462828 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.387415032 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.38947378 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.390539649 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.385025061 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.391699406 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.394002641 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.388224367 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.391826894 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.392301216 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.394337297 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.403958111 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.395816631 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.391584167 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.392274212 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.398219614 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.39469369 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.390962617 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.39325646 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.392415562 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.392209665 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.389877305 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.394022572 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.388106839 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.393312102 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.386951971 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.392067451 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.393664276 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.393348855 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.387964774 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.388247493 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.391183374 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.392485701 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.390841996 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.39872314 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.391255172 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.396343635 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.390349779 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.392191279 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.391286586 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.393657561 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.392872759 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.391231965 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.394604707 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.389497029 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.395791195 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.388461176 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.394426952 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.394790609 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.395312654 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.39562836 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.389513365 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.391492501 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.394844398 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.393202448 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.391845978 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.395704554 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.393526202 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.393448327 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.387897567 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.397637248 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.390409716 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.392149862 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.399330113 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.395143566 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.395082147 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.392076485 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397053833 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.396459527 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.398043781 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.391656435 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.395233958 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.398947044 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.394938979 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.397490148 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.396324522 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.394221095 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.391646975 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.390671819 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.397168449 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.392204451 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.402669973 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.400456904 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.404634984 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.393470093 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.396838032 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.391419657 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.39947799 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.393438094 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.396971925 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.396587097 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394301764 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.394001124 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398973731 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.394668014 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.398312155 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.389839929 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.398590026 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.398021661 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.398074453 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.395272281 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.392108498 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.395313624 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.398718064 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.398269495 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.39681884 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.390275037 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.396749808 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.394747473 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.394302798 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.397830273 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.398630734 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.397746107 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.399902784 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.39222535 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.397075519 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.395125518 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.391533921 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.401631311 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.396145215 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.395759636 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.39922959 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.39616161 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.394813194 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.40158121 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.398343825 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.393831064 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.399293081 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.400371775 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.396948084 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.395515892 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.405086332 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.401990761 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.399262331 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.400296976 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.396715424 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.401915567 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.399905721 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.404125192 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.396058874 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.402044759 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.396989784 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.397647589 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.398700224 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.394988829 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.396919364 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.399499187 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.401102711 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.403305113 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.395401219 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.402869453 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.402418786 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.404943977 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.399930087 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.405496923 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.402733069 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.401411413 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.400073416 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.397340172 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.403724181 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.392566282 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.402123154 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.400695453 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.408445472 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.413486917 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.404353462 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.401594656 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.40170228 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.40403723 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.400620839 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.398688522 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.400439448 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.398986288 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.396147059 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.398407057 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.400763999 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.39947722 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.402578885 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.39935308 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.399041535 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.404587806 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.403988817 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.397066618 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.404119044 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.403048883 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.404407843 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.399119765 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.404435028 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.400404176 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.402420863 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.399298361 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.400604549 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.405850516 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.402054276 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.402564158 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.398960313 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.40159317 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.40078189 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.403325086 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.406180103 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.402609304 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.410699042 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.402283257 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.407148446 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.402373137 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.409057924 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.407118048 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.404986412 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.410808521 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.406129232 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.398486807 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.399572575 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.404174626 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.408399273 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.407836565 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.398215884 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.406836457 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.407010087 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.406720636 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.405167607 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.40692642 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.405951756 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.406338187 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.410314646 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.407640783 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.402196772 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.401431009 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.406553319 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.405751776 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.405748346 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.401299632 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.406351295 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.407792807 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.402361029 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.397266017 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.402908632 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.4069633 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.40756132 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.40646726 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.405512562 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.406961319 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.409046194 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.405642151 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.412489156 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.409209672 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.409306689 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.41237824 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.408851896 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.411866487 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.405257526 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.406358829 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.404806282 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.400884929 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.402260586 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.403924975 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.409339616 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.403370458 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.411798883 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.404895963 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.404726379 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.403737551 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.409273641 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.403354232 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.412527204 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.424758702 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.405185569 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.412072714 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.408030559 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.404372486 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.40820779 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.410028469 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.401813507 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.404507948 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.41008984 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.412593926 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.402224303 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.40867695 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.403191039 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.412141557 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.407799281 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.410260097 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.408726787 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.408556413 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.408345566 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.408576758 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.40906832 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.410665965 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.406517411 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.406842812 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.408240604 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.41244688 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.411790776 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.40602683 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.410381473 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.410946127 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.406102797 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.404190701 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.411085204 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.404366831 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.410643369 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.406675492 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.410927282 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.408764547 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.409077486 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.408655239 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.412208291 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.40698047 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.40740236 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.414231322 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.410442496 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.41492286 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.409104684 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.41468427 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.407022958 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.404640003 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.411062176 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.405845983 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.412687406 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.410337054 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.412428499 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.410317595 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.41298012 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.410370044 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.412473993 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.408541686 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.40909871 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.416243457 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.413646141 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.419073148 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.411414686 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.413375855 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.408317729 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.4093103 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.413265455 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.406576562 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.409280437 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.415005156 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.409448208 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.406816461 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.412115496 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.417083848 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.415643568 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.410378697 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.410309947 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.417221122 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.414114165 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.417644533 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.410473795 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.410596477 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.411431766 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.415252436 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.413992931 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.412671105 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.417137746 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.417736031 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.414252286 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.414392094 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.41115562 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.410788425 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.416203913 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.415559138 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.411239577 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.413312434 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.413274844 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.418006754 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.41551667 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.416886879 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.412074962 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.410722361 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.411789855 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.41592761 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.41463843 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.415103382 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.411720194 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.412263067 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.417930647 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.417459662 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.417955601 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.416977042 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.412845618 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.41845521 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.413770942 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.416811551 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.413224983 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.412858907 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.416965496 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.41837009 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.409766392 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.419024092 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.420922771 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.415841991 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.41229083 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.409520886 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.417884476 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.421081049 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.417354192 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.413705919 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.414396133 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.420389811 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.418349021 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.417554187 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.41431256 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.425802149 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.42134224 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.413524845 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.413253616 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.417984483 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.421564194 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.416150418 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.418962994 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.414558551 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.415784253 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.425283241 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.417755754 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.419814589 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.414928926 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.415565214 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.422258725 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.414487855 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.419252944 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.41547274 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.420766444 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.419957318 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.416332392 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.424956183 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.420591321 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.423327632 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.437518409 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.416669352 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.419403672 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.422659882 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.41510605 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.419694718 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.419581445 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.420944095 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.418784781 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.422199266 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.420386345 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.414554752 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.419707957 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.419900305 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.425308965 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.419998654 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.416148478 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.418626209 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.422027726 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.422871613 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.425559174 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.420366232 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.420390543 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.421332905 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.415835892 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.428247437 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.428486981 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.421521502 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.422425136 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.42191505 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.418023407 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.423016163 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.421563251 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.425756379 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.422574449 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.421552764 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.417940075 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.419889401 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.422127934 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.416836834 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.415933217 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.415575555 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.421426045 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.42704313 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.43282291 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.421587651 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.420140556 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.424444014 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.423143269 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.42014851 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.423222596 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.422958633 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.422679184 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.420302752 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.426312656 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.423553413 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.423434636 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.423042625 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.428410014 seconds)
  done (took 837.473943659 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.420294728 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.421820749 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.423457566 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.423852147 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.420383215 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.421960909 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.424201502 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.422910832 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.424879797 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.422903823 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.423801364 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.424513542 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.425502984 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.422781356 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.422031758 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.421861497 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.424723692 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.42395552 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.425110214 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.425140121 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.425724774 seconds)
  done (took 31.187028889 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.426221435 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.423963587 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.424173456 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.427282001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.422965577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.425187142 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.424965059 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.425887566 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.425570618 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.425411739 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.428748739 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.426237283 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.427268148 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.425375193 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.426156648 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.427980481 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.428219562 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.425552842 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.425176772 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.426464379 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.425578616 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.426908193 seconds)
  done (took 32.669552717 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.427789584 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.425261531 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.420756803 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.429024061 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.427694003 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.427141951 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.428822463 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.425583639 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.428386628 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.423462313 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.423932673 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.42452747 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.428188953 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.429931659 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.423726941 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.428004324 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.427611149 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.427078546 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.425232136 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.42653072 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.427225894 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.428917283 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.427378515 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.422737709 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.427885379 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.42966236 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.428375354 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.428869862 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.423871504 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.425804352 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.426585799 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.421156549 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.426632389 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.426992931 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.425741213 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.428821484 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.431397051 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.430830556 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.429278049 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.43334913 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.4429269 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.427498494 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.430817577 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.431583936 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.431350194 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.425578493 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.437682311 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.429438602 seconds)
  done (took 69.836370364 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.429341831 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.429758797 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.428918547 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.433584396 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.431419744 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.430671511 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.434034616 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.429610799 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.431963697 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.431156049 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.430952293 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.42903165 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.430408742 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.431431258 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.432622323 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.429229767 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.429157257 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.43331359 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.431231374 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.433429792 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.429894992 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.432112436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.431638535 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.431006069 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.433721239 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.433731325 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.431885054 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.433046007 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.431772592 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.431397504 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.432216743 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.430437602 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.434290014 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.431678136 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.433030363 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.434393198 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.431534388 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.430817127 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.433360697 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.433917307 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.432523573 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.433306003 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.433061475 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.434075295 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.432321412 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.433008647 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.43184666 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.436518495 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.435056777 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.434224245 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.433448547 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.43542074 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.43294805 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.4333244 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.432297221 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.432067487 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.431787759 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.433600185 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.437091847 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.434524447 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.431491993 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.433693112 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.432502815 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.4332408 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.432882335 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.433243128 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.435863449 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.434326541 seconds)
  done (took 98.713109739 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.438473005 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.434493922 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.43830036 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.435715493 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.437033555 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.435109229 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.439945808 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.438846943 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.437213933 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.436784254 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.437941893 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.437393336 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.437847936 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.435588068 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.434530737 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.435920815 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.437490931 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.435939736 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.436380012 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.43495025 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.435905913 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.438840295 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.436657963 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.435967562 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.436562903 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.437810386 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.436336908 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.435867882 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.436617492 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.433922176 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.439057323 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.438293212 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.439286536 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.437377212 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.4391118 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.437093187 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.438848412 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.438500416 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.435390392 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.437609972 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.438714602 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.438341618 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.43837942 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.43849564 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.439020197 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.43744185 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.43969041 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.438084417 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.436996058 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.436967538 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.43800179 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.436604211 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.438566464 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.438616548 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.437754397 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.438881865 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.438989048 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.439209605 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.438912903 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.437050423 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.439981198 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.437680589 seconds)
  done (took 90.434636057 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.440851056 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.439324908 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.439152702 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.438894077 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.439325899 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.438713448 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.439132451 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.440667739 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.439605436 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.438361484 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.441347015 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.439365482 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.440462662 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.439504463 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.43946369 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.439606521 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.438889679 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.439421538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.441035903 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.440017757 seconds)
  done (took 30.108745426 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.43862925 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.44114179 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.44040107 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.438720472 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.441867838 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.439660934 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.442305334 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.443017018 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.439213034 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.441568675 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.44173333 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.438884133 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.439757706 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.439562756 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.441304812 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.439986957 seconds)
  done (took 24.363816464 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.440630358 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.442981529 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.443709188 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.442336671 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.438313393 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.441602407 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.441448034 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.441536358 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.439602222 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.442640658 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.441957122 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.441114612 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.443405743 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.441418747 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.441562967 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.441382643 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.440554632 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.441934323 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.443190813 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.440745103 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.442963929 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.441835155 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.443455016 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.442033893 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.443786778 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.442842816 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.441048765 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.443138516 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.443294288 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.44380955 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.441485195 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.443796567 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.442416905 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.441753087 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.444944503 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.443483667 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.444057556 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.444350187 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.445060526 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.439329004 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.4422891 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.442240696 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.444306524 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.44620814 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.445390729 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.44384416 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.444442826 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.445529604 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.441304644 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.444325444 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.446251652 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.442737103 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.447853028 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.44451315 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.444793818 seconds)
  done (took 80.675562881 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.449991231 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.442790487 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.445476829 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.446231813 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.445414846 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.445440917 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.443566417 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.445917661 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.446126995 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.448327225 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.443800183 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.448072236 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.446047728 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.447028065 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.444631018 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.443303674 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.441445946 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.444858302 seconds)
  done (took 27.337278277 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.443023155 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.44497862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.448563407 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.446577932 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.444019302 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.448843642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.445430472 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.446127439 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.447515195 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.443142909 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.443819048 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.449669683 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.444976594 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.44626031 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.444598597 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.448558545 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.447646587 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.444308268 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.446082935 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.443606373 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.444563716 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.44794361 seconds)
  done (took 33.124884651 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.441433024 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.441427233 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.443267489 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.45795384 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.456745278 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.442787496 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.44334691 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.441188694 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.461542457 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.480236231 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.480414659 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.454804884 seconds)
  done (took 18.761454989 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446377524 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.450941145 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.447427581 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446720588 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452244758 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448670554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448517466 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.449105464 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.448327579 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450239424 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44797098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44867595 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447266161 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447559355 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451903993 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451829367 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449315934 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451131859 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448450613 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452365465 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453424183 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451773946 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448512909 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448938755 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448566574 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446631418 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.450802678 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449729047 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447672472 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.450862678 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451001892 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450053035 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449093376 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449727877 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454134915 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452225835 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448719657 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453313802 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.452039884 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448910761 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.449083602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452989489 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45196414 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450121453 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451205061 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.450389691 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.452077236 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451618231 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.449465794 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.450500405 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448602936 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451736829 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451138382 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448332331 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.45009294 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453311862 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.454341235 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.45087753 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453449912 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453029038 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451993183 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451321196 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454143778 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452732364 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452613584 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.451360952 seconds)
  done (took 97.053603464 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452333047 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.451014228 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453110824 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45705571 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.452972373 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453138478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453221728 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.452960535 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.454688754 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454216409 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.454688448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.452551541 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452742628 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451245586 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452184473 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452660449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452985524 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451472402 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.45538556 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456276672 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.452543196 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.452479198 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453831803 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.45224302 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450696918 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454164783 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.453827282 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.453383331 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455528727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.452314568 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.454409486 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.452182689 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456843966 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.455535378 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455810927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.454299058 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.454648887 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455045652 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.453579419 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456231327 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.454513553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45487968 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45507775 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455459989 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453330173 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456953596 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458304899 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452617102 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456337213 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.456811472 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.458015029 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.454617908 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.456211565 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.454846323 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.453693748 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455843953 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45866208 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456852407 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.454384135 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457323221 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457372833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.456379629 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460024746 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.456182973 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455652286 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455703122 seconds)
  done (took 97.32691494 seconds)
done (took 1963.996903127 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.618144091 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.572529088 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.452863888 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.465347925 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.447715698 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.47614959 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.462603665 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.450646841 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.451024629 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.449496571 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.454589357 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.642241719 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.447262403 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.450996222 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.452515913 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.548326733 seconds)
  done (took 29.164825276 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.482968824 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.463295763 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.587517137 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.456208716 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.485263377 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.670600556 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.519503056 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.459554448 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.653959271 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.477754824 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.449865049 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.48366946 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.453241875 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.464676763 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.478751114 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.669758192 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.737343634 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.454471595 seconds)
  done (took 31.773953674 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.954031024 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.471694582 seconds)
  done (took 5.748382005 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.478450287 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.460344885 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.459455552 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.4559845 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.450395917 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.45259689 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.455504173 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.455527168 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.452464301 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.600369282 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.461085234 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.471325334 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.453570229 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.459842005 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.461899041 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.50634702 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.608115469 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.466259847 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.459234496 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.462529874 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.456334755 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.565944294 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.508962135 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.464424488 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.597918215 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.463327862 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.465564625 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.468228077 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.592020392 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.466271206 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.458672338 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.461015754 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.459427838 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.452282619 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.981930481 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.456424224 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.470837831 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.491685035 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.464422905 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.618393629 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.464633736 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.464523946 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.451414478 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.959317983 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.595406821 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.595280093 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.456375778 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.480584925 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.46349805 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.533552918 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.464742429 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.460637829 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.521251129 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.352244586 seconds)
  done (took 92.497344936 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.494881706 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.45038681 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.636947749 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.481437131 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.450057747 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.466700351 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.455762203 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.777030757 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.510720777 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.449744273 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.79053736 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.076313491 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.460301696 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.523966807 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.419956657 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.544184928 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.45679983 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.456003199 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.453602358 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.456397052 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.045685602 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.459602989 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.456144081 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.59339564 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.491918376 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.018703316 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.462944112 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.454786998 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.479241833 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.453876777 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.031743661 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.460134853 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.548489111 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.453644508 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.752791807 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.887620375 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.847270412 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.484414744 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.475690042 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.455240338 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.462176854 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012374919 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.874900716 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.459206548 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.459162649 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.019857402 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.455497774 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.459274195 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.46492299 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.715076217 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.45909554 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.455058193 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.463202992 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.458172519 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.457138723 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.504431868 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.55583409 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034576812 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.457632555 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.457452995 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.494015799 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.457348213 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.464307271 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.460184718 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.475746253 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.865201809 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.660142141 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.458271158 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.863190014 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.032354402 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.462041123 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111474507 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.461245632 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.465334622 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.706618806 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.463527871 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.454296304 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014233271 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.480710164 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.456541151 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850460978 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.458775364 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.779358915 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.472729207 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.456038827 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.075099113 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.460418996 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.476860716 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.454821188 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.479523702 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.45593383 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.463057827 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.762561541 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.495417875 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.457201727 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.461770759 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.486979438 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.458907302 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.460487432 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.466994615 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095833814 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.462647677 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.460005491 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.465120531 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.45926571 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.46283814 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.46404025 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.461784516 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.738715257 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.463666147 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.484369088 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.458571128 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.475049981 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.468581797 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.545760204 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.46189599 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.815108767 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.459922865 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.458945444 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.46419496 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.459738028 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.511829052 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.459990335 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.461890809 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.371510218 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.729017505 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.482755724 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.460053669 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.46021773 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.46050199 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.460707238 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.459847735 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.521755154 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.46324457 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.305764769 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.474301512 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.487922701 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.457742047 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.474597407 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.461922776 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.468294907 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.463660513 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779684981 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.771367662 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.682091159 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.46465959 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.461800141 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.317020165 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.512095689 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.641604721 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.486297855 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.460556882 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.719927807 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.6841893 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.460970779 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.47063534 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.465842466 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.738777735 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.466586025 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817954221 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.079135125 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.466614573 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.459148135 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.31873558 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.205453382 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.470093917 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.465776941 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.776423745 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.478057882 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.467978993 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.463335946 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.464742796 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.462223511 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.469248209 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.469381412 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.460490801 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.465754313 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.764293467 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.659187104 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.482762862 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.474904926 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021732779 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.497581209 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.464353601 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.472814013 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.46603015 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.464269828 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.551562291 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.462447436 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.465625802 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.466903845 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.478478877 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034908151 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.46374093 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.48766571 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.659034834 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.224754256 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.468420166 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.466731165 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.464804865 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.39505399 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050567519 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.472675299 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.829705455 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.47163606 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.508957804 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.468975226 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.483383958 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047870801 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.467948516 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.463287483 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.191449362 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.468767586 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.993569733 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.465187915 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.470594798 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.121232993 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.470387272 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.471163935 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.464669768 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.465782876 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.779831354 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.472460544 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.468804121 seconds)
  done (took 529.645395065 seconds)
done (took 690.154207569 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.469262804 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.470513681 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.453750011 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.472345494 seconds)
  done (took 11.208099573 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.508410188 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.473659016 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.48040772 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.474044955 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.48770287 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.474719389 seconds)
  done (took 10.244216295 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.469306438 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.473105431 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.474563489 seconds)
  done (took 8.762045878 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.71892793 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.491255017 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.899875364 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.47865994 seconds)
  done (took 9.934773706 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.487703221 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.482034734 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.481762732 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.488477244 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.510296827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.513371438 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.485275715 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.48819057 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.511625377 seconds)
  done (took 14.791731678 seconds)
done (took 56.280614319 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.666832989 seconds)
    (2/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.342717674 seconds)
    (3/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.53725323 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.6328515 seconds)
    (5/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.459333791 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.577893396 seconds)
    (7/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.712161649 seconds)
    (8/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.300627635 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.566418334 seconds)
    (10/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.669265707 seconds)
    (11/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.605454245 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.473520447 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.53190872 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.647034719 seconds)
    (15/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.722773223 seconds)
    (16/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.480703287 seconds)
    (17/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.531539213 seconds)
    (18/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.455353862 seconds)
    (19/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.47448981 seconds)
    (20/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.61391646 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.504949894 seconds)
    (22/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.468802882 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.457873497 seconds)
    (24/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.51239834 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.583490632 seconds)
    (26/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.607915925 seconds)
    (27/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.597157897 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.514164321 seconds)
    (29/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.509616558 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.586595509 seconds)
    (31/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.59838268 seconds)
    (32/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.503616538 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.500341722 seconds)
    (34/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.603524959 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.566058549 seconds)
    (36/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.75440406 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.647415743 seconds)
    (38/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.677311373 seconds)
    (39/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.725281325 seconds)
    (40/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.57423419 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.616395298 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.510550712 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.32030851 seconds)
    (44/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.675269908 seconds)
    (45/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.548039113 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.515200273 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.351405339 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.510530624 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.6015367 seconds)
    (50/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.645123997 seconds)
    (51/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.64271895 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.457332916 seconds)
    (53/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.167171013 seconds)
    (54/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.491160538 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.647861391 seconds)
    (56/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.35358621 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.596494344 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.606666901 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.642317457 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.651140621 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.521127131 seconds)
    (62/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.388018368 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.75778441 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.503723807 seconds)
    (65/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.457010711 seconds)
    (66/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.463370168 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.539118549 seconds)
    (68/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.790337074 seconds)
    (69/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.462045307 seconds)
    (70/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.483258958 seconds)
    (71/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.579559837 seconds)
    (72/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.458902552 seconds)
    (73/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.516068481 seconds)
    (74/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.508972336 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.561246805 seconds)
    (76/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.457035517 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.574821519 seconds)
    (78/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.295364676 seconds)
    (79/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.470455079 seconds)
    (80/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.482836937 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.465405913 seconds)
    (82/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.188896147 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.544346693 seconds)
    (84/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.462123982 seconds)
    (85/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.529886392 seconds)
    (86/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.560165318 seconds)
    (87/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.302731831 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.563853712 seconds)
    (89/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.489476377 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.608361806 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.661239872 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.570762698 seconds)
    (93/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.477250572 seconds)
    (94/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.462189609 seconds)
    (95/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.139358349 seconds)
    (96/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.523014022 seconds)
    (97/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.462772395 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.481899135 seconds)
    (99/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.721282634 seconds)
    (100/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.566856313 seconds)
    (101/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.471952428 seconds)
    (102/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.598216475 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.615842038 seconds)
    (104/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.512619694 seconds)
    (105/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.529680193 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.549889365 seconds)
    (107/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.464455169 seconds)
    (108/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.469129609 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.529369999 seconds)
    (110/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.570617724 seconds)
    (111/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.465480916 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.77064512 seconds)
    (113/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.864858061 seconds)
    (114/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.410931526 seconds)
    (115/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.58437741 seconds)
    (116/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.463197833 seconds)
    (117/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.466423048 seconds)
    (118/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.465611949 seconds)
    (119/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.626422741 seconds)
    (120/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.57460729 seconds)
    (121/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.514827248 seconds)
    (122/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.512774849 seconds)
    (123/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.656787777 seconds)
    (124/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.675070495 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.519961544 seconds)
    (126/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.679152046 seconds)
    (127/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.245478339 seconds)
    (128/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.143344068 seconds)
    (129/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.465958638 seconds)
    (130/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.202764133 seconds)
    (131/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.682187205 seconds)
    (132/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.596130839 seconds)
    (133/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.323326218 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.634681215 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.571587569 seconds)
    (136/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.327762734 seconds)
    (137/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.356078347 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.540901686 seconds)
    (139/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.770409816 seconds)
    (140/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.562112783 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.660124944 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.234361614 seconds)
    (143/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.735404587 seconds)
    (144/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.529634455 seconds)
    (145/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.626302474 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.512539749 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.521678386 seconds)
    (148/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.465858016 seconds)
    (149/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.654512823 seconds)
    (150/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.466640769 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.617703315 seconds)
    (152/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.46229503 seconds)
    (153/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.750122446 seconds)
    (154/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.63853949 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.176004907 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.771131605 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.617626521 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.483991966 seconds)
    (159/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.465734876 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.548654979 seconds)
    (161/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.518826315 seconds)
    (162/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.525827997 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.465108376 seconds)
    (164/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.47210423 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.642882704 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.516868507 seconds)
    (167/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.515518577 seconds)
    (168/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.516662517 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.590449242 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.621387007 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.602523011 seconds)
    (172/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.484738873 seconds)
    (173/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.469604952 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.593727159 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.613815561 seconds)
    (176/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.598249816 seconds)
    (177/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.265518636 seconds)
    (178/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.533178734 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.487492539 seconds)
    (180/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.553503125 seconds)
    (181/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.58996349 seconds)
    (182/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.780744541 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.469877306 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.6790991 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.464641695 seconds)
    (186/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.687761897 seconds)
    (187/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.588723614 seconds)
    (188/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.619769999 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.467799446 seconds)
    (190/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.466951942 seconds)
    (191/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.521945979 seconds)
    (192/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.46606598 seconds)
  done (took 369.770156726 seconds)
done (took 371.112210503 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.508764848 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.573315674 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.492271395 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.490383007 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.493897294 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.487251695 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.50707693 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.49419934 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.502980262 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.504652345 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.488107343 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.493112082 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.50631285 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.499195251 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.525561155 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.492908101 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.493467753 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.498480656 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.504331614 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.50377608 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.494081847 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.494393537 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.513762683 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.492176869 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.504830889 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.503651292 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.501516684 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.490610219 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.495161543 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.501966849 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.501127283 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.497457807 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.506333469 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.505213826 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.49715255 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.5031778 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.495017002 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.576770825 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.510615861 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.504636882 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.498207711 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.504836291 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.501253137 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.499796695 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.50196305 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.514675147 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.507237224 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.509111641 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.502836121 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.485229671 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.510291735 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.505043931 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.501729671 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.484113865 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.492062576 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.508095006 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.502571502 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.511080666 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.500584642 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.498008718 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.529846279 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.515548382 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.5079454 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.503085065 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.498765921 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.508970704 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.505820387 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.508808301 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.498715055 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.498329834 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.501668748 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.500905757 seconds)
done (took 117.627474206 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.618355643 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.497249785 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.63479642 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.500362981 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.656790422 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.623404287 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.502174372 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.502654067 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.498264414 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.289137692 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.503270065 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.500976079 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.495196171 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.500410636 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.622045124 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.499446843 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.499549161 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.189645883 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.502480487 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.635967917 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.495544944 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.503843309 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.505806521 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.292114232 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.496944294 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.495224835 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.637611081 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.502657494 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.189530105 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.49331792 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.495849173 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.193797008 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.639079689 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.521723016 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.511664675 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.508674752 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.65972645 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.506869519 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.620908947 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.618197499 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.639050587 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.544005441 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.494507497 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.496089904 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.507044978 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.505659621 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.503217431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.534161492 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.496031716 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.502684794 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.190735106 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.516753728 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.504881225 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.504124173 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.507480476 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.535748109 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.505256714 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.506390936 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.64326563 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.506974438 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.622716405 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.292922757 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.292595607 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.504937607 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.497070513 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.508182369 seconds)
  done (took 119.387825468 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.566660779 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.579439818 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.622765066 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.501402735 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.551992468 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.623185948 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.499912278 seconds)
  done (took 12.309059273 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.507104004 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.507390471 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.548952956 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.548504823 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.503167126 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.656720036 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.506514809 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.514560312 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.503769439 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.554589516 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.509574559 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.507317385 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.514159675 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.498745041 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.551226453 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.514390446 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.618109484 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.504186556 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.508219885 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.653064585 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.509317923 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.51581256 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.550189181 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.514863298 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.51199491 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.505682696 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.269737984 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.507162577 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.510448722 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.510985412 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.507575743 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.55858612 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.5127461 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.503142201 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.50577064 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.618884533 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.506565713 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.506063997 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.514094403 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.497831174 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.512459586 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.508971276 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.51024838 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.507303644 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.512837914 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.526687104 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.510933346 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.508989206 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.508604376 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.512406087 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.552434938 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.510672301 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.507010686 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.508339928 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.558243252 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.518705279 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.51200162 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.508478792 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.513613674 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.507370147 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.656244972 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.550633054 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.512905809 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.551401054 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.511326332 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.512424575 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.511746897 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.511635044 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.595771551 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.512305572 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.556192023 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.509874592 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.685314269 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.527460699 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.513079223 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.508107673 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.50384591 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.512526999 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.502297445 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.513086659 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.513823815 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.504858333 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.513815919 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.509238812 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.510165329 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.665216796 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.617728501 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.510852263 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.517727272 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.513501455 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.509810933 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.560873481 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.51363076 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.509939236 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.559398208 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.62354188 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.559317746 seconds)
  done (took 154.521232853 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.516292277 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.516555429 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.50826672 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.531617857 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.509291176 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.507798135 seconds)
  done (took 10.458551634 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.511514289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.51625521 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.513712008 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.512931802 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.51546866 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.515912787 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.519094869 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.506600675 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.515254895 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.518307074 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.516771205 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.52100043 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.523674626 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.514752723 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.518230485 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.516738805 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.517300684 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.512615072 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.514615225 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.51340758 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.505212554 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.513552903 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.513334487 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.51131856 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.523384399 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.520132484 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.527451619 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.52088729 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.516353323 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.517282814 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.519799944 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.518697779 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.511148101 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.513091433 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.524144782 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.510419344 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.516131556 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.523693516 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.514459919 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.519303412 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.524859463 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.516886678 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.520592952 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.522815002 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.513076575 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.512132989 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.525906496 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.5299476 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.51968212 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.524015476 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.523993546 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.516354613 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.522095875 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.525250503 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.51286963 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.517287054 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.526222103 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.522896801 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.518752597 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.510903826 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.516667231 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.520742966 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.511989613 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.52540208 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.519487862 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.525432747 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.515747635 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.523594379 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.517832331 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.518636855 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.524818738 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.518013571 seconds)
  done (took 111.672308518 seconds)
done (took 409.707510016 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.945123978 seconds)
  done (took 4.315923012 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.621570482 seconds)
  done (took 3.996113151 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.705319325 seconds)
  done (took 27.087316936 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.525272404 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.523868374 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.519624202 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.513189183 seconds)
  done (took 11.452411086 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.967714713 seconds)
  done (took 4.34382187 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.523416012 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.521707543 seconds)
  done (took 6.423769998 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.846778948 seconds)
  done (took 4.219244081 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.892543166 seconds)
  done (took 4.275323752 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.514646415 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.526821344 seconds)
  done (took 6.428084537 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.492070964 seconds)
  done (took 3.866471213 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.04529115 seconds)
  done (took 22.421012583 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.519712846 seconds)
  done (took 3.899518729 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.554344025 seconds)
  done (took 3.929407347 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.724931326 seconds)
  done (took 7.09868786 seconds)
done (took 115.127829004 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.507540252 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.506812658 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.506415056 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.501147362 seconds)
  done (took 11.396936661 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.575372628 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.575583916 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.581302706 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.571724207 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.574212146 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.574371731 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.561821498 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.547756086 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.578778228 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.572863498 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.579248895 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.574423462 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.576715156 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.559444095 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.572201779 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.579352478 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.575298279 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.581025711 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.548814281 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.57421956 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.523700189 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.575261102 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.574208603 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.524625044 seconds)
  done (took 39.006076764 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.030873653 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.587121338 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.668194692 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.565868778 seconds)
  done (took 8.228980347 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.602059114 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.604871937 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.62606364 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.661190377 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.705779926 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.620800996 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.552090556 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.540271336 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.52989281 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.606843562 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.656606378 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.591810311 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.700084028 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.521867166 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.810714163 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.528004029 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.523847195 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.607168999 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.661046098 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.690246612 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.525849757 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.602612196 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.610496995 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.590834493 seconds)
  done (took 40.047499241 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.528240797 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.5400494 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.523397669 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.538909376 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.524322104 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.523572223 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.522925094 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.527527528 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.521746391 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.52564331 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.523707218 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.534543888 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.521494451 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.522182549 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.530122482 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.525025082 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.522494294 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.529568935 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.53257441 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.525444863 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.523272717 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.528617111 seconds)
  done (took 34.973060134 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.515641066 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.51189865 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.859639092 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.769742388 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.512943033 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.512056025 seconds)
  done (took 15.059830786 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.598917938 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.771024114 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.520987438 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.941506672 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.020188882 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.517173039 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.518660615 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.808353594 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.16399001 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.1730422 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.579883525 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.595773623 seconds)
  done (took 22.589095295 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.524716469 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.517624576 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.521454376 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.530510462 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.585959653 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.525327884 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.527045094 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.51469707 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.585950528 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.588839649 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.52465046 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.58696918 seconds)
  done (took 23.915500595 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607711672 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.523630671 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.518411895 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526529318 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520258382 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365441693 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.540172631 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.298093293 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.523345318 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797925489 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520820789 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610650325 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.780284131 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517409592 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.5227687 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.515378626 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755642687 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099507598 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517650016 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517654898 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575788276 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.542311108 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524710949 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.780837099 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37072653 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522745588 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.782771825 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524144304 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869320987 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84595037 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84802654 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524886857 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793889893 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24345843 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622942446 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77594603 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536544744 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.529075029 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.520973931 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.529054193 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529164327 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529375623 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846500481 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52890559 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.523525983 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534848559 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312831674 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.526575345 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.524395453 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527152949 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846961852 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626617856 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.528695941 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525756976 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595294909 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526318858 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.532102223 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662476627 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090286207 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541529635 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534206646 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.528094615 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.528633667 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550847024 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243277044 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.528565732 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.529792553 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527607514 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526051775 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.521433934 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551848388 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527111316 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.544624488 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527364773 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393228302 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.529113888 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527418921 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170615343 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536533732 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.527102208 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757650699 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526166461 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525620261 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.526574725 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526876902 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364400503 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535351447 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.503345431 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572743437 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.301237361 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.774924204 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548776646 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560110371 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.751012636 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.501221333 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529513734 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.524178416 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531314922 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547095681 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314708736 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52426316 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.526733276 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788913704 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.73458114 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530266421 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.508022302 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079310539 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536635434 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.550348584 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.535287753 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.786277805 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.22945185 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853905789 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543578536 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560204832 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529788035 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421525205 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53045642 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.532071117 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.531470065 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839549317 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.455249437 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531108655 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599303827 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535647036 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.529601315 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532699 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535609052 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.533621647 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.784083732 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53522781 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.856085387 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.535682358 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532291445 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.526896896 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536044065 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.537771357 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.754571211 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537985187 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805066715 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530727668 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53131149 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529207342 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.751035535 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.534289581 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.53989899 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794013675 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539783291 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.54388373 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860839911 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565293205 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640018194 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559761624 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.532958014 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.792646474 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.533714719 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.536378537 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534838161 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.534783607 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532488806 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.536310638 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536553274 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23327031 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531711251 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.534757325 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.532879655 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.54632226 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603416879 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536360053 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.786271896 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.549799151 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529335689 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.559004498 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.536133927 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761729257 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853155441 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.538676219 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609998598 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.078804183 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232666441 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541817435 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.532979944 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.53177323 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.532930985 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535564768 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53402925 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532521269 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783350089 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864110224 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.538680654 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.244739882 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53324377 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.536010976 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.543000806 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854225299 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.54442294 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534651912 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.531764127 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537037403 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535708111 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.862348485 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675228164 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.551396998 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.534401455 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.055527745 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543098142 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.536351913 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.537734495 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56935113 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.539923376 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472209645 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796928603 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539686196 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864341964 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.542626112 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.556166753 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.533472759 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544442054 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548870536 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.551654155 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543801863 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.791510175 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.540871553 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541860059 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092352887 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393375715 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18096446 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537148614 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.533760121 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.542792333 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3812022 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538240644 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538451432 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810484758 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319058556 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533656445 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081231187 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.548736392 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.433061818 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864901045 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772048517 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.536894908 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.538522199 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867406025 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.752522792 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571454946 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546214451 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541666851 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.513857287 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166690722 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543787008 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62186552 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323395038 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54269531 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.541821071 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.597649912 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.559330424 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002926777 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.539106275 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542080307 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.550909104 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.552099336 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470419109 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.541350843 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539018892 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262113469 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.544039254 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.099471609 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535353017 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.79718556 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.869301386 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.863589008 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.552254596 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.545027407 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.791108498 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863353427 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540088519 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.550675172 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189801373 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.403432581 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.547886499 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541499853 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.433674555 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555398818 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895589994 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.549305876 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.540176494 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.555937511 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.539933992 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544090888 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.543707414 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.549389009 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543971666 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124488355 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.536428881 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545162955 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.553681356 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538894359 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.800684244 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.556203332 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253039138 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766164646 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537350208 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572159416 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.547364417 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552512942 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.525490912 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.54507057 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.543925659 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604942474 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.76651193 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.541080188 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.521228459 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.558355194 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.755868372 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545637634 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.553091719 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814181655 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.542949612 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.563947814 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394248113 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56799387 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.550788774 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548303686 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.565455125 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589978614 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613967243 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800584058 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.871225376 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871627867 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012438343 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549888518 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549196294 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.561480424 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642837376 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554409354 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.543459617 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.317996133 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256461358 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427372342 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247489937 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870893526 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.548666368 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.555643581 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546732752 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67876814 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.547289 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82041996 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547380552 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.543297945 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567843713 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560195278 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558381473 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761849046 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820556014 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546403404 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.559355554 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548256985 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.546014379 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875781445 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.759517497 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139117066 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195020518 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540885582 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.544726323 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341067427 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816561843 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545024764 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549330944 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547236399 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.571572933 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.565760166 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.552572131 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.559803451 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684348889 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872125687 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286465803 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.872155312 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.585760343 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.07101124 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55636394 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.805080648 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548487181 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8047143 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259822602 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399036518 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810440449 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615401831 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806090035 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.54766154 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685348209 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.545531898 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544977956 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548372784 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551142165 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.547134591 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.877312312 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265033519 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814290411 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.55318174 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.5498276 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577770225 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.802108184 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.773445983 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.377863467 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.770908739 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88026998 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.559165613 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.551603248 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259694571 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87524288 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552940939 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.551199804 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820041083 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.550933594 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578291426 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.069178837 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.5520245 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215919902 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.440328906 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568834022 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549691221 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398420192 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255482245 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.547868055 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141349789 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550388105 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552626534 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.828177486 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.555912078 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.556033363 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839710685 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.558775539 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.560741463 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811458868 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.26314853 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.450503063 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.576667855 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555241702 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.555276301 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552487382 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577350065 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55613073 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.556477164 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.047697867 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.552971556 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553085242 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561694504 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.559994292 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563417226 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.553236103 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554467622 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.556181243 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.563199524 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.548816961 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.561449037 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687116022 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178176978 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557286935 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.229998559 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.87716324 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.813470753 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.555561908 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.532809466 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.55777677 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554617902 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553192292 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5516191 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.55007081 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206032862 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.556861326 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.887572507 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560860944 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.766054636 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762035533 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.563358703 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813934595 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565492423 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577224157 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.532390545 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557419978 seconds)
  done (took 1067.494665434 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.57018315 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.561939127 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.570831923 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.629185182 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.59071347 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.683672663 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.555251089 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.603037157 seconds)
  done (took 22.173790136 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.558838101 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.553261759 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.559661296 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.55808059 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.555914888 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.114435412 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.555862484 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.551340856 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.571418782 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.560790566 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.548639042 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.351705307 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.58441234 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.556758347 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.541523923 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.554373946 seconds)
  done (took 35.691805835 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.051261652 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.90405072 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.3177556 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.585745438 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.556625627 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.549861493 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.020144961 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.566136465 seconds)
  done (took 29.95998413 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.566223901 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.564274996 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.567863656 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.565779315 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.566693178 seconds)
  done (took 9.241663644 seconds)
done (took 1361.154854857 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.560747503 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.562235056 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.565604255 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.563525215 seconds)
  done (took 7.660864265 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.534258599 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.53107936 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.537723852 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.547866846 seconds)
  done (took 10.560307876 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.414228231 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.300433171 seconds)
  done (took 6.125604012 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.121742925 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.127695934 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.103641633 seconds)
  done (took 7.766001233 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.867672835 seconds)
  done (took 3.279478632 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.552046012 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.567830756 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.298114695 seconds)
  done (took 8.829346017 seconds)
done (took 45.63128673 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.549830685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.800243736 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.70787705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.550611904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.713985926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.762167798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.388807629 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.564168802 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.556982813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.551778969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.547729184 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.713362298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.296797058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.807330605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.29973746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.80547424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.71769895 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.558001813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.549973319 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.550164379 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.385754094 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.553786138 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.574175172 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.547703654 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.713000439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.713766925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.565522793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.802811144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.571832277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.549378454 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.719182873 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.556274026 seconds)
  done (took 88.655999527 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.554324528 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.552968797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.571557834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.567174949 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.567447178 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.550163872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.570190065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.572353992 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.551941041 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.550637653 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.550030792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.55185016 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.56548928 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.550077975 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.569471459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.553051315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.561379537 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.560492317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.550362745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.551402502 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.549708129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.581902514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.565550946 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.562286706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.557561996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.555934686 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.569529578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.568144162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.553156862 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.550363489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.553060065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.581433974 seconds)
  done (took 83.337101222 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.556829385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.559575488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.567646886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.557918302 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.552455989 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.572393598 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.560903954 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.569658033 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.552305924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.560124425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.551227366 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.551824874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.559324595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.558128802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.556653319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.554446083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.557357405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.557277353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.557660503 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.577531445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.556824912 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.559855065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.552988731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.583989457 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.557322075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.553648149 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.574047682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.554121762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.5565867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.569541933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.562482214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.579917086 seconds)
  done (took 83.370774206 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.802697297 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.573812604 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.575946035 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.567720881 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.576509645 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.573451809 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.568941865 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.812012363 seconds)
  done (took 16.469146927 seconds)
done (took 273.244025776 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.56264348 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.150303345 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.585846239 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.566882012 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.583379047 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.591141912 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.819628934 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.589432922 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.823674533 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.582694316 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.579247091 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.567287803 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.529759577 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.727637784 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.492286785 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.561929703 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.571055003 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.577216924 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.244787725 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.88916939 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.588947037 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.561268898 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.476109108 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.562708695 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.539767346 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.679149626 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.680767513 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.812856569 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.746781797 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.663064542 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.174552866 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.568200248 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.568295492 seconds)
  done (took 71.637019737 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.569903276 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.572888711 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.578405629 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.578026588 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.576402989 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.575410529 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.571552265 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.576832433 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.576242741 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.576097758 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.579816538 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.573479131 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.575061605 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.576884239 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.575446494 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.556395867 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.573556555 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.576734137 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.57062526 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.560812853 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.574429217 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.578822179 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.576923319 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.573641094 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.577720903 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.577576709 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.576997995 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.57686589 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.572801395 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.575095099 seconds)
  done (took 48.649639252 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.57690477 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.235141528 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.407354278 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.57297878 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.572106031 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.575366596 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.926783865 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.581020434 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.574815379 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.575656201 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.154872424 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.583284857 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.609454613 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.409836122 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.569930337 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.578827407 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.580321306 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.570904906 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.273230431 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.584944167 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.924964895 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.581489795 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.927596841 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.583239011 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.573751272 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.575044033 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.576455092 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.473007409 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.596994202 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.152698293 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.542590314 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.917970299 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.421675016 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.486051188 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.543598455 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.585236262 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.581515204 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.156966409 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.575007299 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.572997988 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.925254195 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.576078756 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.43709826 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.293937046 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.595921527 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.582720582 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.486535693 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.180389764 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.87228608 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.579201011 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.457509449 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.575149296 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.584122492 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.574257928 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.872872587 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.580207154 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.575218241 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.518548178 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.595848375 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.925727302 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.583755197 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.577017829 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.274064756 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.575695335 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.271891361 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.581051644 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.584143522 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.576060604 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.426575012 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.574964749 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.305994643 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.589247098 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.582597526 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.153947839 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.262995813 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.571714771 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.580359038 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.277594945 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.44303792 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.951262088 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.579877167 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.471335445 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.954629803 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.582284678 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.58893325 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.586687368 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.587907705 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.663398444 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.923903152 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.237519579 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.294337264 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.527681858 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.948194056 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.588859773 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.579811048 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.523714598 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.601345524 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.586224045 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.43239282 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.300023984 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.590212939 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.585369847 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.290745373 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.595831031 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.933977502 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.585588322 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.472503031 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.580218753 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.664981673 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.583510119 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.584193237 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.582482584 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.931125987 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.584560581 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.586559251 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.297517605 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.197064135 seconds)
  done (took 221.026697671 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.576222774 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.568734292 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.579604425 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.567432058 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.57189099 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.582739038 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.57532091 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.574725838 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.577169417 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.572156423 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.574202558 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.581587557 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.579325604 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.570825505 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.576992522 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.5693893 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.573859189 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.57854674 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.571773982 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.573339523 seconds)
  done (took 48.92527712 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.587851151 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.2709095 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.227944589 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.592215653 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.585943843 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.579652246 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.648926722 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.590723961 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.582544963 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.95175304 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.794172877 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.589498145 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.584642086 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.588858351 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.229640642 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.571525521 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.955223245 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.277029208 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.589966881 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.27272921 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.573492321 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.589640386 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.580284899 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.274528392 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.963848777 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.935492981 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.655505133 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.282525258 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.592104185 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.585975023 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.276402462 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.591224959 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.582328973 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.267701144 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.593759052 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.605778771 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.587745474 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.653774738 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.655056968 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.958862082 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.284660752 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.944241471 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.602445897 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.768322217 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.592769026 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.56595487 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.287123684 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.596556637 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.570599973 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.591511687 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.597906891 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.243407392 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.587540015 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.243906298 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.593797551 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.59176408 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.276691249 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.245484638 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.239526326 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.79775374 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.588410219 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.937783738 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.592276291 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.286477162 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.596153491 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.591600736 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.594260328 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.796356236 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.28479834 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.940257779 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.961223986 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.960569658 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.596776758 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.661276095 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.595159417 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.957220134 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.662309041 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.01081088 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.960782538 seconds)
  done (took 145.104346307 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.894308254 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.71622452 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.037867655 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.246866982 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.168697193 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.741527847 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.710702346 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.862787942 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.589548613 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.677026059 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.373174521 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.702805288 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.416123645 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.699204787 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.703432783 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.733805226 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.050635746 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.583484017 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.324787132 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.338535839 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.588333826 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.701821054 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.148477168 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.804739882 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.604447531 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.21226691 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.600834864 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.178498069 seconds)
  done (took 59.847535781 seconds)
done (took 596.60613191 seconds)
SAVING RESULT...
DONE!
