cset: moving following pidspec: 2751
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.903477675 seconds)
loading group "string"... done (took 0.641386601 seconds)
loading group "linalg"... done (took 11.561754527 seconds)
loading group "parallel"... done (took 0.256441744 seconds)
loading group "find"... done (took 1.571951384 seconds)
loading group "tuple"... done (took 2.45949922 seconds)
loading group "dates"... done (took 1.63382673 seconds)
loading group "micro"... done (took 0.229665549 seconds)
loading group "io"... done (took 0.660697897 seconds)
loading group "scalar"... done (took 61.778724279 seconds)
loading group "sparse"... done (took 15.927463701 seconds)
loading group "broadcast"... done (took 1.470953192 seconds)
loading group "union"... done (took 12.192103287 seconds)
loading group "simd"... done (took 3.678072615 seconds)
loading group "random"... done (took 14.103134873 seconds)
loading group "problem"... done (took 2.515817215 seconds)
loading group "array"... done (took 27.462493745 seconds)
loading group "misc"... done (took 1.476143221 seconds)
loading group "sort"... done (took 4.2232853 seconds)
loading group "collection"... done (took 23.83842651 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.846432651 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.161103628 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.276906102 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.425329188 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.296478876 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165927153 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.170527629 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.388126293 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.296333025 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.266504602 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.161734754 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.631603273 seconds)
done (took 6.812738613 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.274992459 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.369664903 seconds)
    (2/2) benchmarking "String"...
    done (took 0.190197992 seconds)
  done (took 1.214663375 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076016612 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.197964671 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.119712175 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.119561794 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.119402131 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.119435404 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.118414305 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.118056948 seconds)
  done (took 1.574354569 seconds)
done (took 3.808755741 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.609870935 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.950672842 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.573623605 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.195928446 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.354336199 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.461092584 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.403426664 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.217866075 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.111811208 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112019449 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.206342749 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.397482827 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.546264219 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.082653106 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.113085561 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.112984952 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.145380501 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.797278475 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.094088123 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121703506 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.647941262 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.229034121 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113407313 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.118481261 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.201994734 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137410259 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.18070559 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093481376 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.684976728 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133234717 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.212648887 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100070558 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.179078274 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.260388949 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.260730359 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09358628 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682132568 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204539702 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.121616195 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103132123 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659236757 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.229877164 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.182983218 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110363702 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110777147 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.190742197 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.123609488 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094197821 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.118763933 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10443678 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163718952 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460222672 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.09399374 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.182183641 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092446068 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.697684683 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10051287 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.299718854 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124632996 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.112607837 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090579925 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.092246368 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.17552285 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111913438 seconds)
  done (took 21.800895396 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.183072419 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.200947533 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079961661 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163734304 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1567255 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09951601 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086950332 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096275358 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.13918026 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.262932294 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.149208415 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.206531139 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076677403 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.105199085 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.156197046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.261621517 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.129200626 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.130706513 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088452747 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.112562604 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.149354848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.120101586 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.1153973 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101160274 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.192467554 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206515694 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109576014 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.1225615 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100095519 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.12186138 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143116008 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.170366313 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077509188 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.101402218 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.205956372 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12043746 seconds)
  done (took 5.724314127 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.260602432 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.109207859 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.274240996 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179700326 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153978236 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.191766331 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154808471 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.33423309 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.310980107 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167082502 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.134733987 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129234001 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114405113 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095817627 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086433395 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097260045 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095337758 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.870634328 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.193226481 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155370031 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162053873 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106209962 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102508489 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.390526784 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103323638 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08552199 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10493716 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.09364069 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.241761482 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085798103 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.339713336 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103824921 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109733999 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130498781 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191545431 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135338409 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150846246 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083520971 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098260762 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.24534779 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116752554 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078369983 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134240398 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133394109 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137508738 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09969188 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095038015 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.254802496 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099039091 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.132011161 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.235176171 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.202061065 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.14709225 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101744713 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.348939864 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116855145 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091120461 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10021667 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.340766129 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141917077 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079609076 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097418652 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100858386 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078339007 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.45995006 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112613127 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.833001041 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085652155 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.196438548 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103855502 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090311676 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103260854 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102016075 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102971918 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097100121 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078322898 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096856805 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095307435 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084773046 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.189550598 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.121640309 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084978201 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098279109 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147386895 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112535254 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116902205 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12473819 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089580901 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095993361 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12774155 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080952581 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101234735 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.187883163 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109004878 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122572276 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098405777 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102333789 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126632561 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096278133 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.233446001 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082071666 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128991878 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100689053 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127387804 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11759579 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097862004 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084538237 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094957617 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080135827 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162869191 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080564015 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096239205 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103585282 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113042529 seconds)
  done (took 25.169291773 seconds)
done (took 53.355978067 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.623627699 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.145044538 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.12799559 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.126181323 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.126270612 seconds)
  done (took 1.895976174 seconds)
done (took 2.609052884 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.41517427 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.216700199 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.128661429 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195118037 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108014163 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203364959 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.201626484 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119858044 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218572266 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100987276 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.216157331 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083769521 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107874625 seconds)
  done (took 3.05751786 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098552195 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.132357448 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.11766704 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098556939 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095034338 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097345543 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112081912 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.130164612 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096467372 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106640655 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095502769 seconds)
  done (took 1.890849181 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095362906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124296979 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086898004 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1119897 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09710966 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09460186 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113623666 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12661832 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096183843 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108243655 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078686133 seconds)
  done (took 1.844028557 seconds)
done (took 7.498026768 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.512818437 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 14.061349065 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.157806858 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.231764042 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.420352694 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.29523507 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.829590235 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.177440979 seconds)
  done (took 18.594297091 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.190430065 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103007273 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088011759 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102083757 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101713637 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08726749 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099989065 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085642464 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100519226 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099344744 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085944068 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10182958 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08702505 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100514317 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100625521 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085614415 seconds)
  done (took 2.406624993 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141598754 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141337661 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094627897 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112715255 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.107374971 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.09259992 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110006859 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.108745816 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104875098 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091955498 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111391955 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110563654 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095952289 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.103982499 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10842412 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112085316 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091257165 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109091228 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109927173 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095827435 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110468613 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.106649131 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108867314 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.095993176 seconds)
  done (took 3.390979364 seconds)
done (took 25.105172841 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.192268202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099819357 seconds)
  done (took 1.01432155 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.161605117 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.162995124 seconds)
  done (took 1.051839843 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.133038024 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082790301 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.163643055 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108116092 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.099394222 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097638569 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.143611351 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098601157 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084072762 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098563725 seconds)
  done (took 1.838264817 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089228037 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103687562 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.114496097 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.160792542 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114225079 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.090205705 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10509661 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103846991 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.091598944 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099428167 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.109235501 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126728373 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108222397 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128963014 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089811158 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.111124083 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116579952 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.107523817 seconds)
  done (took 2.698864831 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083838277 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100289393 seconds)
  done (took 0.912082272 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091295748 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100489159 seconds)
    (3/7) benchmarking "month"...
    done (took 0.105735403 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0905126 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099997771 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098729652 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.085898743 seconds)
  done (took 1.401307646 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.764397801 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.351733486 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.601626515 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.126236099 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.197168379 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.577963367 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.200573976 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.121719356 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120156818 seconds)
  done (took 3.836281496 seconds)
done (took 13.482532998 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091539524 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.24719803 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.760120411 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122910525 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083685357 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155950398 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.367956954 seconds)
done (took 2.566065048 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374007947 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1687296 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075369882 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095561628 seconds)
  done (took 1.445013751 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077976177 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107670144 seconds)
  done (took 0.924325645 seconds)
done (took 3.113404104 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083355397 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094766975 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081251367 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094927412 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.134100543 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.081288921 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097530684 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080612344 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096307073 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080867106 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096517089 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.09554285 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.08085632 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095074516 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081028823 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095166169 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080750825 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095494695 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080810321 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0953616 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080933032 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095135526 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095677787 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08128074 seconds)
  done (took 2.949896096 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109930193 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100727295 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105168824 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.105784533 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091357458 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104827468 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104734674 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.086451789 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105889937 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099535417 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092405603 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105792382 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100037404 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.106105864 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085096781 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106436358 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104847375 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086730506 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100279417 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10679681 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089963989 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100769383 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105682132 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090658126 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106230033 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105950577 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086267489 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100854096 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105517043 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.105854649 seconds)
  done (took 3.74808474 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091310916 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093499589 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082593349 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104298951 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079470034 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098495139 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094082036 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080755482 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098786319 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.082112527 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.09992755 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082111111 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095004761 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099643071 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.084608604 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102141312 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095067596 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095602674 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079475463 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099094984 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099725305 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079675011 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098096897 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082267021 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097518872 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079874423 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097649928 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08200638 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097591313 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097848296 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084683655 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.102193649 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082312456 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107795567 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101616678 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.082532592 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10269398 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079307193 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099349903 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08037834 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093719716 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096547371 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080500832 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105727845 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082267553 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098216564 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080083823 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099929663 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098535225 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.087464912 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094766639 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079471503 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100619007 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085780493 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100763255 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094132597 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083443166 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093107794 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085146292 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096998043 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079667209 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093892109 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101838296 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083784736 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117053115 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105721423 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079513054 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100726788 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084270013 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.102748914 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.087178566 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11114789 seconds)
  done (took 7.404666879 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0985993 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111869599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086403259 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103291723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099407398 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083823477 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108159668 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098855819 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085557416 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110640004 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099323674 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085200385 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100499649 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085552971 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099142833 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101124604 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094450547 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100068518 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084473949 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100356589 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098828571 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093792807 seconds)
  done (took 2.880066078 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.278281301 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108244507 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1569798 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121370728 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.125839838 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.240900295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089953234 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105961274 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104461063 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111627055 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097088392 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104984862 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126630405 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111621301 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111530637 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098990414 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105256884 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113982457 seconds)
  done (took 3.065399006 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105272322 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103604639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127228623 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086931418 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102485685 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101712888 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098107569 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118779288 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102512652 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.1019353 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099809247 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10199995 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101997854 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087453975 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102248124 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087300304 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10193586 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10175889 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11456389 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096742033 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114217856 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11513456 seconds)
  done (took 3.026482827 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105004728 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102011568 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.140286458 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107686968 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085207954 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099756644 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093962759 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101921776 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111421156 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086382045 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10225764 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099966257 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.096959536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101154893 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.11252797 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087378512 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101037562 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102667051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086436541 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100730045 seconds)
  done (took 2.777453485 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194482961 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118924926 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102230092 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131988428 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115668153 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116106737 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132173599 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101555077 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116315165 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135887099 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116962557 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102141302 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131580848 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12705599 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117107548 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132738504 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132676858 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133377757 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102110915 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117745101 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136422205 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118621067 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132202518 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101390142 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117122996 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116946309 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102210191 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12665826 seconds)
  done (took 4.185242486 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082452055 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099013576 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083016529 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098291026 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082730144 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09931775 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.084060134 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098191112 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084057232 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097385777 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.097881763 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08359446 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09722368 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082559039 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097746022 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.083288387 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098419567 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083273205 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097859734 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083645034 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097347115 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0987192 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082710405 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098172972 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083461942 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098528483 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083348744 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098629226 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082980178 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097531428 seconds)
  done (took 3.492994477 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097702595 seconds)
    (2/2) benchmarking "in"...
    done (took 0.113651011 seconds)
  done (took 0.971721904 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093067684 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121885696 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.098829771 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085049292 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113110973 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085579478 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113499508 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112639196 seconds)
  done (took 1.580838227 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.19366384 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.165599638 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.108343271 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098630246 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.178934851 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.174983365 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157779364 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091746668 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102838869 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094861179 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157294177 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080672464 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104698215 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103042985 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107143371 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112313567 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101682661 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.094692751 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1095465 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086547142 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10598417 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114076885 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108532383 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095634793 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097630843 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092821131 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110664559 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.114377359 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102009564 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092723372 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.121062506 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084767819 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105045661 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107555208 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.085600597 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160828031 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116979527 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.123890084 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090131663 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107337528 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111312981 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085918395 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108279752 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103525294 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094258288 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106871806 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.107727904 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085497281 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097754901 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081383132 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.10167802 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101105849 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084645934 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108387429 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107158048 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099046996 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103660248 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.082599605 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.099808178 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.100723776 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088887348 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102507638 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109218238 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.088740374 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102753591 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10689852 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09014291 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.102068802 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.086751578 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101939253 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106854092 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116517638 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109512942 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.107876013 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092120807 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102002745 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103478665 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092094788 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106180793 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108519616 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090129687 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111381563 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088312027 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100885282 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102096376 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092230432 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.103601878 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104861857 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078652074 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118437852 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086933469 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102380693 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099039325 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08831862 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.119444892 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.089568242 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098184675 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107745113 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.083286373 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108905067 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109062239 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082864224 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110371124 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09243667 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108762322 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106814768 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15652691 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103891637 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084396178 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.104972636 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091926791 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100055115 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.115747451 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.083574912 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099346234 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08484416 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108422258 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107909136 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08641574 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.1080322 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088185449 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109367066 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104213339 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08418464 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101589711 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091168005 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113068565 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110648747 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087974378 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.103396009 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.104030059 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091012817 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107163874 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109582479 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092409873 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104720275 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.085976723 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103407332 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10741658 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091404057 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103031249 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106019106 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092328241 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106470717 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105917063 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092268408 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102330895 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082040109 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108128131 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103228146 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.086685646 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114812413 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103139109 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.088175307 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102405706 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114362401 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086354789 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.109038758 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087750306 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107570988 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109490307 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079232284 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104431452 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087532098 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110811863 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105156191 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08722092 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102244622 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109634818 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082928704 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106779538 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08128502 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.100545559 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.109731821 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.087003765 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.106595345 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085807841 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123045701 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119477053 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09339443 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10779677 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.106975167 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.090135094 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107572621 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107696541 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094321577 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.110165378 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088891667 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105035135 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109618569 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08291856 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.105763547 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109536807 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091924902 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098307747 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086792049 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097314567 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091035848 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110510638 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10864721 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.092811407 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105025292 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107572619 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098137415 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.122220268 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.108550041 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081852474 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109586971 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096766695 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110697282 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111494737 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092507684 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106757012 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.104855962 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098089259 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1061322 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091394119 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112712558 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100495565 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083108859 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.110565417 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089796849 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103045444 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.102617285 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092854529 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112121317 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106084976 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082494868 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.110273662 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114210467 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085065338 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109469716 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086211926 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107010226 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118392784 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083407063 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103375371 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112106258 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091748279 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.102316253 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088460317 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.11352589 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.109180683 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08910365 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.106413486 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089091495 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110126991 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106643322 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.084937191 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10445156 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08858466 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100834751 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.105525516 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092340065 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105712806 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104661468 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096759434 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111712039 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.111111522 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090288762 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.109341925 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.093267374 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.110172988 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102374106 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.094161562 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103235468 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100571859 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087069274 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099648844 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08731057 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10643235 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.092960916 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105354148 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108519517 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.091061398 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110782339 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106502057 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.092844501 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121934966 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101303468 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083809955 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105632826 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108775915 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087638661 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105482639 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.105904755 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092012533 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.109020793 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112614438 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083158884 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103391353 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092298606 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104594411 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111005948 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.094603175 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111323982 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086510324 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108617374 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105240593 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096688004 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101627724 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108520521 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090441149 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10909229 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106201973 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088984182 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104318526 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083186634 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104731187 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111462714 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083685383 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.108685532 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089619884 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106316058 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101101643 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086191851 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112095795 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084414723 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.110915046 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.103976395 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084117659 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101283168 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.092980249 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108706412 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.111907164 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08610141 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.107142685 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112504527 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089222686 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.104322717 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095892932 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112069562 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.111151753 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098184665 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098771931 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106758311 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09886833 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.104074366 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.090226747 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105089573 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101852499 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094544524 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.111272215 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109415639 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088761718 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101268106 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.086575579 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.110818462 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.107587183 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089316179 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105853927 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093020741 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10280508 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107797337 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.09226679 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109281276 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095443651 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108708678 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108093276 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087428767 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110585812 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104011356 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083687325 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101637476 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088527871 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.112482707 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099676113 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09187158 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.109062456 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087755033 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106630126 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.109310342 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086448575 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10856932 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091194666 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10469348 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116937821 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.087673288 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105352717 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.091818928 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109314866 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101852482 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087532297 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104331474 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095697249 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107423976 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.11075745 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091722664 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109421767 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.106679553 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.092115051 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.110608689 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.094215839 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101471501 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.113485223 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095550665 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.106331348 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106483655 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088908826 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102043237 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090005728 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.112189773 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106031878 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09759117 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.111473408 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107590916 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089113966 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.110896777 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090986604 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112661972 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103004775 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091230408 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102326928 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095388643 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107284268 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.112611579 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087970505 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.102386354 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109959407 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091977666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109323337 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094686974 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.111704785 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101638114 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084459295 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.106289238 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088671824 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117047978 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105443384 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090069271 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108975235 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.106856822 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08711625 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114150436 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085040165 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105006025 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110217382 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091300022 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10311328 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084448872 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107922844 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108578888 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092267998 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108844857 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103291734 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090927458 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.113026574 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089664979 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082188622 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106039121 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096235258 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108161756 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105424438 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084187984 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117406961 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112357394 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094500446 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10273778 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092732328 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105473951 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.106414764 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.094917791 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106959701 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109979681 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089273011 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110692478 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117781502 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083125154 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102999307 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100125089 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109488835 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11197478 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.089126795 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108457889 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113478711 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094961989 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.109847471 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085519554 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103327394 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104020588 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085038239 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.107255016 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099841883 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108926155 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107322257 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091419892 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10847671 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.091164082 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.106372198 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102520175 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096040908 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10702705 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114685339 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083969827 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100258042 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.089915059 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111112633 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087226827 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105987462 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106088025 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.089194289 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103420679 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088885358 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113916715 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109178824 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.093300778 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109336392 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108380719 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08936906 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119019573 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087504115 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106515416 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119745021 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.095471434 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110008586 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110125874 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097836644 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112061593 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.107079942 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.094889368 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107905726 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086702996 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11340823 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.11350957 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122898568 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091208645 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101000645 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.091447449 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104521801 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086099517 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114746977 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114505996 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.095656824 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109162473 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106922329 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096632527 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108219451 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110417691 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089305275 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107634097 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.091846628 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107019408 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.109737686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088302283 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.114721636 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.095657458 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110316141 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115163168 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083430366 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118283044 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113488855 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.096619436 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105114873 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085708548 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104054932 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.108374563 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095489171 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.112275523 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090965373 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.108622055 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09132692 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.111158507 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110513857 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089408482 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11345834 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.110920257 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.087469518 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111977615 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086248678 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104786001 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10539207 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.094187673 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113524371 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112216822 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101172926 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.112604592 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090379348 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106571492 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1107695 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09060665 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11085293 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110909574 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088254531 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104229826 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093242867 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114232672 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110062465 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096226528 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11753853 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108610297 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094375353 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116774502 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.092775808 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105712951 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111174001 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.091856553 seconds)
  done (took 61.596407492 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.171920466 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097924957 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107883693 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107823839 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141314317 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091788491 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107452956 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110092634 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091258216 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124237848 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108271601 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089608723 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135767392 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146842249 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.158271006 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107252508 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107046488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11098972 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089669794 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110159671 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135258323 seconds)
  done (took 3.262506278 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117419654 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.129477792 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12895692 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.134015194 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12031444 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128206941 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.129389719 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127797762 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.134082791 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104599098 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133070468 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126928387 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122444228 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.12310014 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122495198 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123332902 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.13359892 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101495684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129933827 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.129494701 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122551547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129689115 seconds)
  done (took 3.560069557 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097719441 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.111219708 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09494939 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.107480786 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.092859071 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.106908051 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118996908 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088731916 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.118164061 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.107897495 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.086220022 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.107032694 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.091175424 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.10782449 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.088196867 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.106584983 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.117717116 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092700429 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.114278388 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.090268099 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127346192 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.108447935 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.090198903 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104412307 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.124013182 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.096220811 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.107594793 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.093393748 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.103605209 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.111852823 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.089343393 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.110698021 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112154469 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086947617 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103495238 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.093316974 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.111726012 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.089872828 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10738481 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.105279536 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.090588887 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.112321619 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097511856 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.108454171 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.108218187 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087508814 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.112045495 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.08979708 seconds)
  done (took 5.741018703 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.153476217 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.174601932 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.116748021 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.158962362 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136520177 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.128644639 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09496028 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159390214 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093658658 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.115426386 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.138714047 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.137570817 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116481658 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102464719 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113925399 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116759751 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100325322 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096094744 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124603317 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114902934 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106035359 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.117934234 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.134702668 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.136746839 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119964578 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.114642485 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.097150907 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.120391366 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.134467982 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126883252 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.121914809 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104526775 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.136666159 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.120808648 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.115279476 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.116330555 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.137987605 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.09872161 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.117539416 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.113223584 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.097606747 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.121960038 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.119157542 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.139347798 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118129083 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101300908 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116986979 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.111397964 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.135237955 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097863901 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.128012042 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.138212161 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12033319 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.117804243 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102972864 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134990473 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.116215279 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.113534116 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.100492363 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.134890169 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.113049347 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120256557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.137342768 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116261645 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107490999 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.137966001 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.120611932 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120283244 seconds)
  done (took 9.212625897 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126670408 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.122247582 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13776646 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138519021 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124720377 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.121288864 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102323003 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.12090634 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12203719 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.131422034 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102509818 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.24444423 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.116965476 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130124351 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102448579 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120988503 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120729736 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121339499 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10195149 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120867907 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.121601805 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13755422 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.121945262 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137469685 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140572667 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098579018 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.120713177 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120543849 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13745595 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121578873 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140321767 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12143878 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102339736 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137450001 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140533932 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.121578866 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111765691 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103140679 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.121862538 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121941586 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.116791923 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13750583 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102441116 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.116296455 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121320139 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103166286 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.137475091 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.158474678 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110953103 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131322507 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121403663 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.138325248 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121593626 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122040089 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.137138406 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150824554 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137846838 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137766291 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121925951 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.138093697 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137691508 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.15054674 seconds)
  done (took 8.682556718 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089798104 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108383167 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090069497 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.109389585 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089387338 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108579815 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090330258 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108638693 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090040338 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.108531864 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108545168 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090115582 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109318356 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089766835 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107970305 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090265037 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108833755 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090137416 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108589835 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090015673 seconds)
  done (took 2.811256323 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.104394964 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.137686236 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.113947304 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.125239653 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.095529162 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125677318 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113105899 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094960236 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114815998 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095189872 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.128366297 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129352111 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114468313 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124459048 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129348374 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104553484 seconds)
  done (took 2.682926027 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124193486 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13898761 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.207176833 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.096824243 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.115793125 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.123909758 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.094354729 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.114695746 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.111655315 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101925414 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.118772122 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.118182766 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.09462861 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.113074269 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.094048912 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.120037661 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.112207184 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.099031647 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11416654 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.186321265 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122415934 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.118441959 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.096437058 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118326325 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.118282084 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.102373674 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.122121068 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.11438799 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097147767 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.115015678 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.119033349 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.104891104 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.112921764 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.119615027 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.094038829 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.11501357 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.094277227 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114121921 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.119720445 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.094768139 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.115333827 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.117848325 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.094524235 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.11738088 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.111780023 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.096045432 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.1125734 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.102806606 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.116229911 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.118552883 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.095502277 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.120326171 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119464269 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.125674989 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104544023 seconds)
  done (took 7.115695939 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110113681 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117257304 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130490237 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091643366 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116245236 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.117034259 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097235157 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11734145 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098398949 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110480485 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117760331 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097588131 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117227288 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116718414 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09792523 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11685923 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.110321119 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.097721991 seconds)
  done (took 2.81336648 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100018644 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114484169 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100735235 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114301725 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.113688485 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094688013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112246325 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.092648842 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111704636 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.113711616 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094937716 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.113677824 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092621586 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.113286718 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113809998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093903265 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113952816 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092449246 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113720229 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112332717 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094975549 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112477823 seconds)
  done (took 3.164276437 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.108171239 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.204929241 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.104350654 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.218128651 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.092439184 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.112249011 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.123543751 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09255552 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.135301739 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.112118196 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091609002 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.111324764 seconds)
  done (took 2.336060457 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122710812 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159054494 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11683128 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095476169 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130875631 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122755705 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122794981 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122551032 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116808268 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162475851 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102800323 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137755167 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137114263 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139268676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130535768 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131824916 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122169503 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102472584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116324183 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151187964 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123056401 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137921157 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122001469 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102869856 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122509656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13923163 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137223885 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14342993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123626529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137354694 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130045879 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102244859 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138442776 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142308268 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114806352 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137979525 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122560832 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151034623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130539601 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138685474 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095191341 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130290085 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137643207 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133854944 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138009548 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122652601 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133060423 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102232448 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123195685 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16111817 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130475424 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139116202 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131715861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137442645 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13823705 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161558122 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143406678 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138510932 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130378112 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14222203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13915458 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130747742 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139289016 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142365391 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131611809 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140180706 seconds)
  done (took 9.474665534 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165848834 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097279395 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124237137 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144147186 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141321921 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123593544 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122747747 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103243916 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123370407 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117377279 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179786875 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123363279 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140240665 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139433487 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103051281 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123203123 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123043364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142654108 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117765559 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162488264 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122611234 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138939685 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139189284 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139142222 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143649176 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131654202 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103829584 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123687967 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123333181 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12351818 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113221677 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123939978 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140332045 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117103592 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139809887 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123304584 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104094837 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134556264 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123760808 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131431054 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140108401 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152062883 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123490106 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10383687 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142498174 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123720382 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123859157 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11748085 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102694106 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11833623 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143658349 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143602613 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143952209 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140928038 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124385028 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123232381 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10368692 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12375846 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123522675 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131168913 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138950906 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103932733 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1816303 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123749933 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103453676 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141003862 seconds)
  done (took 9.343581196 seconds)
done (took 168.616273128 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.170191243 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191697546 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.167527644 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175871094 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087943697 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.145998592 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.144563445 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.167004889 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088474206 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109454707 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108689532 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093605896 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.176972831 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.088746972 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108607037 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113621821 seconds)
  done (took 2.977436505 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.225848586 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.364780048 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.133307817 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098671056 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.119741013 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112642886 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.098454482 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.121962567 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.113789682 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10510888 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11262824 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.11260925 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125267464 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092636445 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.113806788 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091763527 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125344867 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.1119142 seconds)
  done (took 3.22477303 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118134699 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155509821 seconds)
  done (took 1.119826288 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130213484 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.220883563 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.342011007 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165573146 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117889487 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14165527 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.167888201 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129919674 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.209606169 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137898753 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.137679358 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114221762 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146387311 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.125404304 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.10843877 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114043303 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.149506714 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.127923337 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.105108589 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120861646 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144296609 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.118906444 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105028199 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.128215335 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.199856223 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138117817 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.119830649 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.118062703 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099381196 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.126016677 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119425062 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139351558 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.13730104 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193942224 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122277829 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.210495567 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124988538 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097053484 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.126280751 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116747931 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123248355 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102584285 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134235915 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.114059876 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.097420463 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124004615 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.118361594 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.118214158 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101215035 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127834077 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122460091 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119576498 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.188298094 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127429502 seconds)
  done (took 8.263939348 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.915741882 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15967271 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115844492 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.057470708 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145645803 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132610429 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.893790119 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.141206451 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.29138304 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.901095912 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134723414 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128223898 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.280956356 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.351973534 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.702460546 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.444348891 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.772183801 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131722155 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146661847 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.171487764 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127320528 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144365492 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141193394 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451620443 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117418905 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09394989 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126507617 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128179165 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.210426354 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093849129 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121841337 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.239251421 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.364231789 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.247731113 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096439502 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113410886 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112865779 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.202045771 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.341878757 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.265647943 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.219961583 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090469561 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11380683 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123832735 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139753043 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090195957 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.214566393 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.230302598 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.210376164 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122085516 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128694227 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129397075 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10315126 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.212901509 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112988563 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.444067612 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.468650182 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093347226 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128547184 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131577019 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.33553972 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093464628 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.298800883 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148211008 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.259973998 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113603761 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.868864909 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.223164613 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092947767 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121644496 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124917931 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124071868 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102660114 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.209200669 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.423810397 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127937607 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100809527 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114259781 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264885504 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.11453088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093234036 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.21498851 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117595954 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106354175 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130975902 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128909212 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.228501006 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.328587331 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129321015 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12756373 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124124414 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131511515 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096682724 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.265281736 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.285904551 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.18957372 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.267600057 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124610535 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.19545183 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.222811512 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127914648 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.228399838 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104977878 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131562678 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122874836 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.263249669 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.182894184 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.094391571 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123372741 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127757449 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.165166802 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.118317077 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106899288 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.22713544 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.51951118 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.223102298 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091006576 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.120372585 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130154999 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192336123 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12609103 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.329230595 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108503139 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.224345176 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12754864 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092017534 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12706961 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.215765256 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126052481 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127990004 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104061478 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128472953 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.350660063 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.267864085 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128745595 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.28390262 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.205620424 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123171995 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.230935948 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127138957 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200080245 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129423531 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123901316 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118780891 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.866361559 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133772976 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126435167 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103302087 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.229847678 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094089005 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116023546 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093434534 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111259201 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852830436 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119571513 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.090934325 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.116179754 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122414856 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127254474 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107424657 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123927873 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.214702821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.285783077 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129517018 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125931341 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114570364 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.19165781 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119158884 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094062595 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.114773477 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115727328 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107488299 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122759465 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116540176 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.204035495 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.209943128 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.291070751 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.660042922 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116130996 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094247806 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306811291 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094215557 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.426896668 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128961439 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.280016803 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.221456194 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112506939 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.44582133 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.221313638 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.211603461 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.120088485 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.229642569 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091904056 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128095902 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.213290849 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093892351 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125852606 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.21056718 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110909225 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128835068 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.70685183 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093926943 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.284081462 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112797771 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.20613681 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119396463 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123505999 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.404121548 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116175998 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134764123 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193737734 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123428529 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115649141 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.886246433 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094724322 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130701315 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124131931 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.292073132 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.197324121 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128702462 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129411605 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129005077 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.196519625 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.267009233 seconds)
  done (took 51.617354996 seconds)
done (took 68.044785078 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.338484013 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.29414202 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.35595127 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242468281 seconds)
  done (took 2.214017466 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.255822625 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.190656675 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.211570041 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113351989 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.219579089 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.113632804 seconds)
  done (took 1.977259941 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.581740165 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.457679124 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.394065975 seconds)
  done (took 2.310210142 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.319152777 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.315709668 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358897602 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.560860107 seconds)
  done (took 2.544361239 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.307608077 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.144619902 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109824066 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.202091554 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.267159643 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.228868097 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.159867068 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174885844 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.138941785 seconds)
  done (took 2.663233809 seconds)
done (took 12.586637658 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.423885688 seconds)
    (2/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.412364263 seconds)
    (3/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.170980754 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.475274407 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.296693169 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10088997 seconds)
    (7/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.253514809 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.131362515 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102670623 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.159187901 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.162504421 seconds)
    (12/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.107591032 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100261435 seconds)
    (14/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.258089513 seconds)
    (15/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.262171949 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.250464133 seconds)
    (17/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.322197129 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.426414438 seconds)
    (19/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.284361041 seconds)
    (20/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.294850725 seconds)
    (21/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100985086 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.13476093 seconds)
    (23/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.273664696 seconds)
    (24/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.129264974 seconds)
    (25/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.291700186 seconds)
    (26/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.289670665 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.188274846 seconds)
    (28/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.227624959 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106579928 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.166390352 seconds)
    (31/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.288784042 seconds)
    (32/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.23662771 seconds)
    (33/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.08448532 seconds)
    (34/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.12529229 seconds)
    (35/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.210053655 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.102414012 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.13571181 seconds)
    (38/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.235288777 seconds)
    (39/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.194364282 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.159443781 seconds)
    (41/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.093258409 seconds)
    (42/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134735362 seconds)
    (43/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093015204 seconds)
    (44/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.105856657 seconds)
    (45/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.224578759 seconds)
    (46/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084934862 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.221572887 seconds)
    (48/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119641958 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.127164686 seconds)
    (50/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.213809273 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101125362 seconds)
    (52/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.192130892 seconds)
    (53/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.279223216 seconds)
    (54/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.233487062 seconds)
    (55/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.198661151 seconds)
    (56/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.287841836 seconds)
    (57/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.211998933 seconds)
    (58/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.210867991 seconds)
    (59/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.195235837 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.123180267 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123899003 seconds)
    (62/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104565128 seconds)
    (63/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.10732548 seconds)
    (64/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084707638 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105633581 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.160860964 seconds)
    (67/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.259208493 seconds)
    (68/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.167539328 seconds)
    (69/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.300526984 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118509306 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.161314408 seconds)
    (72/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.107987742 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101381146 seconds)
    (74/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.12145054 seconds)
    (75/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.084003865 seconds)
    (76/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.125021145 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.140663766 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100601401 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.142069957 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.123423134 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.247812793 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101909561 seconds)
    (83/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.124151057 seconds)
    (84/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.254789933 seconds)
    (85/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.086553998 seconds)
    (86/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.228604795 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.123643797 seconds)
    (88/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.238662405 seconds)
    (89/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.254851847 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.115133312 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.104894747 seconds)
    (92/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.109369428 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101451911 seconds)
    (94/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.105946364 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087385213 seconds)
    (96/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.105839467 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.112009734 seconds)
    (98/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.21097234 seconds)
    (99/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.106497466 seconds)
    (100/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.08623137 seconds)
    (101/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.107556381 seconds)
    (102/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.086187322 seconds)
    (103/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134256994 seconds)
    (104/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086714851 seconds)
    (105/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.126709367 seconds)
    (106/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125513593 seconds)
    (107/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.176428847 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.10668512 seconds)
    (109/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.233170735 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093658299 seconds)
    (111/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.109445683 seconds)
    (112/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.085734393 seconds)
    (113/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.117528693 seconds)
    (114/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.086924567 seconds)
    (115/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213586172 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.130438295 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.103460014 seconds)
    (118/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.193285481 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086582183 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.124682845 seconds)
    (121/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.085041696 seconds)
    (122/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.117515359 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.108679842 seconds)
    (124/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.105801262 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087368917 seconds)
    (126/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123144825 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.233299847 seconds)
    (128/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.084413185 seconds)
    (129/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.206803073 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.107987294 seconds)
    (131/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.184330747 seconds)
    (132/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.103581654 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.143528271 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.142210174 seconds)
    (135/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093726484 seconds)
    (136/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.107306054 seconds)
    (137/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.102549945 seconds)
    (138/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.117848995 seconds)
    (139/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114617111 seconds)
    (140/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.241868145 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116431685 seconds)
    (142/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.228179384 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.12639772 seconds)
    (144/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.095345328 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125353926 seconds)
    (146/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.084942328 seconds)
    (147/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.106799025 seconds)
    (148/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.086790717 seconds)
    (149/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.204768907 seconds)
    (150/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.127602284 seconds)
    (151/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.084345031 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.126820188 seconds)
    (153/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.084440827 seconds)
    (154/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126009684 seconds)
    (155/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.451096868 seconds)
    (156/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085678635 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087430019 seconds)
    (158/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.110574513 seconds)
    (159/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.085861209 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124872524 seconds)
    (161/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.125115845 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085846495 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11575289 seconds)
    (164/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094096044 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124703346 seconds)
    (166/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.125645685 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.104579027 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124311273 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.142810883 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085187283 seconds)
    (171/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125028869 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102867291 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.124933314 seconds)
    (174/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085730051 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116196731 seconds)
    (176/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.1086902 seconds)
    (177/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.085782445 seconds)
    (178/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085724023 seconds)
    (179/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.108223802 seconds)
    (180/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120085768 seconds)
    (181/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.086073301 seconds)
    (182/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.126671083 seconds)
    (183/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.085239973 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.141658277 seconds)
    (185/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085640021 seconds)
    (186/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.107673848 seconds)
    (187/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.084649071 seconds)
    (188/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.115886758 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102356728 seconds)
    (190/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.106612761 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101899105 seconds)
    (192/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.108477602 seconds)
  done (took 30.207969505 seconds)
done (took 31.093680992 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.252715769 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134959371 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.129166489 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105457238 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.200982707 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131775679 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.139111041 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.132358837 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.110125186 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.124399883 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118607166 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.111452812 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.128894959 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199642964 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.132644844 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121055044 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096445137 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.134382849 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.13685506 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.116452388 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.223397827 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097356041 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.133963673 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097053057 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225364594 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096362389 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.129820393 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.129512775 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.111944856 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.125534451 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128293855 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09736524 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.138277535 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.136729037 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094759663 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124489744 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094495545 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116536383 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.125672286 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102903848 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.135365809 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.126178198 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.108574472 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120933531 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.127328072 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.10194303 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117336699 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111322199 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.117931432 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.128417924 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096696498 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.138680561 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.124190017 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095367484 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.118186572 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120845304 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.111251723 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117468116 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.113135482 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118746994 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120960286 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094939623 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.12802672 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095284888 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.124561988 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121092821 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.10309668 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.128936442 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.124669439 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097457078 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117164864 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.102512153 seconds)
done (took 9.924149736 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101852523 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1860738 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.22986735 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.208514066 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.157452356 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141023096 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141661174 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14975419 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114392666 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146398424 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.159264253 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.150684205 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.214900496 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.134194902 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.140756305 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.104425879 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134429726 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129387835 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.209636795 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148385551 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.159766289 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.134759764 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159620927 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.119118037 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127085589 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.1536147 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129164389 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.104437862 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.127441868 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.144577492 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.147630016 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104283324 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.129040809 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.14324921 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.114427067 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.132457042 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140150659 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.128510379 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101938368 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125170888 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143340154 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.114933302 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.125220078 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140301419 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127177686 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112825432 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.134979565 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.133163385 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107098938 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.128667274 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129173192 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158876703 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111595584 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.138609284 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.135442032 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110147997 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.135058622 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.133228856 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129577636 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.110515147 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125607258 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104555943 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129263039 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156690028 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.129489539 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.133454135 seconds)
  done (took 9.991607477 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127706148 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.166560543 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138759252 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.139993049 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.135657778 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093408769 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116388804 seconds)
  done (took 1.847602354 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094232911 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.206053063 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.227461693 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205498612 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.225142747 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.216445021 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141562855 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.09476016 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.155848897 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.131055573 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.204440242 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.262605287 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.126426964 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.113296932 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.233087097 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09431596 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.234461448 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094883433 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132594887 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.206697067 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.134967502 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151048832 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.136890337 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.09620417 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.221979521 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096714555 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.287421543 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13696025 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.100891955 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.130931595 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132074788 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.21170708 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.199641281 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.13565899 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121964163 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.20375219 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.199155883 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13292361 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.214044739 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122969696 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.198142356 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.130748747 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.13356901 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.10959326 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130845212 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.185797178 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.137419954 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.133755404 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.105956488 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.231624714 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.109448865 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.224978231 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.10435716 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.131427443 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.132961614 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109186088 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138977808 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.131573967 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209035679 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134642215 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.203539242 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.203071896 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.222713806 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.204437865 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14378477 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.203549411 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.197090431 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.129334337 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131400495 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.10908045 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.227838775 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.107152444 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.134445691 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.188371643 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134139667 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.203779429 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.226421698 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103883984 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.134658719 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.125085484 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.105271005 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11883977 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.198286028 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.130729483 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.105124671 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142836308 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134606867 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.1324991 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.100763257 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.147978768 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.132504369 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.13521585 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.113652415 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.131478451 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139421987 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.208702721 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.133220773 seconds)
  done (took 16.076384056 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097473966 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.12160306 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.104386662 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122633906 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.121287491 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.100854402 seconds)
  done (took 1.617153607 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.130398666 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.13442225 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.143914911 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.134747168 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.194094454 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.211351417 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.235685527 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10731889 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.153448678 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.14453221 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.211954492 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.239029585 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.210575624 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.138785328 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.215381328 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.137813524 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.213959733 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131776178 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.1438764 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10706779 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141693869 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.136357039 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106693076 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.223728538 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.13714506 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.112358514 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134007339 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.144274846 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.142460346 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.107447002 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.138700238 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.136041289 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.104271622 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132524275 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.237441325 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103069477 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128965635 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.141082645 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112886413 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.137596916 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.240546448 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1058583 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.143723025 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.141544626 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109074132 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.127255028 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.140472659 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134172257 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.215285298 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.140465269 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141505547 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.110862828 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.153211779 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140320992 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127449627 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107842714 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.140906043 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.213311723 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.136374727 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12879731 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.135041209 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.112846827 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132726712 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.139066835 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.136312601 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.115548932 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.130095169 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13555373 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106454875 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.135755622 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.140725248 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.135530181 seconds)
  done (took 11.511266463 seconds)
done (took 41.973493318 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 9.568291485 seconds)
  done (took 10.517158585 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.987596339 seconds)
  done (took 1.940799013 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.088997204 seconds)
  done (took 18.079845632 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.615534148 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.678619253 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.325980984 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.192534742 seconds)
  done (took 3.76316499 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.497748734 seconds)
  done (took 2.472333792 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.392286892 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26601741 seconds)
  done (took 1.620830695 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729321177 seconds)
  done (took 1.69699285 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.67434639 seconds)
  done (took 3.631127715 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.424487037 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205116504 seconds)
  done (took 1.60090141 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.736548557 seconds)
  done (took 1.704136186 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 41.213893008 seconds)
  done (took 42.187705626 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260210804 seconds)
  done (took 1.241916623 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.321562072 seconds)
  done (took 1.293751947 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.578377423 seconds)
  done (took 4.553168368 seconds)
done (took 97.260455487 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107523102 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.136919969 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.112099071 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13302504 seconds)
  done (took 1.45692784 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12003388 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.134410854 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.138867981 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.108297795 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.144995104 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.134689178 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.108099321 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.147053283 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.134994036 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.111739895 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.134704602 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.133176449 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.112226254 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131384629 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.130927477 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.111972993 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.137610099 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.135234418 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.110880523 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.134385637 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.134436674 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.110892697 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.136577552 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.13549306 seconds)
  done (took 4.050841985 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108051604 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125907895 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103885257 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.125566005 seconds)
  done (took 1.438757072 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.120648944 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.15527123 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151725946 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.117752298 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.151631782 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.151010777 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.129938422 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.103160523 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.132167222 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.143467485 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137528794 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156345816 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.151100531 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.136604583 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.120920182 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.125273697 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.137770273 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.128732894 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.142868452 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.143794019 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.108564311 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.143013903 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.130410747 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.125592622 seconds)
  done (took 4.22231293 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.234967061 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.149508661 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.135155812 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.195263498 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.167782188 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.13128872 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.162054909 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.140095195 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.115860878 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.14451679 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.135879495 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.207524348 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.136848472 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.1099785 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.135208803 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.139634322 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.147333804 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.11587796 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.183668341 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.138911113 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.138302188 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.147299581 seconds)
  done (took 4.296699177 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109997149 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126289224 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097079921 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.126450194 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.133710321 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.104544637 seconds)
  done (took 1.677910284 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107670666 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.120010584 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10023156 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.121298478 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099865207 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117648022 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117548018 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.094796896 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118420482 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.093127412 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.120423868 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093081062 seconds)
  done (took 2.289948126 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334742063 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.100106833 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.128554258 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.12212115 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.133752585 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.099629243 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146305195 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.124282342 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.279093434 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.095969092 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.148265065 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.211754834 seconds)
  done (took 2.911482912 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235880307 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13633247 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.340222787 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.418715263 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176801024 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189013755 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.302912142 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212149334 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.217369601 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158670141 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221537041 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175308786 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173563719 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205228813 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154660081 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.211666293 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224709645 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228772134 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16763131 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232817066 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210471605 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191073026 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203656222 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171962116 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153044307 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180461646 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.138173819 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116356897 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222007206 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194065871 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20210646 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168741269 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159473891 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257119019 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231781136 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231343587 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.343037128 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14621379 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.216238059 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.226246484 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301133885 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132049561 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250904738 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177069206 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147358476 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206173583 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17763549 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.236963795 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.122265023 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158315818 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24108068 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199481201 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.211975117 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153136455 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348963527 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164681726 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168251336 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204191845 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212466079 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241602031 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190074597 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.109566532 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239208534 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202757116 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200334562 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166958853 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.220125367 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116581235 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223321541 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221030524 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205489437 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186863543 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.246887713 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149577645 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186833582 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190588682 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174003355 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193069451 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182892055 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.134781273 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17009406 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153376709 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141094609 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189901323 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135783934 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25664053 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122240808 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.43743658 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23588638 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180218935 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184389135 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211970681 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188554781 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165542512 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.1114405 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163892497 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.180691576 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179151 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145920146 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178667112 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160815629 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.146489583 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172600694 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.134616464 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180800749 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.144085587 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217831398 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187890029 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.121020497 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212841128 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143984561 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.179656111 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222706743 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210590458 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148212522 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146640187 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214104181 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180694518 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.153045507 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200400146 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217825995 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.190773356 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152963896 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184997682 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243286616 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159299355 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213862948 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159307654 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148607344 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.176506041 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180586764 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178710272 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.171903754 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116742492 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178690528 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247193802 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.140075605 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126660995 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223109115 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116898685 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142217573 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159211609 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152129484 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132811052 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.16630207 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15601255 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176596434 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182622365 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175719328 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180994817 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158944317 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242378232 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14710324 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.18173205 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165620916 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.108711059 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.236442152 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209066072 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141842652 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228702262 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.194970835 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250974771 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185492172 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14255192 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201176508 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146794649 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.109204089 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208575891 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185976564 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186866144 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211152212 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245608856 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.196013346 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.176687863 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16878703 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192835306 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.198796066 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176680558 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.162785471 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184376169 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219222373 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.108965138 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141113248 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.144873252 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158683179 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12005711 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147458363 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235469055 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187876142 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214554215 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1823651 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158777255 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206254631 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.142703549 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186121866 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.22722367 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130041282 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.239381803 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206082163 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189672233 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159163764 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185959168 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.135796907 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113955062 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.153285175 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190642149 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147354743 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149355194 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159936696 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20616903 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201127709 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16746167 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258711592 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191897927 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244399819 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.109736899 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.1860894 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191861692 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204218285 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178261879 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141876179 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183080846 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200416642 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159945892 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241661663 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184544927 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19142888 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256196495 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.178377927 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118125958 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16979811 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187712721 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156483127 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183899794 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163819351 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151023499 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175540469 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.155081733 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14281419 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210841146 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162859623 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233741626 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.17398962 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202743239 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137570275 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159018007 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18219855 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163161154 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107776384 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195475162 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2398031 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162642279 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180790818 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197815859 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145368359 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.360869917 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241596902 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210770853 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153579907 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161013896 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184035489 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178059842 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18786478 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201095642 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160691875 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226497136 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182943716 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134365296 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150675573 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167900896 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17072088 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.175989392 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152696632 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178430516 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.1592321 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214218469 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159149374 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182511886 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18735904 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.166703484 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175879034 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159625755 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223382346 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181310774 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202095593 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.176823702 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.216363318 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230067387 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138509894 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115451718 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.143816885 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202490606 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144978479 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18125229 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.232406748 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226092184 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181072351 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188712736 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154418661 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.140502215 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183148787 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168233685 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227780429 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156859411 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157194047 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245349099 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.144336283 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144321728 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186712734 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330506287 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136812457 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222004213 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109450903 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.324485848 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112511665 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147073373 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1791189 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193817074 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.153522527 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.202206714 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188929485 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161761523 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179393468 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152740527 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216677313 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265046829 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188389219 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202729921 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.161794834 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180189468 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185395054 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226760316 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159537106 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.137476195 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180179517 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233449789 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209737243 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.153378337 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186900644 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186115892 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182247737 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199756792 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149216492 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257871093 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119009576 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209184301 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155814897 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1139682 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180106774 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.234540867 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121507984 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224653317 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18031894 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116394568 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144148174 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170920086 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180907442 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160936134 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.143906539 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207778405 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.140592119 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1846875 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194543384 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145253656 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17552698 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137591341 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15008563 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160364602 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162812247 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151707497 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16134642 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230135202 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.149057946 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201054658 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186321248 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190607255 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210093507 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134032695 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.684893147 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.146872294 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205644528 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168261288 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211081875 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16822231 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190875525 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183485582 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169181617 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185375871 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196316536 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228974779 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208774811 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185615642 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118880551 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161618461 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160481338 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.151690542 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172185728 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185336598 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158063103 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.157784049 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.184385746 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162421906 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.164322449 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127783502 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234424221 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138591977 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238558178 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204736531 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158337561 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192092546 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20094538 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143686852 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.186920663 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195752019 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158020365 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172150213 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.150965796 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154897972 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193417944 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.111661537 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210173323 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181844971 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184184456 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186514861 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.153849737 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182047997 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132530162 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209346598 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115968239 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178004841 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180166114 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14952473 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.147561615 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178320831 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184629622 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.181515993 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143659459 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160123676 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203637745 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.138314517 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14916162 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307433323 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181558352 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242922481 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.17706568 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122067272 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162028328 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177202595 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.179561812 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182238131 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.147869914 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147316964 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.123303653 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.202469642 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173107479 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179214935 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208485326 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210924716 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231320112 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163611337 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.302173588 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15655142 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178091788 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.121543309 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.148927154 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161527357 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150324682 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16367164 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218772848 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191468541 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.174507059 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.163427082 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145335298 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.111452333 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144802096 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180896304 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176155379 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181664778 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163986304 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.135579767 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16146463 seconds)
  done (took 89.11162252 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154215122 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148173629 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16126927 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.212517412 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178494405 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272207899 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.217635149 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240047724 seconds)
  done (took 2.654389443 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.212743314 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.122617031 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.231883947 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.135665937 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.139686286 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.50889617 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.227915668 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.136023585 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.207366932 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.258597314 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.184135157 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.694612823 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.13419217 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.212651573 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.207833856 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134928748 seconds)
  done (took 4.813705582 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.192147506 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.681086392 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.720053389 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.294860652 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.292352554 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.178186617 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.897325173 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.208705921 seconds)
  done (took 14.535634804 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.141209654 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.15624542 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.41892606 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.250659717 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.176528779 seconds)
  done (took 2.220857678 seconds)
done (took 136.65488487 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.113253023 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.141149243 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.114505763 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.145457141 seconds)
  done (took 1.57804471 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.204434309 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09645586 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.126349555 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.094549034 seconds)
  done (took 1.59772555 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.584133016 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.123802351 seconds)
  done (took 1.819382933 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.141305531 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.166067111 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.158880354 seconds)
  done (took 1.542864485 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.126330541 seconds)
  done (took 1.204024628 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122587957 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.145762699 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.217497289 seconds)
  done (took 1.566079032 seconds)
done (took 10.385121229 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113017681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.445640443 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428635691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15312078 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712508398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.416559409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.054442701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173368885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.228411685 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12817201 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120900755 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.707645318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.080311677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347779484 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.058779421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377185195 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.68083989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128291208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.110271154 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130913243 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.026048658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0992965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130563625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128857334 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.681077521 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.45768294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100470643 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.394077456 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127591494 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.108576822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.41477903 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127569701 seconds)
  done (took 17.46316283 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108572153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203035397 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141688979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102240473 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.137280116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129794497 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.112787426 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146350549 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.219407537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129022203 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.150046005 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.099200173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135667537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101666037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.151118144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.128452959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102030814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128268441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137259048 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.104178621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148715961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099924151 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130018733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128018789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100349707 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.165554486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128913133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.116002994 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128856084 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136805994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103438352 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129128354 seconds)
  done (took 5.263665272 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154258383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.242849917 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.114690103 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162910934 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193436645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129423288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226508405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175682877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.218302712 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128521101 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.122867664 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128087799 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.176141858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101344969 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.154155091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127764179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101934301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128496749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.110389324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130246032 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148773554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100762326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13119409 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128158802 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101447126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.165079454 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128400932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.116572094 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128895331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136463409 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104029359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128254929 seconds)
  done (took 5.630060211 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.11421416 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.14523037 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.156035006 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.129015395 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.135366215 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.113887341 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.142547924 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.135315295 seconds)
  done (took 2.157117271 seconds)
done (took 31.591670309 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126912588 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.148738591 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.122891222 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.141909072 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.227691176 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.132309337 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.117025256 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.132129803 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.114796478 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.151532565 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128518163 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.106331973 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.150858802 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.110200894 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.235075016 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.113253384 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.241356087 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.208508393 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.105038928 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.142776181 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.135270724 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.215123322 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.139813906 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.105505159 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.21930415 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132310682 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.202050851 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.138921366 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.109371711 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.137303892 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.208685666 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.140968017 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105876894 seconds)
  done (took 6.028067432 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.228045287 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.235874667 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.134135496 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.106047743 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.226905001 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.133695718 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.227796362 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.132954655 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.104977039 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.133881688 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.13358368 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229428734 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.240930114 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.245644707 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.296376636 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.237413368 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.226862003 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.263429813 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.224776171 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.241869796 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.225316298 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.133356185 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.240456898 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.240677942 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.132932982 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.132782566 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.264471389 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.238868266 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.293498582 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.224575755 seconds)
  done (took 7.230162917 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.114389149 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.152248276 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.158934139 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.174762403 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.165433148 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.14346565 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.148086259 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.125649803 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.158628657 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.10074664 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.146836015 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.170378772 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148150256 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.113325898 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.135130402 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.121063152 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.157139201 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.130638706 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.11166913 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15099961 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.152834017 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.12178701 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145425835 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14063149 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100982397 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139647242 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10756591 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.144795872 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.141689317 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123627275 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.140759179 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.13465893 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.105276105 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.167931054 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.139189802 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.112908865 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.159028845 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141877437 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.113365599 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.158052764 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140355588 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115931883 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.15828826 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.19073831 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102831173 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.141487924 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.142384386 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.116003479 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.13086689 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151859601 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153497596 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.129617403 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.152834457 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.102415216 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130635989 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142018193 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103617168 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.134355289 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.117773956 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.135179306 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.158793123 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.109666021 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140723948 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.131587497 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.110554702 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.129337764 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.101267717 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.135826751 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.160127301 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111219904 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.168000682 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.104186712 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.141769513 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.141386534 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.110843608 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141503818 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.130798115 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110595393 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141170613 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.109242975 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.144525587 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.134092085 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.106572247 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.152057532 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.150720121 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.114329224 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.171226543 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.142383653 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.106468371 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132271808 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148198138 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.104525237 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.136490383 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11745508 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130823083 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.134221485 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.115051 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.140457544 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101286599 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152614516 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.138098028 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.102364087 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.152697268 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132126473 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.107055782 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.142072913 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.179721025 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.104131087 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.14132492 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.141863007 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.102036006 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.137189203 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.107151283 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129442842 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.121082004 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.14483305 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.137780808 seconds)
  done (took 16.767728562 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.372143114 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.344534123 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.218784554 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.440108476 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.161835472 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.230559542 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.338395963 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.357030898 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.139600535 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181591989 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.228278653 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.280276657 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.133709239 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.168805059 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.342713059 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.444755069 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.139133945 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.212909135 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181987194 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.159766907 seconds)
  done (took 6.188756489 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.130467308 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.18544955 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170901675 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.169832154 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.139449662 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.117788935 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.131312548 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.162004129 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.139543196 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.11590184 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.13471699 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158138889 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.109744205 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.141965592 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.152125023 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.15524672 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.142063701 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.138933636 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.158125943 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.110226629 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.146930233 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.169492402 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.143444333 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168466604 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.118383864 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.148235636 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101287043 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.138980484 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.13433532 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.108310581 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.138909208 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.158406365 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.110131069 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.138059113 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.141589573 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.115652069 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.134634123 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105251026 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.138438002 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107393628 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.149242157 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.140900948 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.107351472 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129423979 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.118065844 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.133775123 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.144304496 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.114268288 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.148589117 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.146994674 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.114802739 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.14651014 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.110322249 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.152764204 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.135144789 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122275861 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.146737678 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.144726328 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.111721175 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130018986 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.130333147 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.108428309 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.138262773 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.116302038 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.142322564 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.160848112 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.149581038 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.103390253 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.139774411 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.137574924 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.108193419 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.152216408 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.162182506 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.107854428 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.135296978 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.150347721 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.106648221 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125239755 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.114425862 seconds)
  done (took 11.789825164 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135217975 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137504036 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.154281566 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.144308693 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.147457992 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.140173203 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.108027127 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.154896557 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.117921784 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.145749098 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.14721573 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.120560004 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162438192 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.143676452 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.108899318 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.15196792 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.143694672 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151729856 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.155792747 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.169848557 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.14747078 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.109686821 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.149265423 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.11789567 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170019313 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.146856156 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170170315 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.115413581 seconds)
  done (took 5.100107781 seconds)
done (took 54.187936587 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.237933527 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.4070688 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.193522852 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.192808523 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.190243219 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.210840528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215758735 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.195780606 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.099068361 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.184825297 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.194384799 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.201229708 seconds)
done (took 27.640299024 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.509429243 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.704325632 seconds)
    (2/2) benchmarking "String"...
    done (took 1.48231078 seconds)
  done (took 4.304239897 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.188549276 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.189622759 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.435739522 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.186388055 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.205189409 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.206602596 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.200342821 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.20500249 seconds)
  done (took 15.742757515 seconds)
done (took 25.863049558 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.236982378 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.370446804 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.442420849 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.205214178 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.215950364 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.188568592 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.190964738 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.208583604 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.191152918 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.195102019 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.601999839 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.437410304 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.206098884 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.562110456 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.187487918 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.232175603 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.189452111 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.40719785 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.191579031 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.255591274 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.181478319 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.188312348 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.249169695 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.203050818 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.1942705 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.201915867 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.2344591 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.190870686 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.358711408 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.227634956 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.250190578 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.19229087 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.225411721 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.19127976 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.195921414 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.211596496 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.364972984 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.197554454 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.183329108 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.218646042 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.36971988 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.285363005 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.195613576 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.194070346 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.210658239 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.231556786 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.18725096 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.322863875 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.214993373 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.193125024 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.269043984 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.561178191 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.196583411 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.203892361 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.219928205 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.396315833 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.202062002 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.225590579 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.214690185 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.202731607 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.21368452 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.192583603 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.234435929 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.202846168 seconds)
  done (took 143.233298071 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.19558094 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.19707391 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.197119135 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.219765785 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.199963305 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.199409235 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.192306994 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.19219961 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.196704857 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.206757358 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.198788784 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.193483442 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.19806059 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158773868 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.198261172 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.210709444 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.21207692 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.198403405 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.214449087 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.194103669 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.197928313 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.197720729 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.211901054 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.198070406 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.234222744 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.27843198 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.239364754 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.223828799 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.206461539 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.196669972 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.234631366 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.220269789 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.79831775 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065264624 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.209569948 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.212552956 seconds)
  done (took 80.019208061 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19572859 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.195119453 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195587918 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.227808803 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.199421047 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.754675217 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.759857107 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.928190695 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.446180575 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.498060051 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200682629 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.434651191 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198048781 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290091286 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208556774 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201942922 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198284034 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.212866378 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238522416 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201826794 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199028509 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.75681617 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212819665 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.377676479 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.375801753 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.213171573 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227456857 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.601990624 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197153463 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227719133 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.528440806 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.24426448 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196885421 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.546624133 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.47466322 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313006111 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199826712 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230362908 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198697447 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.476930114 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19661501 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200457229 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199765558 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.851535246 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202245198 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.758917776 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202526782 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.11763545 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.198355528 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198782766 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.043124175 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.822686857 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218310158 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200689063 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.202222441 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198702396 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197797871 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231257547 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.013913072 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.294433661 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.212390266 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.20133972 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229392055 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198942166 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.347203533 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201919618 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.410526989 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273730854 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.317501209 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761124225 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203114558 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296126774 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318111326 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200980066 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200373101 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200325773 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200378149 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309870118 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199435008 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201041505 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.613359011 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.376675218 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217599046 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.517347104 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302778588 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199154661 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.577370257 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203685206 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.201197217 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926948139 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298623542 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199686914 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.200953256 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200232443 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.615722013 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199996288 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.76380848 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.42112106 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205542769 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.23106883 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206764371 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.624866752 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.751398947 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.885205663 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207642026 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313991737 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377849108 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218120681 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.204039024 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.51740984 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.204536616 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.257771152 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206268407 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601314024 seconds)
  done (took 365.797378219 seconds)
done (took 590.167793202 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.147583098 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.105148941 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.19730461 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.127617164 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.113875196 seconds)
  done (took 11.817643322 seconds)
done (took 12.945323137 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.389130384 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.386215848 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260971897 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.393870706 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237542042 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40555612 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.367208287 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231477486 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304939076 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.284213451 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.306934223 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254900443 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237820223 seconds)
  done (took 18.189019488 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491990059 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.208930379 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286017798 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.450504364 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2469135 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.465412048 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.501151584 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.208949353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.357673044 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250695103 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222001245 seconds)
  done (took 17.819403058 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.480371697 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.21119304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294028692 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.446088055 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25267895 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.469511346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.504498353 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.209879959 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.352908937 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22412472 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221408819 seconds)
  done (took 17.794324846 seconds)
done (took 54.931757876 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249453615 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.37395366 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.236542081 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224909861 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216727015 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219397457 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223390131 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.215470643 seconds)
  done (took 11.091107631 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217741626 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21596442 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.216492607 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216151375 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216304928 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.217351258 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.216402158 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.21817454 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.21945373 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.218580867 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21738978 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217285191 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216726461 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216804202 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.218456408 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.215137312 seconds)
  done (took 20.603689879 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222668154 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.21804732 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.217948054 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.216622751 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.216479927 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.218213872 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220479002 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216742446 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.218792035 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221389536 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.219392702 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219585747 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219301805 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.218844541 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.218058628 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.220660973 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.217026776 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220217073 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223718615 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.222836798 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.218461979 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.219548187 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219672761 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219763571 seconds)
  done (took 30.393506164 seconds)
done (took 63.21781767 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.209157627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.217332187 seconds)
  done (took 5.558344671 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.280559298 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.280263275 seconds)
  done (took 3.691367416 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.219216922 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.22095138 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220056156 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.218892579 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.219070121 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.22304663 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.222146044 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.219534885 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.222640836 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.222125926 seconds)
  done (took 13.338524297 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222699663 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222458112 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.220308432 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.218953232 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.220091405 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.220303158 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221924732 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223696055 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222610582 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219866847 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218947194 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219818682 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219351322 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.218494511 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.221545406 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222046338 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219431411 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.220262621 seconds)
  done (took 23.105353606 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.233553128 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.241343224 seconds)
  done (took 3.606923812 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.363940349 seconds)
    (2/7) benchmarking "second"...
    done (took 1.264694969 seconds)
    (3/7) benchmarking "month"...
    done (took 1.338051873 seconds)
    (4/7) benchmarking "year"...
    done (took 1.329636984 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.262896625 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.24273264 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.265345988 seconds)
  done (took 10.203590931 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.273214438 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.523541151 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.716800624 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.217839371 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.329999281 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.407516646 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.217260228 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.387706321 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.385051879 seconds)
  done (took 15.593880246 seconds)
done (took 76.227884388 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.213896054 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.269002451 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.255670506 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.235778335 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.572434172 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.224731057 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.218288688 seconds)
done (took 16.124726279 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.206878705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.216300609 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.210073173 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.224301574 seconds)
  done (took 9.992573803 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191529857 seconds)
    (2/2) benchmarking "read"...
    done (took 1.527952916 seconds)
  done (took 4.852611697 seconds)
done (took 15.982236859 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227221543 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224776095 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.221965886 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.224846028 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.223904087 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.223017434 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.221373126 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22356259 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.223962885 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.224717696 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.224581333 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.223420413 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.223936887 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223932377 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222369195 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222304401 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222823438 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223872509 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22411521 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225015469 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226152792 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.224656726 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.222421769 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223675863 seconds)
  done (took 30.507607008 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.227667196 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221661902 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.22630538 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.224152994 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223579148 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.225532425 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.224708366 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227925545 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.225867368 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22667131 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224442144 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227972414 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226248554 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.226440801 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226826839 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.226276791 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224772244 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225987025 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224332141 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.225819387 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.225795269 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224086416 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.225219139 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228860857 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226712842 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227942343 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.227680873 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229030932 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224801579 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226939805 seconds)
  done (took 37.917398202 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231304662 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228809957 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228297822 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228912114 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.226187104 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.225829304 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227555799 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227793147 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22620001 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.226909935 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.228746765 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227704705 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.226697596 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228776381 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226694221 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.226351031 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228360376 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.227166808 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231381672 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228588582 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.230952323 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.22984818 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.23046167 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.229871354 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.230368021 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.230119995 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226333987 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.227525783 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.230229731 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.23006203 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228380271 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231731488 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229912463 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23073385 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229321582 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.229628187 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.230849668 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234008304 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229443186 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228127225 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.231053577 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.229448254 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.228164412 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.230005201 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.230176447 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.231235511 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.23121529 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227963923 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22945627 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.232319826 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.228900173 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.228193369 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.229356063 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.228998724 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233701087 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.232291599 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230884822 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.23070488 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.231779965 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.230600013 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.230313971 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.233577069 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.234138584 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.232129545 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.231469026 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233507265 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.231420248 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228826177 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.235614993 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.229521612 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.230953004 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.232915364 seconds)
  done (took 89.691504152 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.233857683 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232045736 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.232067436 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233677408 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229836677 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228752797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.228351232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233348889 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232735925 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231713063 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230388707 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232129948 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232716634 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233736652 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234955557 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233124119 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233525873 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23516723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234128452 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232998408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234963348 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.23636004 seconds)
  done (took 28.264608376 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234060763 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236204405 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.236922778 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234747228 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234059913 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23698763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233775572 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235630681 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231682827 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233600335 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231305016 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232875798 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238911374 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236367974 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232479783 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235524275 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234080908 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236386542 seconds)
  done (took 23.368564006 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236876073 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235668598 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.23465087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232336675 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.236087365 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233755272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237143986 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235928681 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.237496423 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233303087 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.237197896 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237356694 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.235984847 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232048585 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235424496 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237671097 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.234716849 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234999816 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236008032 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235173186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237612125 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236620074 seconds)
  done (took 28.32907236 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236971812 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.237830805 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.237311505 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237831869 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236928154 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.238910586 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.235309808 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236996144 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.238630219 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.236425593 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236230322 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.237294436 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.241730119 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23740072 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235539046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237950743 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233961757 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23281819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233802912 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.238295308 seconds)
  done (took 25.886468151 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23480958 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237831223 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.236619045 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238919785 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240118485 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240045212 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239863885 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240289643 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238712037 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239014414 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239849059 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241720334 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241800234 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23875981 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23765793 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239492891 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24075368 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240301083 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241578711 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240224239 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240493536 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240664179 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238871787 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242134475 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238637376 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239918593 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241510709 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.239926029 seconds)
  done (took 35.857736765 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237695358 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24249023 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238789944 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.24065719 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.243273622 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.242177777 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.243199919 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.242877137 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238426197 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243230653 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.243691098 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.242087383 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238424983 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.241158674 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241961585 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.240123487 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242877116 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.241063562 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242486636 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242955462 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.241467982 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244508245 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.244731746 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239876131 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239522127 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.246197836 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24321105 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245503896 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245699098 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242563072 seconds)
  done (took 38.41148264 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.242922713 seconds)
    (2/2) benchmarking "in"...
    done (took 2.235877374 seconds)
  done (took 5.628242508 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238729688 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24069416 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.244184909 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241731745 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242058756 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.243345452 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.24573149 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245958553 seconds)
  done (took 11.091408794 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.240049403 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243639737 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.242990469 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.24529902 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.243259488 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23793755 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249345471 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.266100636 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237957343 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.243146609 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244321432 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.240632365 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.243030217 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238585808 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.239069519 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24092683 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248161907 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.245246269 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.247434552 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.244222982 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244870292 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241199448 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245746818 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.246957085 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.242489871 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.249097309 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250045357 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.249535078 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241476864 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.246861792 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.244421897 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.245385793 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244608439 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.249162705 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.243435211 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.247138818 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249916312 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264831158 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.247907556 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249971056 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246554239 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.243306728 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.240264869 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.245785807 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246076781 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.250458574 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.246973077 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.247962856 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241342473 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.244386835 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.246885945 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243930677 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246062952 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245590744 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.247870925 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252915936 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.272473838 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.242857983 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24602343 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.251920715 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257158326 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.251589795 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250054556 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.254075243 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24663117 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.248528228 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254340691 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.275321863 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.249367379 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.246874182 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.251306886 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258781475 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.257335188 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251030371 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249282818 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.246314618 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245134536 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250715086 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252054305 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.271540171 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.25245222 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25052384 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24725352 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247949179 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.246472399 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.252029017 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.246634123 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.250091848 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.246388053 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254007814 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.27394193 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.247370828 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.244475204 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245038085 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246822914 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250044684 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.243561005 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245240555 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.251259403 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.251242729 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248884675 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248359918 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253915828 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258419754 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247622449 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250710436 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.255402298 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246962677 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.254011635 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.256660745 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250065511 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.247128922 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.251881938 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25398343 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244904135 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.246743171 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249584512 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.246958454 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.25188057 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.247417232 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250746431 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.254183039 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.254432027 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.252449779 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.24932397 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253669253 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250480628 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248523518 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25549105 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.253710591 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.252059645 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.250973242 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.252583125 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.246809634 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254112728 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248308257 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.252455548 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.251973713 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.249510164 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.248098822 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250661619 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.253050504 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250931086 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.251873563 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.254303927 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.251360935 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258580729 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.252349849 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253462267 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.252908659 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.254655401 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251007075 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.24982821 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251147319 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.247755833 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253101169 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.249787548 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.254432611 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253864753 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.255352839 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252349951 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248959399 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250919601 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.251829551 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250678542 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.250853128 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.253606542 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.254722713 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.253983415 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.248066096 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.253607674 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.250669674 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.251968095 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.256896921 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.254024732 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254781101 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.253724435 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252776336 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251596516 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254522338 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250073093 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.250580291 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.257572427 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.254157181 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.257125256 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251305917 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255622237 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.24695401 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253692614 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252986945 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251817144 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.25782004 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261443782 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26075924 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.252411861 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.258686978 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251333644 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.254975441 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.256814271 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256383975 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.254000584 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252784798 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250051439 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256657522 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.254243373 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250953184 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25005135 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.259982681 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.259098027 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254780067 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25547596 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255786587 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254538689 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.256288997 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258429101 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255814958 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.253222068 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257023598 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.251115392 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250827378 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.257125042 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.255682107 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258477328 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.261193579 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257109805 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255711983 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25521248 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253411874 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.256243945 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253059872 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.254226174 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263460774 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.275512142 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25489394 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261019786 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.278304754 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253897483 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.261091592 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.259521304 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.256991772 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.255496407 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.257687982 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.256452255 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259173736 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259460927 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252725319 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260787997 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260592514 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.262710765 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.252646487 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.258324109 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.257264045 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.257511896 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257300056 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253740827 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.257759909 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259051053 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262799603 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260976847 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257722245 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256129269 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257991375 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259387775 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255093077 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.260053322 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261424948 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.256915335 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.257997378 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.257090857 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261819054 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253791531 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.259078924 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253142674 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265790426 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.27129021 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265999915 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.261838339 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.260778673 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262742393 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.257949499 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.2599585 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256355209 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257121992 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254359022 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.256922929 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.263720615 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257395583 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.263421798 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260063808 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.261421609 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263494377 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.260244224 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.255065682 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.26324756 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258831428 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.260852233 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.257075621 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.2636199 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260684675 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263760757 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.2581046 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257730664 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266826079 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28293541 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.260480971 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.260058873 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.259462728 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256643979 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.2577831 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.262618068 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.259393314 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262730827 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.257423043 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261974273 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.259673886 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266738247 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.267330033 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260218073 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.262877556 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259424025 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25731551 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.257879294 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264390323 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266583921 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.288948446 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.256257534 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.267054821 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262956396 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.261392359 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.262730855 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.267132915 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260122156 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.263656623 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270793624 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.281725634 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.262374224 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26377438 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.26459294 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264162759 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.264533022 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.259994886 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264363303 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265413648 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.261616877 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261828986 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259930374 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.266178818 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264997496 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262438049 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.2650997 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265519344 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27191278 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287025962 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266368137 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.262763702 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268536379 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268210084 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264532472 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.288907817 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.262172418 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266284814 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262438701 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.261489983 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262028399 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260934177 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.265612482 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261014439 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267918884 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.266709065 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.261072377 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.265520815 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.267426634 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.263327416 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264398899 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269483236 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.262058644 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269597086 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.267396984 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.262837022 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.268132968 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266061641 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.26195314 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263287404 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263111884 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267766038 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262826028 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.267192783 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260055403 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268642968 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.267358279 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.268616803 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.267271649 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.265583702 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26241364 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.267742053 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265012989 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.271324159 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.265805257 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266722601 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265327664 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.272139097 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.269569433 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.264612672 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269929186 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.266692587 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.261567759 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.261970196 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268160182 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264021657 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267887864 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262837763 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265614633 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.265215703 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.268554437 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.263906104 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267727079 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262684749 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265451149 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270980075 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267687534 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267197095 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.263332732 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26715309 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.262647034 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260464043 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.268952856 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263600036 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271626003 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264478131 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.266156427 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267405592 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.266749422 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267265411 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268684885 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263629495 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.262340113 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.270519168 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267776318 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.267377426 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.265550387 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.269790528 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.263717372 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264867121 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.267126221 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264759645 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.267348997 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269450543 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265133087 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.263606254 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266542672 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273060952 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273324936 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.272466095 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266389962 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277837793 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.290589411 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271727083 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.26651219 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269231658 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268237409 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270471802 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269438336 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266866053 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274635969 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.291205754 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270536715 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2683375 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269242148 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.266164181 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271649589 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269769796 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268376864 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269797146 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.267224214 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275351409 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27189267 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.272752236 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265757277 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.265827199 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.270477157 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.266576982 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.272208632 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27143035 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.273449162 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.269317287 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272339732 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271890139 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268643324 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.27449585 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.267054754 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272977483 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.267895614 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270336078 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271366445 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.270346814 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.274769365 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273844526 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268294539 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.273658299 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.274631089 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.273535387 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267573352 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.271874513 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.273308895 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273975602 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.273040805 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270854747 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.268711152 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.272593653 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274990297 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27186731 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271909727 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279878609 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29985795 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266437779 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269831179 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27361256 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.275678464 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274632134 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274809647 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.268663559 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.271279992 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.275553237 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273559125 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278166495 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296699913 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.272369055 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.274917664 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.27249624 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.270282601 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.273323786 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274887604 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.274931175 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268219471 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.280246844 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278632171 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271176862 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281542818 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.293789016 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272113195 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.275379712 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273154316 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276002178 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.272319908 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275648428 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.272481856 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273696533 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.268426692 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271219901 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277401329 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.276866784 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.279895227 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273504436 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.269572919 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.270374662 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.274278402 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274835044 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.277099431 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274685568 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.273668424 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.273510967 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.271321914 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282641773 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.283700469 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.275942147 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273129143 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.27450612 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272664416 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.272503988 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273571202 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.274353814 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274456961 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.274543361 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273314167 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278656183 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.275925589 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.271543677 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26907287 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269096075 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273280082 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.280291589 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28149395 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.272122381 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.272352443 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274385664 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275717911 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270017564 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275574575 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274926223 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272648365 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.267935221 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274089424 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.275296703 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.272138549 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.270298914 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.276435305 seconds)
  done (took 752.8207246 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27638003 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270646496 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275586397 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272284652 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273987035 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274968501 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272945099 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274517095 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271589388 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276887062 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275670543 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275606006 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270763114 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275130445 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271792288 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274812014 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274136383 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27409197 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273651807 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272190873 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27226617 seconds)
  done (took 27.928291204 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.275821378 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27359544 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273194361 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277213535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27406552 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.277899872 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274533721 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275358664 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.277313139 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276696215 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277617366 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27467955 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.275291535 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273071686 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277245517 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276569965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.276244251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275078183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276884349 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275966509 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27549952 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272331777 seconds)
  done (took 29.241171751 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.277832265 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.273509021 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.272571379 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.275291 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.273404498 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.275490241 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.275665215 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.277674716 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.278942272 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.273260637 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.270550226 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.271885031 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.275927508 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.27775899 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.27278967 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.280824247 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.273727711 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277953595 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.276119909 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.276045102 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280648765 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.280908672 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.2760138 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.269800131 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275724541 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278202143 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.27649058 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.275797231 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.273130345 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.278288936 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.278705025 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.272441643 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279607581 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.277318546 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.27113258 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.281560227 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.278292569 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.278189179 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.27535917 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.275222981 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.28259872 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.278440242 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.282209506 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.283618649 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.277362468 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.276158737 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.282767765 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.278223385 seconds)
  done (took 62.462757219 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.27696175 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.277553771 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280307324 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277505224 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.276720176 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.274493299 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.277137918 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277955791 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.279037033 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280751717 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.277513212 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.279037575 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280392 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.278603613 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.278011399 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280099021 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278540489 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281468036 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.280106746 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279413865 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.279523597 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.278478179 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.281791791 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280807543 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281883036 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281050032 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280469109 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.280249581 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280653544 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.279444305 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.276487761 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28118182 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281208419 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279010635 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.277671141 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.277860833 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.280813129 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.280864891 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.27882771 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280783968 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282528828 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278581048 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281586776 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.278391052 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281721198 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.277989243 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281603615 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282505954 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277679997 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.281106444 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.278152086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.279077821 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281568697 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.280947627 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282795838 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.279803728 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.280073755 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.278924828 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278649528 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.280471905 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.279569206 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.281085451 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.280152485 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.280054299 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.280595856 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.283202082 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.28066709 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283025059 seconds)
  done (took 88.210108388 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282211641 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278935102 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281257164 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280389928 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280608627 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.281460483 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28143176 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.282252654 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281690832 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281804399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280347205 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280505049 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.279735282 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280491246 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.281996557 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281935064 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281441118 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281829552 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281486034 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281434388 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279573023 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27971666 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.281233026 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280364023 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281976197 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281136521 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280619835 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279617493 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280181214 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281258911 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279457572 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.279886115 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281363317 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282676434 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.281867762 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279981556 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281617938 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280028132 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282185339 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.281628615 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280248418 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279828967 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279359577 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276880529 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281231366 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279079402 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281671142 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.282370814 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281074993 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28061784 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281641363 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28137211 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281773577 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279124366 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.282800851 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.282082489 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284076264 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281419059 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283333887 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282240625 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28253237 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283121457 seconds)
  done (took 80.617997251 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284848061 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284322421 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.279371253 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.279153963 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281246724 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281494028 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281682821 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.282092381 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283160996 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.28259435 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283370209 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283667344 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284066086 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283021458 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283026853 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285355744 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281999006 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.282199011 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280861345 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281566641 seconds)
  done (took 26.836831208 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.284445546 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282764119 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.280625211 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280391592 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28194715 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.2808576 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.28198749 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280769956 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282774376 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284414712 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285564832 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282256093 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281763912 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282248941 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283858317 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284898503 seconds)
  done (took 21.7085345 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287346098 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.282488706 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.284448749 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.282326203 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.280634361 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.285962311 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.286744521 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.284752353 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28423841 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.284087362 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.283083717 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.284206914 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283197703 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284942726 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.285394872 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.286145453 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.285283549 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.283560367 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.284746777 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284527184 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283854276 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.283743375 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283482442 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.282816803 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.283807654 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.286528781 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.285793044 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.286401407 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284822018 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.283478536 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.284650182 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287204859 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.28625289 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.282731498 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.284602038 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281780601 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.28332708 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287173613 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.284772355 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285338822 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.284513718 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.285200825 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283098846 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.281926528 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284643772 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.281604475 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.285843324 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283353482 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.284749335 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.282565059 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.283557559 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.28494301 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.282380103 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.284134411 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282998688 seconds)
  done (took 71.825496945 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286199429 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28388165 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284564915 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283528133 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284461286 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282834561 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282879166 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285336121 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283879385 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284877098 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285789941 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286599276 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286559287 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284977681 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286165323 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286035583 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285383395 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286989653 seconds)
  done (took 24.316747084 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284905253 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285344101 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28652727 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.286596804 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.283032079 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289999727 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285853491 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.287405717 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287076003 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.289097975 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285040469 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.285149518 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28588794 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.287547809 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287673246 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285866861 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.286592184 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284846321 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.287449176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286601784 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284874495 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286044327 seconds)
  done (took 29.484985571 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.285423962 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.282037469 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.280982048 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.292052109 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.285799493 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.281367044 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.281010645 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.282565672 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.292967413 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.320664614 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.316216018 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.286100841 seconds)
  done (took 16.6758345 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288303519 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287180287 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286427757 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285232407 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284735796 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286502865 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287428718 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286709787 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285851633 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288888935 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286022708 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286407507 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288631382 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28766002 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287595588 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28544956 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287873098 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285854248 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287708128 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285377535 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287642792 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28632311 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288222815 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288036091 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289048404 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286598353 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285532743 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287948715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286533214 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287361838 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287907087 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287166765 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288817139 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288784741 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287546538 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286907237 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288667197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28744541 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287442153 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286911625 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289230848 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287002463 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28662256 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288147209 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288090382 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28814624 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287673988 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28992564 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287859636 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287918015 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28807647 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2872 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286807135 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289275582 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288757483 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289626428 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290532968 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289284349 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290050948 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290296236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287908541 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290418375 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289662098 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287768094 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288663074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289500936 seconds)
  done (took 86.186972368 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291087026 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289540357 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289179415 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290464642 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290506482 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290175537 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287974047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288614943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289371361 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290002519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29102376 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290904582 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292018358 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28888738 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291523434 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29102605 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290252001 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289961349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290898133 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291675159 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290220845 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290949822 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291089794 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290467416 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292477317 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290752018 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290159665 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289649809 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29010706 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290639361 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290772597 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290988212 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290003778 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291876761 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288866824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291047372 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290677423 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290361476 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292790855 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290294314 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28966191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291140202 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291915794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289722672 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291247818 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290252771 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289295253 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290897205 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291661924 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290063857 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29336486 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290646767 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291510584 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290785631 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290520452 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289960897 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291166798 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291579559 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291685874 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289815871 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292022983 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28992812 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290688518 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290683264 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289922334 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291361139 seconds)
  done (took 86.381062058 seconds)
done (took 1760.789446612 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.451771174 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406507217 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.286264084 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.299278453 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.285513325 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.282003701 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.297463511 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.284845445 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.283034848 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.284336786 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.285301756 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474281892 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.339872208 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285143727 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.284388117 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386599537 seconds)
  done (took 26.411999249 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.312624791 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.294253084 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.397734759 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.31020604 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.311753326 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.464575912 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.344695624 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.289628821 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.447342762 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.31236072 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.280907292 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32536126 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288913935 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.280170981 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.320346352 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.468109216 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.525131098 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.292940362 seconds)
  done (took 28.461621173 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.697293811 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.296352202 seconds)
  done (took 5.187815576 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.306324907 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.288309477 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.288920708 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.287232782 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.280221997 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.285124661 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.28609292 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.284653006 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.290648183 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.404525896 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.294843124 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.301746971 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.304725175 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.290172197 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292915967 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.331255136 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.441608805 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.292896879 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.291196693 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.293398752 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.288397266 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388416323 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.327229163 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.296644223 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.39978203 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.296225525 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.294456097 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.29768979 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.421925745 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.291414029 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.28816376 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.290276319 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.28935713 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.28312469 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.737497665 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.301460932 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.316694685 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31201404 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293218538 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.460882245 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.290431032 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.296337971 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.284966978 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.728279408 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.44986126 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.405008333 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.303539215 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.288717482 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.290368253 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.355321192 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.295786309 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.290504024 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.34679138 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.149718206 seconds)
  done (took 82.986617408 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.337593021 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.281697218 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513784084 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.308468756 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281796672 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302615366 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.301525401 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.542355819 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.354332327 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296331104 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.562575497 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.909172286 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.312623336 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.288758606 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.695691757 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.363282302 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.285161832 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.282323252 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.28456731 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.284653809 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.907082316 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289063607 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.284525343 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.444164411 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.320934597 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.824044345 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.284678279 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.288791207 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.28563444 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.283391716 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.86125737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.313337608 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.367243 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.287190816 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.547017867 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.645880485 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.610182708 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.286533494 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.334824738 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.289686097 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.29493909 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757455986 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.625620707 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.284944499 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.300087739 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765657335 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.287123776 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.295090242 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.289655765 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.624465985 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.284479862 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.28758011 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.286226425 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.290345768 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.285889799 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.375624009 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.362787173 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82776172 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284899707 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.294691957 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.31631594 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.285986326 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.290663697 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.289271921 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.287346247 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.63445663 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.512807001 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.2947653 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.62951673 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.857412216 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.299917491 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.925955817 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.306769575 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.313466369 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.346890663 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286650402 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.300115067 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816662058 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.298384479 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.284674059 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.611814527 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.288885768 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.564332427 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.301971916 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.302553305 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935168989 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.307743623 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.402975217 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.288404417 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.288248145 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.287596055 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291848296 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.564916704 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.322775615 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.288550595 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.288691725 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.308267852 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.300275782 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.288582918 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.291427809 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.933964521 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.320167822 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.28612683 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291779175 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288205088 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.291007458 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.28901181 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.288599404 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.650410907 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.289418385 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.310213015 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.291301457 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.290344391 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.292405706 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.436155371 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.294774127 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.570392545 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.290904718 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289039511 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.293155869 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287943695 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.354991452 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293109439 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302123595 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.216737149 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.552488786 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303569356 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.289964395 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290009076 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.295567388 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.287511487 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290105301 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.428803512 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.291357815 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127334418 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.354790868 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.293092951 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.290671353 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.297384595 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289866448 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.297198513 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289732521 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.589833996 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.551908575 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.522294906 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.295537085 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.304128766 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.103830905 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.316671464 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521053948 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306920719 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.291360836 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.54344613 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.500873371 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.28886216 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.285967822 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.286726887 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.672323486 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.297781322 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588063009 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.882752155 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.298751816 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.296304583 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.126911834 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.03702012 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.281582243 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.27998047 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.549858443 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.29600405 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.268308397 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.269718243 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.268054018 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.270064125 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.273836096 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.271877213 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.270669443 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.271210508 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.538853785 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.502043252 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.286252749 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.269442892 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.802250283 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.392515092 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.27055736 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.280640325 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.269532153 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.272547243 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.349189171 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.271436243 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.270069206 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.276386477 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.283660095 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.768019787 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.271659958 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.274528324 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.507792637 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022841706 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.28789438 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.275386388 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.273959781 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.71713712 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.830726849 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.274851358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.557171303 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.284778011 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.308202775 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27773407 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.397660884 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828602636 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.276683057 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.291558069 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.991926224 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.287684971 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.929547075 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.268450388 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.274132187 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924927264 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.288109995 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.277549257 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.271292959 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.274309153 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.67751992 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.275832185 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.307108248 seconds)
  done (took 488.573464469 seconds)
done (took 632.8180291 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.272797799 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.276146849 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.269513424 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.277146589 seconds)
  done (took 10.283526776 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.287722838 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.281442802 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.285186285 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.280054596 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.287384802 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.280213673 seconds)
  done (took 8.890509195 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.279181335 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.275580986 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.276426895 seconds)
  done (took 8.018461643 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.479009138 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.305257864 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.599419472 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.298272202 seconds)
  done (took 8.870957939 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.284287432 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.285952024 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.287340183 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.286852793 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.287835212 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.294534825 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.287456165 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.289255431 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.288071756 seconds)
  done (took 12.781373104 seconds)
done (took 50.034876006 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.917842876 seconds)
    (2/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.269513967 seconds)
    (3/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.288441088 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.26883359 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.388324001 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.331741785 seconds)
    (7/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.279820781 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.29014266 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.377064996 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.356973848 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.279328013 seconds)
    (12/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.286437727 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.323187089 seconds)
    (14/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.422604947 seconds)
    (15/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.279632146 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.28457694 seconds)
    (17/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.433431298 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.266747952 seconds)
    (19/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.26882389 seconds)
    (20/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.267969223 seconds)
    (21/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.4496528 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.31711179 seconds)
    (23/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.451129487 seconds)
    (24/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.294431698 seconds)
    (25/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.170099329 seconds)
    (26/192) benchmarking ("map", identity, Int8, false)...
    done (took 2.286301431 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.067751152 seconds)
    (28/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.09792582 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.28135879 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.357926884 seconds)
    (31/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.270118755 seconds)
    (32/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.266708109 seconds)
    (33/192) benchmarking ("map", identity, BigInt, false)...
    done (took 2.278005577 seconds)
    (34/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.281503286 seconds)
    (35/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.025152083 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.330153727 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.37152314 seconds)
    (38/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.054618994 seconds)
    (39/192) benchmarking ("map", identity, Float64, false)...
    done (took 2.288244129 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.47650765 seconds)
    (41/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.271880448 seconds)
    (42/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.330107766 seconds)
    (43/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.337071862 seconds)
    (44/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.017520178 seconds)
    (45/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.39270739 seconds)
    (46/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.057299957 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.289698584 seconds)
    (48/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.293772612 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.286299891 seconds)
    (50/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.2726603 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.384442082 seconds)
    (52/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.272115753 seconds)
    (53/192) benchmarking ("map", identity, Float32, false)...
    done (took 2.296296278 seconds)
    (54/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.960542875 seconds)
    (55/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335633399 seconds)
    (56/192) benchmarking ("map", identity, Bool, false)...
    done (took 2.28285059 seconds)
    (57/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.420005323 seconds)
    (58/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.048201222 seconds)
    (59/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.498750786 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.356410321 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.274586072 seconds)
    (62/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.277019926 seconds)
    (63/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.44687386 seconds)
    (64/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.415464324 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.263660501 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.404281588 seconds)
    (67/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.261133844 seconds)
    (68/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.256588834 seconds)
    (69/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.2575798 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.359439618 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.398012076 seconds)
    (72/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.035847468 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.279221302 seconds)
    (74/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.28992654 seconds)
    (75/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.41162653 seconds)
    (76/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.295089461 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.340640011 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.36413551 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.334646612 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.347394559 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.944461202 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.374380979 seconds)
    (83/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.350085765 seconds)
    (84/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.255674154 seconds)
    (85/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.25468667 seconds)
    (86/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.390508256 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.349038962 seconds)
    (88/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.254518901 seconds)
    (89/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.271868212 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.364280095 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.278516684 seconds)
    (92/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.957028458 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.388281206 seconds)
    (94/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.258962796 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.255000509 seconds)
    (96/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.403990059 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.320879803 seconds)
    (98/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.363402712 seconds)
    (99/192) benchmarking ("map", abs, Bool, false)...
    done (took 2.260201133 seconds)
    (100/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.25943982 seconds)
    (101/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.466463547 seconds)
    (102/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.284500112 seconds)
    (103/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.303107259 seconds)
    (104/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.264488045 seconds)
    (105/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.280055962 seconds)
    (106/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.307422868 seconds)
    (107/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.257992202 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.274859191 seconds)
    (109/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.259369292 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.357612285 seconds)
    (111/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.264899619 seconds)
    (112/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.922710721 seconds)
    (113/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.275736214 seconds)
    (114/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.260655709 seconds)
    (115/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.272952884 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.264436409 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.272406444 seconds)
    (118/192) benchmarking ("map", abs, Int8, false)...
    done (took 2.288061409 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.950274392 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.403652628 seconds)
    (121/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.263881986 seconds)
    (122/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.264495077 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.260233975 seconds)
    (124/192) benchmarking ("map", abs, Int64, false)...
    done (took 2.259365972 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.268100599 seconds)
    (126/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.362756133 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.000136653 seconds)
    (128/192) benchmarking ("map", identity, Int64, false)...
    done (took 2.260465074 seconds)
    (129/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.259539336 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.26023703 seconds)
    (131/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.45167203 seconds)
    (132/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.272441432 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.394822981 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.343866876 seconds)
    (135/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.333644684 seconds)
    (136/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.260227955 seconds)
    (137/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.302420726 seconds)
    (138/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.259670986 seconds)
    (139/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.333130102 seconds)
    (140/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.161440821 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.391909513 seconds)
    (142/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.403624832 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.30608777 seconds)
    (144/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.259724839 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.270646322 seconds)
    (146/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.432468707 seconds)
    (147/192) benchmarking ("map", abs, Float64, false)...
    done (took 2.265174061 seconds)
    (148/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.264933182 seconds)
    (149/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.259754374 seconds)
    (150/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.291131086 seconds)
    (151/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.260231704 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.27450914 seconds)
    (153/192) benchmarking ("map", abs, Float32, false)...
    done (took 2.281218971 seconds)
    (154/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.33851361 seconds)
    (155/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.960481534 seconds)
    (156/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.265604109 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.263066291 seconds)
    (158/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.01633398 seconds)
    (159/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.414717462 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.461008337 seconds)
    (161/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.290371382 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.264243241 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.32278127 seconds)
    (164/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.418452352 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.37023629 seconds)
    (166/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.296865176 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.27603215 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.42755748 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.373194061 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.950465154 seconds)
    (171/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.332966985 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.467512145 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.271078021 seconds)
    (174/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.512512387 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.355357056 seconds)
    (176/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.26354891 seconds)
    (177/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.918813994 seconds)
    (178/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.394973614 seconds)
    (179/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.989282993 seconds)
    (180/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.301406666 seconds)
    (181/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.253292644 seconds)
    (182/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.31829701 seconds)
    (183/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.115643274 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.498326224 seconds)
    (185/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.150602106 seconds)
    (186/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.437021645 seconds)
    (187/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.053478831 seconds)
    (188/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.251858966 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.351485438 seconds)
    (190/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.899040357 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.396373448 seconds)
    (192/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.261412118 seconds)
  done (took 365.048289557 seconds)
done (took 366.241713196 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277879341 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.446035387 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.261312246 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.260248822 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.261058085 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.253719636 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.292675803 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.262829446 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.281682579 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.281684606 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.254091963 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.281290689 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.276858688 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.28125185 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.2940092 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.262913904 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.261324459 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.2783629 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.283879017 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.285822873 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.264231097 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26439285 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.293150284 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.263150602 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.270007297 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271286901 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.268061027 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.264245895 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.27564128 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.285893802 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.267807957 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.269212998 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.28577624 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.281102741 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266270316 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.280385223 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264183598 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.450196641 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.291524989 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.280496009 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.278524093 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.287908858 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.269492792 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.269306298 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.281718405 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.293491698 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273094868 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.280399151 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.268888531 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.244647652 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285986166 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.283761057 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.278103568 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.247065046 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.266605817 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.279849172 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.281274163 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.280591533 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.279845556 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266222051 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.298371909 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.27997366 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.282270267 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.272812417 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.277541345 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.278663386 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.280415091 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.287121002 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.27935568 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267373889 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.267671295 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.280272767 seconds)
done (took 101.320320743 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.393703915 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.265279244 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.4128014 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.2691911 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.434592722 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.411498494 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.268788622 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.269872887 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.268011035 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.118536044 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.268944899 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.270368864 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.267898746 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.270111271 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.397706017 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.269037209 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.268847914 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.008023056 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.271548133 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.409128612 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.264408911 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.271490557 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.270344548 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.122885381 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.2668668 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.260492967 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.411072409 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.269794231 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.015463906 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.263605949 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.265621989 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.015340459 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.412704386 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.290038062 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.280859171 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.279956343 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.436684409 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.287175144 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.396048488 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.397185173 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.414436233 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.310134688 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.263082474 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.266453716 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.274231507 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.273417568 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.271314574 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.301051111 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.269014202 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.271976723 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.00963623 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.280837489 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.281446725 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.271526913 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.271575114 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.292443915 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.2727267 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.273010197 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.412907244 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.273926615 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.396999743 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.125404989 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.121320625 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.272896872 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.265526931 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.274315687 seconds)
  done (took 104.480754162 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.33667767 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.342752779 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.374997985 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.28533603 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.318152274 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.378469911 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.285037141 seconds)
  done (took 10.498769356 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.275007157 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.273149358 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.31981227 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.318697368 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.273641126 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.424921596 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.273719406 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.28006916 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.272738682 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.322148905 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.274000063 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.274822932 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.284086356 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.269662907 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.31689114 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.280733036 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.384500071 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.272419932 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.274915727 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.421019528 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.2739077 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.283720168 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.32200395 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.282442632 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.275530408 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.277447624 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.03701345 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.275766297 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.275964271 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.277002894 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.275709778 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.330419859 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.274819808 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.271358289 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.276660437 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389697057 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.276545439 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277091861 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.276114952 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.272485752 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.27622885 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.27712763 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.275212745 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.276259112 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.275786571 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.295244524 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.27626492 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.277547233 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.276483172 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.277318152 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.321910205 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.277728757 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.275644922 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.276359946 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.327882344 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286577042 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.27614306 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.276380732 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277099583 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.277535573 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.424745748 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.319903548 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.27702211 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.321470635 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.277472411 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.278001539 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.27753653 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.276657345 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365716213 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.277260628 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.321141124 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.275868518 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.451448612 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.29590025 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.278629059 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.277337477 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.277513307 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.278398435 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.270879763 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.280038442 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.277170434 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.276303721 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.28047165 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.277992249 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.278947852 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.438369841 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384772153 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.278716301 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.287949775 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.282841946 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.279201953 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.327377606 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.280093302 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.279531267 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326529048 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.388951241 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.328573817 seconds)
  done (took 131.806454058 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.289398993 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.288377963 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.278760455 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.30332375 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.298873696 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.28297993 seconds)
  done (took 8.923937314 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.285392591 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.288550249 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.287974115 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.288526757 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.287362649 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.288340149 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.28853523 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.284960024 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.289397456 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.287570738 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.289588998 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.290632057 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.290113152 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.287862057 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.288759237 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.28961966 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.289447214 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.288646713 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.28873776 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288875965 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.282586902 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.290487736 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.290016069 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.285244354 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.29010664 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.288995048 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.305001812 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.288863635 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.288780286 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.293220691 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.306395354 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.289231323 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.286956526 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.289427908 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.290987064 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.285589878 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291098579 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.290447112 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.289591694 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.290318122 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.292999829 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.290514132 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.291506068 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.291946894 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.288167919 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.287750646 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.293958364 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.308910201 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.290208026 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.294091158 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.292677978 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.291036394 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.290465101 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.293170012 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.288091066 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305587218 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.293890181 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.293503701 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.291639651 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.288997482 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.29345682 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.293590216 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.290118519 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.293404536 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.290639626 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.293676447 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.288455809 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.293508528 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291786638 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.292959508 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.29399751 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.293152499 seconds)
  done (took 95.145042755 seconds)
done (took 352.027763772 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 10.307366473 seconds)
  done (took 11.501509045 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.327679107 seconds)
  done (took 3.523873379 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.464458312 seconds)
  done (took 21.661791852 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.285845841 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.382166608 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.313948616 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.290845637 seconds)
  done (took 10.466854672 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.38409388 seconds)
  done (took 3.57936409 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.287088718 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.301949496 seconds)
  done (took 5.786244558 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.460344912 seconds)
  done (took 3.654242216 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.711070759 seconds)
  done (took 3.906190865 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.311876138 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.299089912 seconds)
  done (took 5.81169756 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.283434379 seconds)
  done (took 3.479708975 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 40.499619202 seconds)
  done (took 41.695309379 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.302217033 seconds)
  done (took 3.502487321 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.342863253 seconds)
  done (took 3.537827211 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.652082962 seconds)
  done (took 5.846631576 seconds)
done (took 129.150419902 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.281455734 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.284057919 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.28312111 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.282748815 seconds)
  done (took 10.326791051 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.362717482 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.37011725 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.36658131 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.360587929 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.354590824 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.364099433 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.319176196 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.320190802 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.359019846 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.354378146 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.367934574 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.351754984 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.363736137 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.319978933 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.355704564 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.368534578 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.360572652 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.36747226 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.320362246 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.354970845 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.298257688 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.360497831 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.35451743 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.298287581 seconds)
  done (took 33.571375078 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.8075874 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.363845774 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.443631192 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.34273068 seconds)
  done (took 7.154197758 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.450194995 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.412779635 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.425826842 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.455496389 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.502755252 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450726374 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.321205995 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.316524402 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.30320396 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.412129722 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.477461251 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.363974584 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.50510258 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.29490747 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.53505953 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.297109079 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.297118993 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.425177852 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.457938192 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.489557267 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.297565957 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.45075023 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.400791441 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.36734237 seconds)
  done (took 34.910303337 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.305796707 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.317202681 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.298214716 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.315008224 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.298174199 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.299359343 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.298709245 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.305804974 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.299865431 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.298464916 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.298608439 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.312057102 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.30140899 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.299181303 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.306403497 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.299857685 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.301025662 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.305075488 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.306653565 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.300280165 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.30259458 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.30490199 seconds)
  done (took 29.873617869 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.289038775 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.288079743 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.638901895 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.654954607 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.286881931 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.292403487 seconds)
  done (took 13.649974129 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.359127681 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.504004443 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.297274709 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.623094672 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.735827268 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.314502277 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.295395573 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.524950964 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.820537244 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.802366102 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.350965913 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.35821826 seconds)
  done (took 19.187766783 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.296284368 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.294160235 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.300881573 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.311197135 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.346577824 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.317580088 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.304398776 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.289922205 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.350710499 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.368785841 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.320185349 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.346446992 seconds)
  done (took 21.048125808 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381893938 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293720542 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295707243 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295617953 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296178458 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142604804 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366381609 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024885556 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.322470728 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570075758 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295573717 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391613455 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549535606 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296562022 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298899277 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.211124713 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538709138 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806221891 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301015654 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307069901 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332002292 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293733802 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315829549 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.513627245 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158029046 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296516559 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.692598708 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.296760642 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560812812 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309061048 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306554175 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29754489 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582626811 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939608932 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426769354 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494311536 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315071827 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316732742 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.294709721 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.328083795 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303624193 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317566331 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307197868 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296729372 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297625657 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297624976 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018309738 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.327737209 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.29806582 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.299202417 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540242558 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399074308 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.303301654 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.298832325 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315560155 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29900465 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.303597128 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423485582 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884824559 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298955377 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317785118 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.303733725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302608661 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299899052 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975744614 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.320664977 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.305053214 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304971816 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298715909 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299322443 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317972795 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299553436 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.351958329 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30064146 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009288082 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321621369 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301481661 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872403428 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302209236 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.305551759 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529837511 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300307917 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299481087 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.299682009 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299520587 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932984823 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315886126 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.28749335 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343072508 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.030988305 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.523562751 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339186165 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331174897 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.525639428 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.288135388 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300611145 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.303204921 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307750663 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322125707 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019837597 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323491641 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.703204107 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559281371 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.263584426 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315448138 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.227894258 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77710421 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325900214 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.338060151 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302884383 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.507196428 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.926352199 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332931494 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302788134 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337715098 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303527176 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971486534 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304259362 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.328546211 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31500347 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598893534 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.019548521 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30409744 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36933342 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311120188 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.303613071 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303006671 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323292838 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303194721 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.49440265 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325190269 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.31762353 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.304300981 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303634027 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.313501512 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30839051 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.304911952 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52531327 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303932627 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596154277 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30437609 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30424439 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304950458 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.525856648 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.30455943 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.310439514 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567157569 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314206786 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309532891 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318638488 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339741286 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413872717 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334798363 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.305562874 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.564579737 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.814918136 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.311994352 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307116233 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323685836 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314468629 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.313437731 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322048531 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88829572 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327036304 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308597361 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305281846 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.321332886 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372095407 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314023271 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512356039 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.327425477 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335442566 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.31400771 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.314096207 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534316971 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316164648 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.322140854 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388377468 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.768381258 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912084499 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341645101 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.30729122 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.306298017 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.307314917 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308091553 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307789461 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30838023 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507569174 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342558435 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307454462 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.916720691 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325239411 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308633556 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.590715272 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318495268 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.31698563 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309792379 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.307775875 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326122463 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317012718 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.322896867 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445928985 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.323836679 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30925599 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.827791391 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.317013357 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308986458 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309497349 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344374924 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.309523077 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10489792 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589955956 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309432992 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548779667 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314914468 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.330378285 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.309921471 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313446043 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327592094 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.322549888 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340377438 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.32125991 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310931216 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311510383 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86780539 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066625649 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851914553 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332948149 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.322390491 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315705782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.035952746 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332703912 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309859024 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537268976 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045047626 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334132283 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771470071 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.337833685 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045706312 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55483664 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549864835 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309907243 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.32109147 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552162698 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273593322 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344877544 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312977238 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316984605 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.297635756 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841346345 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343598835 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394592879 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032394694 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342782082 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31414903 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.390656262 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325717418 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69477921 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335772467 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312803772 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317559214 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.318114422 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112867736 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33332327 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312112109 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998008797 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340339431 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.781864115 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334132874 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.515318663 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.345420873 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.317177662 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.315332309 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.316483226 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.571879175 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558051262 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314859169 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316755443 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881155366 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.200760342 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.32087399 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316025132 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983230184 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318095651 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585964738 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.321167983 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.319218692 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319661276 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314660886 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315850451 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.316251965 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319894192 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314412935 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795938754 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.330070131 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337125115 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324660718 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31864629 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570052248 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.330191006 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.898981303 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560336535 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316761944 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369187536 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.320985984 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32810983 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.308218142 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315474524 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315112586 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383770889 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536836168 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314995659 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.318020851 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33942417 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274860076 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316103701 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316538959 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54677766 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.336909167 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.318282077 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072763633 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367616451 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315960585 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32251936 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328711123 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362755596 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40282896 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520017569 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.348600465 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.328893761 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699690973 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340950398 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318864366 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.333009187 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40995643 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321485183 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.327930006 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.839348829 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903255253 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090474756 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929274054 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583454504 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324609534 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324348066 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318638107 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455664727 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319377965 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593547956 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317967094 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.314891418 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34127624 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332265293 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326871988 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285383517 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606245596 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319739654 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33150434 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323024919 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.318779677 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.330072458 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.277177202 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808272905 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896480886 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324684491 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328033437 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054693983 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617718051 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318336131 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320722466 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318438007 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.324023441 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.345443019 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.327123697 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325115383 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458654443 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559243354 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981630524 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.353040036 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.357325153 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.927387228 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319876476 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.578752314 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332509979 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.530091065 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933805931 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052669992 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585540979 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38934093 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523405233 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.34165547 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457482507 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.322778065 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327221777 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321172373 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321719984 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.322317152 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.330819503 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924282815 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60543033 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.326959126 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.321882488 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356442962 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.332064262 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.546475777 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973816185 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548451721 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3308686 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328464326 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32380003 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928872951 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588696705 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329225988 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.328862339 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553500077 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346257636 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353807415 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.904923611 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.324049408 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891838513 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.268175182 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344868619 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323826536 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.038472903 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930253913 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.350694965 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817739329 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329826656 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331992706 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603167632 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.330498778 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333528 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616984658 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.600502298 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328807292 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534721106 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.935396938 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08678992 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.332993246 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346915172 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.331424521 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324795839 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336435736 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33001053 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323834171 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.720095978 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349150952 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325696575 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339261707 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.325663427 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32893632 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.346326324 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325715697 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.332327607 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.337579232 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.318097511 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35950199 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456544205 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869243612 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347125537 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.99686531 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.649576631 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581144672 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333556679 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.318901678 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.728440567 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328162116 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325977272 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327253109 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335659582 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89413915 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.333641063 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.34008071 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332183194 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.327155086 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285425704 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331021481 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538417462 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350452306 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363130694 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.313707782 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327125353 seconds)
  done (took 952.707819448 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.341009002 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.3453701 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.344205103 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.374986208 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.340058396 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.438240246 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.326295255 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.339746203 seconds)
  done (took 20.081679059 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.390961287 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.411999233 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.392274505 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.412465252 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.333748828 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.853226743 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.406938957 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.410038233 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.425950341 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.389049566 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.388743235 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.045042919 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.430430922 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.384304778 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.399826708 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.333791245 seconds)
  done (took 32.640730132 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.800232797 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.799527859 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.757668493 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.397163532 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.386306945 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.325465108 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.785817117 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.34210839 seconds)
  done (took 27.827630179 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.337762768 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.337708452 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.338348858 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.338753223 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.337623915 seconds)
  done (took 7.922915398 seconds)
done (took 1212.098429856 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.338087796 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.337631304 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.338474524 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.340452568 seconds)
  done (took 6.588015626 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.318881725 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.318098698 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.318337762 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.334171349 seconds)
  done (took 9.523414588 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.986547396 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.905527948 seconds)
  done (took 5.126257596 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.823212838 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.814206404 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.813855227 seconds)
  done (took 6.683331301 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.621728969 seconds)
  done (took 2.854676855 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.327109983 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.327500163 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.33143847 seconds)
  done (took 8.219822618 seconds)
done (took 40.22924717 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.337637807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.579026179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.484531887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.327380935 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.513061222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.484956629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.063396202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.327000984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.330900166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.339220101 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.326228365 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.487335232 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.118206347 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.584301601 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.117014097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.577253316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.487372183 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.331570669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.332029677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.340427066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.067721328 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.332574222 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.33113254 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.328438008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.504930555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.473773611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.332902591 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.576875151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.328278937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.32918247 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.47898568 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.329253763 seconds)
  done (took 81.139630121 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.328501554 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.327771541 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.339948648 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.334470852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.328220926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.343757444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.330938402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.328433201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.356661738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.338900624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.345378115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.346485956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.335160093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.344041809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.334836206 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.32931283 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.352449227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.334991939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.349619027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.350376355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.332389428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.329904466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.346381187 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.345066016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.344541985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.341519722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.329714977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.343579067 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.329699806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.329734036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.350212657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.341208888 seconds)
  done (took 76.082176642 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.329857753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.358440832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.336830543 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.334678322 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.350761282 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.352893522 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.338091129 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.339386303 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.34551228 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.335145377 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.349448442 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.352518787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.334942688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.334249492 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.350325411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.342228743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.339518934 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.335940698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.351214962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.337898144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.35443746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.339948854 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.335961964 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.336981583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.349031528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.337083904 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.33771948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.33767674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.363905972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.338064817 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.338338282 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.335907953 seconds)
  done (took 76.193638037 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.619720035 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.342881247 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.344769587 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.336937544 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.344604788 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.341842641 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.333713919 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.624274856 seconds)
  done (took 14.528712663 seconds)
done (took 249.178614383 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.336324298 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.849221154 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.386061082 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.337154553 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.375967458 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.362708606 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.898264574 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.384537192 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.55599256 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.359389812 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.359067171 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.341039405 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.125788954 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.80929363 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.357623589 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.360275315 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.189484626 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.337870414 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.889260367 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.3449305 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.367564472 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.339173192 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.344533052 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.208250595 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.330140405 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.415465246 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.434681206 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.358699 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.497701583 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.420375231 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.848035221 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.360766745 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.356269622 seconds)
  done (took 65.483869329 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.33935708 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.449390814 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.345888741 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.344834339 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.448660272 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.363328979 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.340496789 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.344653942 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.345211312 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.3443323 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.345686138 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.34769677 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.347473749 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.375739198 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.452715355 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.341062578 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.341909254 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.445318736 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.341898838 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.341951647 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.374849723 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.346760942 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.349233269 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.378747912 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.347913705 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.345876316 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.447117426 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.348611418 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.351067632 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.451508599 seconds)
  done (took 42.333409125 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.34852555 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.926444347 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.049361013 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.357125365 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.344435718 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.347823263 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.610922412 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.353254184 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.347018213 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.348253297 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.825291044 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.370047737 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.378458346 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.065489917 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.351439706 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.350439467 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.350195756 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.344865109 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.919300726 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.353071623 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.630826758 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.355442596 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.612445839 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.359964211 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.366512522 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.346646791 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.350852732 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.13263399 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.363105973 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.820982026 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.082202733 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.614352966 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.072125918 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.088811136 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.085127243 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.356192982 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.350866762 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.827600528 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.368150811 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.346786339 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.613305979 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.354043037 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.05437011 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.046040449 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.368081559 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.351069408 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.153244994 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.857137469 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.602909289 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.357512447 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.119451594 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.370735717 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.353874438 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.348439433 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.58696069 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.353585655 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.347392221 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.152999457 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.372797997 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.615168863 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.356669158 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.348933131 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.931975803 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.350136291 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.921748906 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.353229076 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.356812081 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.366274027 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.071294779 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.368571712 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.051593035 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.369031761 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.353362473 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.831605634 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.96459159 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.224165593 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.355296221 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.946854835 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.109914338 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.635906644 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.35939793 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.131508292 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.637861029 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.356215818 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.355753447 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.357186599 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.354588411 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421217301 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.613691184 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.01579491 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.032085057 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.172808871 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.638093698 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.365993739 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.351433015 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.166622848 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.378195647 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.354679273 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.068697864 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.05409756 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.37113907 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.357427305 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.056699402 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.374320666 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.621868613 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.359055271 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.112207617 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.372622435 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.433855987 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.35537056 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.358130241 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.37133569 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.621238152 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.359944777 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.35601665 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.020204377 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.852533806 seconds)
  done (took 189.311594468 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.34852493 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.347798329 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.347709532 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.362366678 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.344918667 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.353146108 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.346438812 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.34662501 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.3516751 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.346554518 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.34688394 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.352757559 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.353712176 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.347085571 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.348933056 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.347875699 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.346829993 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.35112709 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.347747309 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.346469848 seconds)
  done (took 44.238431581 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.356452592 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.88478789 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.867171964 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.364087285 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.356127895 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.352613038 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.406074241 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.377605416 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.356087284 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.63704558 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.5177731 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.378511105 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.359240166 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.357949971 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.850121501 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.355707273 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.636857307 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.889760141 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.363853521 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.886912835 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.352450155 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.357733444 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.352759673 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.885752005 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.662840267 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.625561432 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.413237044 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.907178078 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.379444784 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.358484815 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.887342402 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.365240206 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.355808443 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.887298061 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.379323897 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.627927678 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.381730689 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.408887916 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.429925749 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.661270173 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.897128548 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.647289253 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.674049006 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.346433069 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.359567497 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.350217523 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.893575013 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.380705656 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.349269303 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.360846438 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.366380265 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.858824287 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.376080369 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.858975182 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.380751727 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.361510952 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.890234123 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.864967577 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.874537578 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.52279665 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.375623521 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.623872075 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.36602033 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.896376693 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.381893959 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.360400335 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.36117908 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.519575951 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.910800494 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.629035826 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.646112365 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.647121571 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.366418461 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.416832653 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.380134378 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.643197429 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.421888476 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.345925758 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.649002787 seconds)
  done (took 125.048175831 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.602423858 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.468135353 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.746877062 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.318970584 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.361215 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.37271824 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.447828262 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.98464508 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.358942457 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.444573788 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.358733484 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.354682554 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.352947726 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.440902746 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.477631456 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.832470748 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.379477501 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.353985353 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.353208068 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.956814236 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.362060647 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.459476579 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.213534815 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.568492758 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.364219982 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.353129836 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.373027427 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.363194725 seconds)
  done (took 58.283295656 seconds)
done (took 525.939824208 seconds)
SAVING RESULT...
DONE!
