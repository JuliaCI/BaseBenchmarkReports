cset: moving following pidspec: 15732
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.23326922 seconds)
loading group "string"... done (took 0.552246498 seconds)
loading group "linalg"... done (took 7.56376696 seconds)
loading group "parallel"... done (took 0.171741984 seconds)
loading group "find"... done (took 1.16900671 seconds)
loading group "tuple"... done (took 1.834265728 seconds)
loading group "dates"... done (took 1.255645734 seconds)
loading group "micro"... done (took 0.232248539 seconds)
loading group "io"... done (took 0.766630838 seconds)
loading group "scalar"... done (took 40.972332159 seconds)
loading group "sparse"... done (took 12.950108327 seconds)
loading group "broadcast"... done (took 1.149712012 seconds)
loading group "union"... done (took 13.494736487 seconds)
loading group "simd"... done (took 4.786783302 seconds)
loading group "random"... done (took 9.70259587 seconds)
loading group "problem"... done (took 2.199450095 seconds)
loading group "array"... done (took 22.697651215 seconds)
loading group "misc"... done (took 2.127181653 seconds)
loading group "sort"... done (took 3.469513446 seconds)
loading group "collection"... done (took 19.525114834 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580201693 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141945185 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150954555 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147583624 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190415841 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157415451 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158993846 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097340363 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.007386075 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182004755 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152818273 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52830497 seconds)
done (took 5.285432672 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217605424 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095308701 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104196435 seconds)
  done (took 0.936079363 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076636365 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145830001 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095263764 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07788088 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095074177 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077441414 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094367128 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07958908 seconds)
  done (took 1.405585201 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086449642 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097303338 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082089022 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.09685901 seconds)
  done (took 1.103328482 seconds)
done (took 4.484748305 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.744744887 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276289893 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204993958 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465573558 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195836867 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216451547 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676333125 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.363167875 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253032786 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100072909 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142226045 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388204945 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137757597 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687003655 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091073091 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123255045 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177867944 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.466646137 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084052166 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109791688 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117557177 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141743034 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130526742 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093105486 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184367907 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081144832 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.196349988 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109251291 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080070686 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289106165 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200724336 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690557425 seconds)
  done (took 10.996972688 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110736344 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134239259 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09836254 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138205587 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13675353 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100461082 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084011226 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096905757 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121605252 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175115446 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113357933 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136485512 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09562008 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081586361 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116297765 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245464421 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119198602 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103978941 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100997079 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104047813 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120991992 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113573634 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108456437 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093244367 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166887862 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225211737 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113525836 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129209838 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099516219 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113848306 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144178427 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144050765 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097212645 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080279521 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171694906 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124845891 seconds)
  done (took 5.212330191 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.101337707 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189780352 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121131821 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.17060393 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079797924 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142199704 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095175339 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115148505 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260969322 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.172758382 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177274627 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144305784 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101765209 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097428603 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080809395 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096983849 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.657631329 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164734013 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137367783 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098880378 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106652943 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101592247 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367322893 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086305936 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096060313 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080842138 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082834019 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160312733 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08181637 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.179555543 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104049901 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10151916 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132484454 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198162556 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12948317 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119037799 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098115627 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155983165 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095871291 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178847453 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08764706 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09790475 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101367573 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135583375 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134514697 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097953776 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081353055 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220245245 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079711659 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113412015 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937735407 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077889127 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180156723 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.105686735 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078035275 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32358286 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120905426 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078196423 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095418344 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278461596 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185911737 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099776404 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079696819 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096349685 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079875243 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401222145 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080924959 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.717784944 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083501352 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107648405 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082163732 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096261419 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102561591 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086701753 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115001419 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079495369 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098321847 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078686201 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096135081 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080774375 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108912328 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101540821 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081623386 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165389146 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080059482 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11667427 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126285933 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084355861 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095250115 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129783808 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082904842 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097821647 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.075921661 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133134886 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099304004 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107807073 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082779448 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144533404 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098501681 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.147417448 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096139308 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077886421 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12638973 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100649256 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130504098 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117157509 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083209614 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102411197 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077119693 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096654689 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159926669 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081651467 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098331028 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082167702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109150001 seconds)
  done (took 22.62843425 seconds)
done (took 40.677923297 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.319287596 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104395387 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104634843 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10390413 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100931864 seconds)
  done (took 1.547953267 seconds)
done (took 2.334973871 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290870823 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172809382 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096575522 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16836836 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093675679 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174313664 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16044615 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112234175 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201271231 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096334153 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164365088 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094907762 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076931792 seconds)
  done (took 2.718415355 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094952685 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115838656 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083083629 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112009485 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07626358 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112701275 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092296177 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118763146 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111006269 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086930639 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09452496 seconds)
  done (took 1.883650266 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095552767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113880837 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082078606 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11114777 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076698919 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112667158 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092353835 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1171313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110875141 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085697906 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094919229 seconds)
  done (took 1.879805932 seconds)
done (took 7.259057185 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091544398 seconds)
  done (took 0.869416735 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.949652751 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.084012227 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114016526 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150690557 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.300688301 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.197848284 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.493344997 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128163475 seconds)
  done (took 11.403845935 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.147378556 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082734256 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104568176 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086386222 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105765138 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082471407 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103261685 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100232494 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08277569 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.10059404 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08302945 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103682254 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103172678 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084049301 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102907036 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08353012 seconds)
  done (took 2.40160877 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119131643 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117119854 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107974827 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109425438 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085458081 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106841434 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106574953 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088418559 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103096088 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104146534 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089942772 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107139846 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103697047 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079395177 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107030353 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108808996 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085152056 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107283689 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108270396 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090481159 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107949474 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09629539 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086956707 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10754832 seconds)
  done (took 3.32984722 seconds)
done (took 18.786273413 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162992224 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109880289 seconds)
  done (took 1.062056667 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095834128 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114448856 seconds)
  done (took 1.003206407 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097044893 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097213771 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123995259 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111076531 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081377289 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097583219 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122201428 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079643113 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098607836 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079484851 seconds)
  done (took 1.784569057 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083391688 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111153178 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101993117 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094934256 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107977568 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096061569 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086754512 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099933028 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109946651 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077189327 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103305785 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114563222 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085087348 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118474092 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10600277 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081906714 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105018377 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101543318 seconds)
  done (took 2.583638164 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080282237 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098287915 seconds)
  done (took 0.974576442 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081873065 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095109274 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081557452 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099651769 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096792786 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079974917 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097097454 seconds)
  done (took 1.427894712 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.493101065 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137690663 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25914624 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086201178 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124405877 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.309391531 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100061796 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084832578 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104227463 seconds)
  done (took 2.556007192 seconds)
done (took 12.184588024 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093899462 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118456553 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111435759 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.476316263 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110144737 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.102618507 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150080354 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256274938 seconds)
done (took 2.217006537 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.143359844 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327900148 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117932337 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.0675378 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.099853108 seconds)
  done (took 1.413248898 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080340117 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100530343 seconds)
  done (took 0.977682169 seconds)
done (took 3.338628785 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081142593 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097800687 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078750842 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130488714 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079078449 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09939201 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077730096 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101220361 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079794606 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.10122123 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098485207 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08235031 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09871661 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079776347 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096652705 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082368448 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097195795 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079718555 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097419709 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082111274 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100589271 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079488109 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097472588 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081776896 seconds)
  done (took 3.013520704 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099976831 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102894718 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105241192 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087715627 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105224311 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086403765 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106858808 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100400734 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087455401 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102987609 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102857022 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086376716 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102573739 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085083581 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103576163 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103683977 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088172351 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10120436 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083064082 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105039966 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104941865 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082660221 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104729273 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104663933 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087142489 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103451178 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08392255 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101147624 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10493093 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086151305 seconds)
  done (took 3.711960068 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085659198 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094755308 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079688739 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102994276 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078514881 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099528407 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07915772 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099409679 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080959542 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.100003347 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080844077 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099232913 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079196821 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100666218 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079943895 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104022851 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111975221 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081212358 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098808451 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081114383 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102010974 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079872807 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098822821 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0790604 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098023983 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079222066 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099242331 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079221521 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099026805 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07859148 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102517818 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082024695 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100136903 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086135832 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102933 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07859169 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103797823 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078247451 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100196751 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097015461 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08105049 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097772727 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080506563 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10472681 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080515993 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.10018073 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079766026 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099936068 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079872476 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102215853 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078618847 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099448173 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080867693 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.10040334 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082977635 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099547036 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098071222 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080299098 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098946813 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080776967 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097721469 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08027011 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100615235 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080681766 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114307621 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086036848 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098916253 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081277855 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100571979 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081288248 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100850059 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112289304 seconds)
  done (took 7.389593946 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084126958 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107409453 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081074505 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101064407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077466637 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100499959 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102462043 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081269276 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10020945 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087461991 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100441687 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081004623 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102038382 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110363219 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081769625 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100655494 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086983872 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098089299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080902514 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103238655 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080284394 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103588634 seconds)
  done (took 2.86466373 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212513904 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109196031 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146319802 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110375998 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084375282 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110288475 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105601705 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088921807 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106259869 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084534352 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104652155 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105390779 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084986288 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104793988 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103184345 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087476679 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105527067 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086895162 seconds)
  done (took 2.75610424 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093823133 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101119195 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103036399 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103251308 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101856297 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085750143 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108175708 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110792041 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085773473 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10187685 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091891765 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105537446 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10363339 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084276782 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104167117 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083467669 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105945384 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082415451 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112556365 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108376488 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10697065 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094033209 seconds)
  done (took 2.996651833 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097006135 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10334891 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121645841 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087447272 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09828036 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082237391 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109889731 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083611844 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111737772 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103315251 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083649081 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100709441 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089701376 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102801244 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106933673 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083160852 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10360608 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083442012 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104815268 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078601817 seconds)
  done (took 2.754039003 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102747452 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103624988 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.212976919 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09500357 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105270507 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083679686 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114489421 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10419016 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0842502 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129695058 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104676961 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083642446 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114264887 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109588905 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103837719 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094570354 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11423124 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112570702 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084374117 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104380436 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129597392 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084033633 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113004363 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103770717 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084400879 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104935439 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103013373 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091067434 seconds)
  done (took 3.795764212 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081948525 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098931445 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082282245 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099608285 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081472186 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099032865 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081131617 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099677967 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083310008 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099111665 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083480283 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10157841 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085397702 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102177706 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082863836 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102350198 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08301599 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100471853 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080719821 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099620479 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083040621 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102183747 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082599852 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10055988 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080835695 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102732613 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080107639 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100455106 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081840792 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101416882 seconds)
  done (took 3.566145784 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091138739 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108465601 seconds)
  done (took 1.021646411 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079242471 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116882997 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080769539 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106940741 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087782553 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104998371 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111620082 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088086504 seconds)
  done (took 1.598125319 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096597047 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111935492 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084947561 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116356755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113132105 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097505973 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169348454 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104506816 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088442941 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102373611 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116328019 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083742166 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108833254 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083853965 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10880366 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090461367 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101390309 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088706706 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.106825202 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101562458 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085805571 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114527378 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085680683 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100799917 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084005115 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115107422 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112421193 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084514689 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106951169 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112273354 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090939018 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096458405 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085207083 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103720134 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081160849 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113289419 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11543041 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087704886 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11250392 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085160285 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115269697 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09774122 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089842773 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108672681 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094833514 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105006338 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084623291 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09965514 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10007169 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086700771 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098746553 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084296202 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09711933 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091764347 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10824284 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115726396 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08347818 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104477942 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087190986 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107130363 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090253593 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106979966 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085090577 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103211912 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110664098 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089737676 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111252297 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078710062 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.101110319 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081416113 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112923533 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12660109 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092234879 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106020519 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083868379 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.103051532 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106671913 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086163047 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112282889 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09275239 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104345509 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110086147 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092027976 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104112815 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08659787 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112794706 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101733866 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086940284 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101188501 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098155812 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103300176 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081689657 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102022512 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111695913 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088247851 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103701919 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081701726 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110800829 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077612066 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105533211 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085194465 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10447763 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11243039 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090040109 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110948233 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111036192 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09231978 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103660419 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08727193 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100723447 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084864286 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107592089 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09067981 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.098413595 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10583023 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087044138 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104888198 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091719221 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102841858 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083872868 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112870229 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110350699 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083378615 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100356207 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08768623 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10416636 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088222 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111046408 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102210716 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080415892 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098530964 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087969775 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104062943 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088894656 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110059143 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106496963 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07947317 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10196925 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089019631 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112205545 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08343756 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106176773 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108211026 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085858262 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103301929 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08994352 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106222821 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082778187 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109095803 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085247533 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100592906 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107976198 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086945675 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102951623 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087802925 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109019213 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086197594 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10677254 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102129751 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091013543 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106093767 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082905569 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105052314 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082966013 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114001952 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105821398 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080480302 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.10075348 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092261606 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102467226 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083609475 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104465753 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085615749 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106641558 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102477267 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084705408 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105316578 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096912754 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110383206 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105088712 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089878971 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114471216 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083802485 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107244439 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083269799 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105999494 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105129104 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092161896 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109642174 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090484267 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107324029 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080086621 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111655877 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112379126 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084250926 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102713287 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083439562 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10971166 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111252959 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089115071 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105224863 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082384689 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105377884 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08824833 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107998389 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103605475 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084687957 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108903116 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083860378 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112173303 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104965978 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094719358 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107782893 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080876829 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109424627 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081589113 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111965745 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079094561 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103275183 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101924043 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08672428 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102725576 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08757055 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099076421 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09162482 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113530668 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084485797 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105987235 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104092571 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094944308 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10589289 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087927144 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108401554 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088626942 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117701212 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104204479 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089015319 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114885205 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084518196 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100156158 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108988618 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084312968 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103583857 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084518346 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102674912 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088608294 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115598951 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108715842 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080197365 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10779422 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08496126 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103483639 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080907629 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111748481 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087895442 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107377963 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113332407 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087575094 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107078213 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089879456 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105302913 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085881114 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106988683 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108824337 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086402256 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107692854 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084258164 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10762339 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084053916 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.106923062 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086360153 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106113769 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104309651 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092209199 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105216092 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085974764 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.1082061 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085844629 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106845864 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084806691 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105617702 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107680636 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086383379 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105328802 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087944686 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100352472 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092761504 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105973874 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091646037 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106327686 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100915194 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090820388 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108487228 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089401596 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107031899 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10574885 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087291759 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10492893 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088019774 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114819049 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081943514 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115478001 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110501062 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086435509 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108196209 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085348229 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107367387 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084040048 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107671192 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085383468 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106161299 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103192208 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091292493 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108531368 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084982225 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106879992 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086460372 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106546165 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085912758 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100775972 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084053261 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106115323 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105756059 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093366621 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106879132 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087269501 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105107419 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086799328 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.105055514 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100421582 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094655544 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116137587 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084518646 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115124321 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104256687 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08664937 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115477004 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079389197 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104958678 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082956869 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104006674 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113125375 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087762797 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113608111 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084726588 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.10608585 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082302477 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107229805 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083432821 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100709753 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082475343 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109737997 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107420593 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08513681 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106300244 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088176086 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108080852 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101034869 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10579199 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106555573 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087486948 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.102758274 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084852524 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104858098 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088308578 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106839073 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082847972 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104643053 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084796373 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108330871 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085094383 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106879548 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107268504 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093098501 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105771108 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088183218 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110612106 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07964741 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109756494 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105502324 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086439955 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105332819 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090264136 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109715474 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086784754 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113776504 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105473666 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086750798 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106673555 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083564221 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10580984 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085055476 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106608348 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084309723 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107828262 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114178508 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084156877 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108365366 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085690547 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106812285 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089933127 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108012619 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086642484 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115136752 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10990061 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087151928 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112760157 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08880025 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110192913 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106627707 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087742604 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112788937 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085172134 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114776921 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084184483 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107360452 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107195862 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085058244 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106320996 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085732218 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104304818 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090333892 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108649668 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084659587 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106322232 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083000119 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109513024 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109634748 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094053221 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110261709 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088368602 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102866797 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082433264 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108648973 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103102026 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088902731 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108833806 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092432976 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109545198 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085731231 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106549058 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113566028 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093348318 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111518519 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083289953 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111756976 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086799777 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109835311 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106567411 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086862413 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107374982 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091752322 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108637484 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084951013 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11534634 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109336187 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088589054 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10775475 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086627404 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107227755 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080858677 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108731932 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087624726 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114505727 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107771921 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087101079 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115635348 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085293927 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106386434 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089735984 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106355742 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112458882 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082098909 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107593087 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087411646 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109120594 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080508836 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106843718 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082836181 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110788197 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084124962 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103717854 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116522927 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093688872 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109444363 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084399862 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107189025 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080794812 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102204955 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084068941 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109494184 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108811054 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095356404 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106388931 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085480148 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.103060616 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085102709 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111052344 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109712556 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08419482 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102099768 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08523549 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109440203 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092504722 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106332702 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085336281 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111162131 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107679077 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086062054 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110919644 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083305278 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110546646 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096593093 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109237404 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106375149 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093220437 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115544846 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086790496 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101322928 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086559483 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110941621 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086025801 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108405708 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107685414 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100386654 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110832686 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084565569 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106607667 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108244722 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087082869 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114567199 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088541008 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.1093501 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090214611 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110286345 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116627102 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089406563 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113319212 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087736376 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109941462 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083961002 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107547976 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104164443 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085476098 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107468411 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087954563 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113539685 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115130166 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086991602 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11721739 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093864536 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110621254 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081328638 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105323018 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081624167 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101722575 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104769579 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084731829 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102287069 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084574092 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103591477 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084584115 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110762227 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08647415 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107726167 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105845824 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081955409 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110801201 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089575562 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107589877 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084050144 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107804139 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087737836 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113492934 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11034584 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088174529 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108176338 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088449269 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109472005 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082073311 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113196846 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084854123 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108920546 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085472411 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108602921 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10760815 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091047311 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113483124 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087596498 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108765543 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.120098812 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090292841 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104068431 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084120823 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113133683 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083639924 seconds)
  done (took 59.709432642 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149110756 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082244422 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101429858 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082131402 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11732259 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103499309 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082134184 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10435341 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083783244 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106697842 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081312744 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103907424 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112638873 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129269954 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096421241 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109116521 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080394141 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104170155 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101821752 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083587338 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113333098 seconds)
  done (took 3.005968062 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104265725 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119415178 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117877 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123813045 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092452564 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120292762 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119655029 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120035872 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103411021 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116380656 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123494675 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119604887 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094170253 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115796767 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115384203 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095402904 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121880592 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114301911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119446032 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097977582 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116870877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118939188 seconds)
  done (took 3.365185818 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084671829 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103088987 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087767263 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098954823 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085707219 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100181763 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089180633 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103137296 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087383689 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105263369 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084110744 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.107151026 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10827958 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.08238154 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10723035 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084515062 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155483433 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112911217 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085037238 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10984418 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080779981 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110499206 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102394796 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083239217 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10630885 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090616651 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107754472 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083985599 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105025863 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081426376 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105646433 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082396181 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10747072 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107251843 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086697071 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105988957 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087145791 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107902775 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082935741 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105925921 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08641437 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101096485 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086681474 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107751886 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083160836 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104682881 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08702313 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106464872 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.081431615 seconds)
  done (took 5.635420554 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105760656 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162510497 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088461661 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145605287 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122273131 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115298783 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090549458 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.146570651 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104284042 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082338925 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124197062 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121633298 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106775557 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092254386 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10987421 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10871372 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090088499 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108672475 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090921799 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107461901 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113488764 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094082352 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124310395 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123180161 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112908272 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08646921 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108438014 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112399892 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101983615 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11536047 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114441954 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094296588 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125182396 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.114509247 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08540959 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111106017 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127213888 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107650026 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091434355 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106386167 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.0902322 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114264354 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114372094 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105178819 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107554543 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113838748 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087514142 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106961326 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122671796 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089831787 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117697164 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124909732 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091087762 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110971857 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114229729 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124634539 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088727243 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107955211 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091063385 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122571553 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10684501 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09189522 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123778581 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11166117 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115538496 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103301731 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114711971 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112740913 seconds)
  done (took 8.444017808 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09472686 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113651678 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126645877 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125820475 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094279649 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116994597 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116393699 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093655303 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113980549 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122892762 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115346616 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139440193 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090555898 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119135188 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115432058 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094972341 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114087498 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112437674 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09161998 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113399458 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114069572 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124921973 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093792286 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123391885 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143387528 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109907052 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093280234 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113287593 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125897758 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115825896 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127429445 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094711028 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114618761 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121667003 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128684465 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094192773 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107709167 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115217578 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095248005 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118141404 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110872409 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103441077 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117312791 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.11153323 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094942906 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117770442 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126715624 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129751901 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120089549 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10071678 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116957667 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126753875 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114966078 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094821869 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124717815 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153243722 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126586981 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126313407 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116694373 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103643379 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12551322 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134496867 seconds)
  done (took 7.986092821 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110612162 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117930665 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123919524 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104635191 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086846665 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114972912 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085666345 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108638601 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119389313 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098216099 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122402034 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114454069 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095094342 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122852635 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114816545 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117691831 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092112919 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115374247 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119634135 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115331807 seconds)
  done (took 3.091825139 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095361519 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127786836 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088141049 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118274133 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.11362802 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094518399 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.1101114 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111410781 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090027618 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113275208 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099091376 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121939432 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111171556 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094351607 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119164848 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117576465 seconds)
  done (took 2.611557471 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097559672 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119747114 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121869405 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085167927 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105921086 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080281279 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110001304 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102579106 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081041382 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122102697 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083469418 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113199788 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110060509 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087055819 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105382884 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091370136 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106963001 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085988124 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.111166303 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125405618 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099845628 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.11038822 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110634099 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091736084 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111008778 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09268416 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108837339 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104453388 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085001438 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10708771 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084473409 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115473436 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10393209 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087939414 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107625349 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08629774 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110787528 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088476818 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114894146 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109604333 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087795175 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109838695 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088180247 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111423054 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083822213 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109875255 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104424862 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096105014 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108675063 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088758332 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110165319 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089394579 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111774093 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121744458 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092314592 seconds)
  done (took 6.482167809 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102419242 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114166774 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083605092 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109795487 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091526341 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.11429297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11424834 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092221684 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11243328 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087087285 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113364075 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092339593 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112753185 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1147382 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091173124 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115332447 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083953526 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113377456 seconds)
  done (took 2.754193753 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095177307 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106626145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093032724 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108275909 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088060487 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110824346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081749929 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108221388 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104290799 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09018946 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107509262 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090641208 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105491808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088173248 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108179311 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084594458 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110414065 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103981162 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089330609 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104280832 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091205237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109316025 seconds)
  done (took 3.075956764 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121354484 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12625145 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091737686 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.234337073 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10288833 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133672144 seconds)
  done (took 1.707597941 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109598647 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123534796 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107266543 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107499867 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116892324 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088807509 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111512063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109174532 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120886042 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104524317 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110538986 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124010221 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123280504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100352388 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119230215 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120488011 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112138655 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092796571 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112062186 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133773872 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091138302 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121104668 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114658026 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090186857 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114373796 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122429567 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12418785 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126937968 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092784529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123665987 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119286542 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091534979 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124368984 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127967568 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113372346 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102509548 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114075542 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133687827 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119774977 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101219284 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113900845 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120100554 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101230379 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11672085 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120134274 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111865934 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096236931 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111317608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112320635 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141500342 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097308965 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122866538 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12138451 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124093869 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100372167 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163940558 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106070777 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123793843 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120973898 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128691713 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122280826 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097700912 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118985945 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12554996 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120243224 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123104476 seconds)
  done (took 8.47690257 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104129943 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127797799 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109988661 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124458151 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100285625 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110376255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108783363 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087869407 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109634863 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107174816 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154294408 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088852598 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120424904 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119774678 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087041507 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111918656 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109449061 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117184206 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087810273 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136772678 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11172849 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123725069 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123143212 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101119819 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128713769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121365074 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114279269 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092560929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114211756 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113370585 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098378184 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11445996 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123114078 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090408123 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122051053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11543116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091289389 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116966562 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114845717 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120713963 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102238833 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134810919 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115304149 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114037403 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105322528 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115209432 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114149689 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090435942 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115210038 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112902991 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106590873 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129368891 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129820859 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124534373 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114272506 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092531069 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115559609 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113780452 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092567379 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117000889 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119098123 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086748309 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157480446 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09197225 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109861533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121922803 seconds)
  done (took 8.32056112 seconds)
done (took 160.930630772 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.222540101 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.232558248 seconds)
  done (took 1.353893815 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100686007 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138684197 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099311785 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174236566 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108273223 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12441669 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138960089 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097217164 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108610777 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086311308 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108497514 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089311426 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173935246 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085244213 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.111409106 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108960468 seconds)
  done (took 2.763608103 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.2036574 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.267723982 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105221181 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109454915 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092156222 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11671591 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109941612 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.095985395 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.116817992 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.089670967 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115195503 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089878727 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.11111077 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089639326 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115167194 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091391622 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.112843212 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090952542 seconds)
  done (took 3.033191788 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116652513 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151266611 seconds)
  done (took 1.181888369 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12090581 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182922938 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323403317 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.162943973 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111745929 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.133428158 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.163479566 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137628775 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204684551 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126921821 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127727574 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.102699148 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147339529 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118289574 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094396316 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121042236 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144146035 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092719783 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.118059052 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117207489 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115157003 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108672039 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116376006 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092857148 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182641615 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125808319 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0883084 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109963135 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121444166 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09927589 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.118253114 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131902416 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.101929185 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.186175175 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106372319 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.184754649 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102162521 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.116537383 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118832673 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096198503 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120183423 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118049978 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104237205 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120527218 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083460631 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121229605 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107159473 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085357617 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115368317 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098491084 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117525103 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114037336 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15753797 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125053731 seconds)
  done (took 7.769504783 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.8042546 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157880647 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089692169 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.89835675 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143630497 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105781375 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.790440409 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.140009272 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239637003 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769955395 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134463726 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122144388 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229448349 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.243743577 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955355783 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309882839 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.676842886 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101487202 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152264247 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154613034 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118796894 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137218484 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108769131 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454226538 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095806933 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113127623 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094507968 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123162822 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160041203 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12557133 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11530619 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179113077 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.25252252 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206471037 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121189241 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091535242 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113900792 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171215162 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267805398 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21664499 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18020207 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087462329 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112015476 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099575347 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133039465 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109961652 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169824795 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179290007 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19463899 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094088954 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121386151 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120168142 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098305271 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.190077387 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101785403 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.323097836 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314155372 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111921228 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097678268 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12898005 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267078124 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123075292 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201453389 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142816761 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214612027 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115044676 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785749823 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191012908 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089818386 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118403107 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096313095 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120683619 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12183214 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16871934 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393315816 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123615003 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093560874 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112270021 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204573999 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126033119 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111113733 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167063463 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097731003 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123257361 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131257336 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127886296 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177420176 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.237660012 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124393493 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119673289 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093773729 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12636087 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116027977 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212119666 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222085216 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.168948503 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21633072 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122897718 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165845372 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.19148285 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098338213 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196503735 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102474462 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126814114 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123215907 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216560135 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145120299 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101519938 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117109241 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118157252 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148246149 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106059553 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120183172 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171395238 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479228923 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170756826 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109140763 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105517437 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121650107 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161276586 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118725724 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260824942 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09979658 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192320069 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100291277 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110682965 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12135587 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.171659047 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126781376 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100359268 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124828237 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119416021 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235691483 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220718136 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101189858 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245009861 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184994207 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118734686 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173971248 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12173767 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169051687 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120030166 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099224532 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118720986 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799777815 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101264716 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122186957 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116135385 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187499038 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089413658 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125102466 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125245269 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086931587 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778896903 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128096083 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098264297 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125758206 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120129593 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119571387 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098346514 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116619976 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164101686 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231677126 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123170665 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097447812 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126613267 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161482469 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118626057 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125944474 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125000457 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10352472 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123564209 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115804057 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103353768 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194222089 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162614148 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22294949 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571142659 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113974928 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124348298 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20621357 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113752057 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290566323 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119085878 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20433287 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189097536 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098874457 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312785306 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190340118 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191799119 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107710275 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19784701 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090481995 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119003775 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166995515 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116580899 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095850495 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185910368 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107796861 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126872257 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.965729241 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089210905 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249090448 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092225796 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171351088 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122760342 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122264224 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298691654 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090363579 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129332367 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165612174 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116193089 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124693842 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70742461 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126425703 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121835151 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096246596 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225781882 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163798226 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121543879 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120741051 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097734931 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190658435 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211319854 seconds)
  done (took 44.438468127 seconds)
done (took 61.442965939 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279094606 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217820639 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26907885 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171043062 seconds)
  done (took 1.950382701 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172489167 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151786861 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120855747 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110852561 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152791546 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083891777 seconds)
  done (took 1.729017487 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.369510716 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282140803 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246840263 seconds)
  done (took 1.839453847 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288956324 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247670265 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.482754865 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.335529769 seconds)
  done (took 2.417439314 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211962561 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137048587 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11230726 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104213842 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.203792702 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.258851769 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14947408 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.211042521 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104194563 seconds)
  done (took 2.479016165 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.202759046 seconds)
done (took 11.55756538 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.135411708 seconds)
    (2/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.122218057 seconds)
    (3/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.213289405 seconds)
    (4/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.278846126 seconds)
    (5/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.203892682 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10623454 seconds)
    (7/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.180700104 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12362565 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095228833 seconds)
    (10/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.202037949 seconds)
    (11/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122908764 seconds)
    (12/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096325559 seconds)
    (13/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.179656817 seconds)
    (14/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.230837492 seconds)
    (15/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098163294 seconds)
    (16/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.122553019 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.159915116 seconds)
    (18/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192468666 seconds)
    (19/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.254325848 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.195803507 seconds)
    (21/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.175654845 seconds)
    (22/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.125592818 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.220841518 seconds)
    (24/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17002475 seconds)
    (25/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091079973 seconds)
    (26/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.207286347 seconds)
    (27/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.134587205 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.223654107 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118583233 seconds)
    (30/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.147721363 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123719179 seconds)
    (32/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.165323893 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.226397347 seconds)
    (34/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120396336 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12677909 seconds)
    (36/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12015109 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.171801608 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.151928376 seconds)
    (39/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.096624281 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120010544 seconds)
    (41/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097492874 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120509627 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.141328144 seconds)
    (44/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.172859601 seconds)
    (45/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125247522 seconds)
    (46/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.103223615 seconds)
    (47/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116559629 seconds)
    (48/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.132810206 seconds)
    (49/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.113345346 seconds)
    (50/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.194649128 seconds)
    (51/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.073529959 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109897926 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112725364 seconds)
    (54/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.188214659 seconds)
    (55/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120662096 seconds)
    (56/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06669827 seconds)
    (57/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.122164647 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106519187 seconds)
    (59/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120832766 seconds)
    (60/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138463376 seconds)
    (61/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.151556566 seconds)
    (62/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.124804891 seconds)
    (63/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.086825255 seconds)
    (64/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.113129092 seconds)
    (65/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181499303 seconds)
    (66/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.120817677 seconds)
    (67/286) benchmarking ("sort", Int64, false)...
    done (took 0.110811954 seconds)
    (68/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.172743858 seconds)
    (69/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.187067576 seconds)
    (70/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.113601173 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099614123 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140837562 seconds)
    (73/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069259394 seconds)
    (74/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126330626 seconds)
    (75/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136452029 seconds)
    (76/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108200944 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111506821 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098211346 seconds)
    (79/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.186563454 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109857855 seconds)
    (81/286) benchmarking ("sort", Int8, true)...
    done (took 0.222086086 seconds)
    (82/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.208750481 seconds)
    (83/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118591237 seconds)
    (84/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096289196 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.109157407 seconds)
    (86/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080528808 seconds)
    (87/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.178136136 seconds)
    (88/286) benchmarking ("sort", Float32, false)...
    done (took 0.175156633 seconds)
    (89/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.198051513 seconds)
    (90/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.124511497 seconds)
    (91/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168719045 seconds)
    (92/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120645392 seconds)
    (93/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.139429235 seconds)
    (94/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090729204 seconds)
    (95/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.171612258 seconds)
    (96/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.162079352 seconds)
    (97/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084337762 seconds)
    (98/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.094406266 seconds)
    (99/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.148256848 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124429016 seconds)
    (101/286) benchmarking ("sort", Float32, true)...
    done (took 0.236716529 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067628174 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114704467 seconds)
    (104/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089787647 seconds)
    (105/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.124025509 seconds)
    (106/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065972133 seconds)
    (107/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09361664 seconds)
    (108/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.186297697 seconds)
    (109/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067190128 seconds)
    (110/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117047606 seconds)
    (111/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164440044 seconds)
    (112/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12570327 seconds)
    (113/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096366592 seconds)
    (114/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122504211 seconds)
    (115/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06605397 seconds)
    (116/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111613456 seconds)
    (117/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068012487 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.182646483 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120394036 seconds)
    (120/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066743847 seconds)
    (121/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109684162 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093958002 seconds)
    (123/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119224386 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091508157 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119495814 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08800068 seconds)
    (127/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137818972 seconds)
    (128/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174295459 seconds)
    (129/286) benchmarking ("sort", Float64, false)...
    done (took 0.148825873 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.121376522 seconds)
    (131/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119896419 seconds)
    (132/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096368173 seconds)
    (133/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.220181771 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085519881 seconds)
    (135/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.146939056 seconds)
    (136/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112372875 seconds)
    (137/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.070609303 seconds)
    (138/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13586222 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086093136 seconds)
    (140/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091481231 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094724734 seconds)
    (142/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170003443 seconds)
    (143/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.177586668 seconds)
    (144/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114205409 seconds)
    (145/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116760012 seconds)
    (146/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091187543 seconds)
    (147/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090525457 seconds)
    (148/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086939134 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119166711 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098270878 seconds)
    (151/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089128123 seconds)
    (152/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.126542473 seconds)
    (153/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136820027 seconds)
    (154/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090940563 seconds)
    (155/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093179251 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117077198 seconds)
    (157/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235736843 seconds)
    (158/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.146369974 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168970928 seconds)
    (160/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093268419 seconds)
    (161/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119148658 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136271812 seconds)
    (163/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.179297837 seconds)
    (164/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091608626 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089105665 seconds)
    (166/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112372345 seconds)
    (167/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097183828 seconds)
    (168/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.093693506 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.10917229 seconds)
    (170/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189940295 seconds)
    (171/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.142802827 seconds)
    (172/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.133740287 seconds)
    (173/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166551589 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117947723 seconds)
    (175/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077044408 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135661299 seconds)
    (177/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06741353 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119702026 seconds)
    (179/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.078465823 seconds)
    (180/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066172147 seconds)
    (181/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.1753399 seconds)
    (182/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066003285 seconds)
    (183/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119958018 seconds)
    (184/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067194639 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114721068 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.221866493 seconds)
    (187/286) benchmarking ("sort", BigInt, false)...
    done (took 0.443472293 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.083430414 seconds)
    (189/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.142259507 seconds)
    (190/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081316788 seconds)
    (191/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.189492661 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122297089 seconds)
    (193/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110195218 seconds)
    (194/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.112157301 seconds)
    (195/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067224569 seconds)
    (196/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091437589 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086835971 seconds)
    (198/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065832322 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.139473359 seconds)
    (200/286) benchmarking ("sort", Float64, true)...
    done (took 0.23201609 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.116137605 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100182785 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126844268 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091416434 seconds)
    (205/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110254193 seconds)
    (206/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132673555 seconds)
    (207/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.092667887 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091700547 seconds)
    (209/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116443107 seconds)
    (210/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066835254 seconds)
    (211/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111204377 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092060783 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111185815 seconds)
    (214/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.087992648 seconds)
    (215/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.074708353 seconds)
    (216/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.09105468 seconds)
    (217/286) benchmarking ("sort", Int8, false)...
    done (took 0.188905135 seconds)
    (218/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.141912897 seconds)
    (219/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07227401 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083744904 seconds)
    (221/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11603424 seconds)
    (222/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066219787 seconds)
    (223/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.104869887 seconds)
    (224/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066741329 seconds)
    (225/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110885505 seconds)
    (226/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09370856 seconds)
    (227/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07440885 seconds)
    (228/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.112904694 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137273089 seconds)
    (230/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093113885 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110972186 seconds)
    (232/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069769071 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11076594 seconds)
    (234/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095194227 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110141071 seconds)
    (236/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069187189 seconds)
    (237/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175709965 seconds)
    (238/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091405841 seconds)
    (239/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114489315 seconds)
    (240/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100636117 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118990356 seconds)
    (242/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066625177 seconds)
    (243/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111399434 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.093292892 seconds)
    (245/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119937522 seconds)
    (246/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066704243 seconds)
    (247/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124756318 seconds)
    (248/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068784131 seconds)
    (249/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.091702736 seconds)
    (250/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151539504 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111220345 seconds)
    (252/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.070352486 seconds)
    (253/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112868469 seconds)
    (254/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.071512485 seconds)
    (255/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.075852489 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.18267001 seconds)
    (257/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.086701405 seconds)
    (258/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112962146 seconds)
    (259/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067299201 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119972453 seconds)
    (261/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086010538 seconds)
    (262/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117516727 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108199709 seconds)
    (264/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.077174112 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.083802563 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12118089 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085051934 seconds)
    (268/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.144540919 seconds)
    (269/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114414143 seconds)
    (270/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115674809 seconds)
    (271/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230735429 seconds)
    (272/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092201399 seconds)
    (273/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.144703027 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117866523 seconds)
    (275/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.078442626 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110885638 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069662435 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085787078 seconds)
    (279/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120083308 seconds)
    (280/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066486928 seconds)
    (281/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.100183524 seconds)
    (282/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068579354 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115487279 seconds)
    (284/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068113702 seconds)
    (285/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091682821 seconds)
    (286/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.092579136 seconds)
  done (took 36.560946886 seconds)
done (took 37.502794746 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101634963 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14954988 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0947924 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138233288 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12487799 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09470308 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120223082 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.095944044 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125215115 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125102096 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097837124 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09438148 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097002475 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121055965 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097739155 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142153718 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125121974 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092948314 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.12100769 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085369454 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120391329 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085020741 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114313784 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069105695 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122752047 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092271821 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119093681 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11969796 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087583036 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110333978 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094304419 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11814962 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086304933 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125266091 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094155243 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119702285 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096317859 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123999834 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088054952 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114188751 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118204095 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087505086 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117826051 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095033314 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116812195 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092554059 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119533867 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098845509 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.143390904 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115738578 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095498131 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121711957 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100637504 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119092794 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090241049 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121247542 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090536241 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140901372 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119613514 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091351339 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119583108 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093904446 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116875981 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09412038 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119990337 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121297372 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099782899 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115800018 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096353569 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117057115 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08579333 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120381307 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089284984 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113096857 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094748182 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123638218 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084489937 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118696102 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092518098 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.118531825 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110177525 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090433676 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111889375 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094084397 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113599815 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071324182 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089086191 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.11841122 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08452748 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.122636848 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117441451 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093919605 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113521632 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10036004 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111583693 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092085346 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112123389 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087753165 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114297876 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090315079 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112644858 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093330728 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122424572 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087213126 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119458959 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.09819551 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116319435 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117454662 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087696995 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11008211 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101225372 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.1222318 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08734776 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117126996 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084969696 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120066836 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085477605 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112617424 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085704875 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11294572 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091437414 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11257419 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088196301 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120816927 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124755416 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087538089 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115066105 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089698584 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11087138 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.097401003 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11125529 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091464088 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113511467 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081248606 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112982145 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087693415 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118665655 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090213374 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120419865 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088738011 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121158116 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091300987 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119028161 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091408777 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112214193 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073971546 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117471457 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089786478 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113735318 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086353736 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113458415 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086461922 seconds)
done (took 17.076523844 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089048618 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185570246 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152206727 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14265478 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106322317 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114220183 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121578473 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118216449 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114670662 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143074805 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109356073 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133510884 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148403159 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08593432 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113001119 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090756684 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113730396 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100915071 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147757946 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13388958 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163714279 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085437016 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147216785 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13750211 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120248047 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114409665 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113268419 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090809306 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116812108 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101469574 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134864799 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089263961 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11584005 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134185217 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103730224 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121505435 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086107195 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121829372 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085791939 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113629771 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141050255 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10765532 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122405079 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119131486 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091017636 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114768826 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089086655 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121615007 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097480098 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.1189079 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12611068 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15598943 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.094987781 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122869321 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085491876 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124554194 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121064195 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090584644 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112351447 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091510795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111552937 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09100008 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129095828 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145044875 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095672484 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124318052 seconds)
  done (took 8.695985192 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106606738 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142278658 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132800652 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112382404 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113580894 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092558413 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113159142 seconds)
  done (took 1.815306853 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090266418 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134921199 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11462409 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137802084 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132838092 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.114574348 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125714121 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092938571 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134444897 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088659527 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135560365 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153743861 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088454762 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122054633 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138387367 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09324235 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138837801 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088242841 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118736671 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113873448 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118365824 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13607463 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095204617 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114706823 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101840815 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116134383 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161732606 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093423895 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116441001 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092639252 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113387969 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167532775 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105225675 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126693593 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086941169 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136597126 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.151132069 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091189842 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131673465 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09750705 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129963994 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088067687 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11917925 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086087876 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122007505 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124928869 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095718605 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114891268 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092297964 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134995378 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09057224 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128463673 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087459862 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119625581 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088672746 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121712605 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123413262 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092530688 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133526613 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090672563 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132463953 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106551951 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132902002 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131442949 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096556185 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129178166 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101920243 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119674008 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088831407 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119917849 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129938387 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.092318231 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115630239 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103400791 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117117058 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116594125 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139877359 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089033887 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.131139457 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114135211 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090765006 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115265327 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11716714 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119661159 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087674353 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123054696 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090416225 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114459618 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086539565 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125570369 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086408457 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.121922114 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119333615 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095072075 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116877922 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111340415 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116841843 seconds)
  done (took 12.048601307 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095286739 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114928867 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097040636 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115350464 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09439737 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116820008 seconds)
  done (took 1.647973265 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117140809 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11975493 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103988417 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126799002 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157917014 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106808549 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135637921 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124989898 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.111392753 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128959225 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130175482 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108872656 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136769394 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120989771 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103139059 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12249938 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102945683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131090849 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128430616 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094980132 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140342002 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123071269 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100262243 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132672828 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117804906 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098595483 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126556454 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106804663 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129093957 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124656662 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102192142 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120094256 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099716057 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127164669 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130714745 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095113303 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122785002 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119761578 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102358254 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120149748 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106449918 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124182042 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128150651 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093307421 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125088199 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121205721 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094848701 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126180584 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103063326 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122608519 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120397604 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09486244 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119626259 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093359822 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123185955 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123610848 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093787881 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129357759 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09440117 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.125396599 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118754371 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092634424 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12598003 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117409605 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105286497 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119901845 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095471006 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124446753 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122261093 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096154216 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12027777 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091545142 seconds)
  done (took 9.36280407 seconds)
done (took 34.569341749 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.703452307 seconds)
  done (took 1.713335495 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.834306712 seconds)
  done (took 1.84729704 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.46872122 seconds)
  done (took 18.510609359 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.515677014 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.606395885 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.01272815 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179317196 seconds)
  done (took 3.328485849 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.970319123 seconds)
  done (took 2.000904558 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286326799 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232566268 seconds)
  done (took 1.534710609 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.790921976 seconds)
  done (took 1.820227287 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.415713035 seconds)
  done (took 2.435303755 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334273166 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185817211 seconds)
  done (took 1.544942669 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550720363 seconds)
  done (took 1.578898695 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.439098772 seconds)
  done (took 8.471023253 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.273424157 seconds)
  done (took 1.3147461 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305066167 seconds)
  done (took 1.336754513 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.583761383 seconds)
  done (took 4.618856343 seconds)
done (took 53.081065145 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102055831 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127572993 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102163449 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125032477 seconds)
  done (took 1.482128513 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103045698 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12212251 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099877546 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122101245 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126060346 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096488865 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124569297 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099938669 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12400675 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095811508 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123330716 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119661456 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099173401 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123525407 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093445082 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125950843 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098240213 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12423723 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124574362 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09667446 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119881958 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096743028 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126818521 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093352712 seconds)
  done (took 3.715670967 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102957219 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118834126 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097142831 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118236227 seconds)
  done (took 1.478484243 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102429569 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131824681 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104815229 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127578651 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131361007 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105922218 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119050479 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092180932 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120186455 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099957712 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117428082 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.113124891 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134678343 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124729636 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101612387 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115772721 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090022318 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132293603 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124917711 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10127381 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118814093 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100388553 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116946074 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108164219 seconds)
  done (took 3.76968809 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171595787 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129295433 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139070371 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094538514 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162355285 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141118234 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088081444 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142777352 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086651231 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132971765 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118152909 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132854613 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130696801 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086936146 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116234362 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087299582 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131049521 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129967781 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091036162 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12910584 seconds)
  done (took 3.485296892 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100791256 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117794371 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088300434 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116452528 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09896141 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12258874 seconds)
  done (took 1.684934959 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093015072 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114050874 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09071859 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114161308 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095057629 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115718009 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088853952 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114880743 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089529471 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11505657 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089779685 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116340642 seconds)
  done (took 2.277986067 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.508053353 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122690396 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12048423 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089386079 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121607918 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089388252 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.13012942 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091659526 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142945307 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088463621 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117456261 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089481071 seconds)
  done (took 2.748957017 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234937298 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1287494 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287312684 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371209138 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158027906 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178329196 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28558347 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165044758 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.228149749 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166798737 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204783133 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228274941 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152840637 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192616107 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140077896 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144067653 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206565409 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249455888 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154318459 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209889223 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229104133 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169206504 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18179633 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152329665 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139823071 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172316882 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092862043 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132783146 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238665225 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178928651 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217762713 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164315372 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146331733 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211928389 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258462603 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224624872 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286352843 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137805559 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14920714 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16931758 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27240323 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141979982 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205454908 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157486358 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133626637 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221721255 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175465126 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183049737 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153299962 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138731944 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198825793 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245951973 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195893007 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141024528 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302784784 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15093554 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.203197175 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195162386 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256615019 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207675681 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215764912 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100839823 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191075974 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224990552 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187057702 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.176712044 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.210096009 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151142332 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202473289 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195840825 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167044395 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224925639 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187602169 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143612511 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172764127 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174356894 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172569959 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263111246 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217301602 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101999985 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169915983 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152251307 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135297765 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195161495 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097822986 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243471066 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145640605 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164039392 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215883747 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161419491 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162718669 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204770641 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236394894 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154897453 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083806658 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156169283 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158254953 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194169533 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146738362 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15966684 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164603189 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132644184 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18596651 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125998974 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186483835 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118446292 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175317013 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185529814 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128676208 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162097008 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152229129 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125029084 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204152915 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19975631 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14371292 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132290747 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212814436 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182668292 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.156944268 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180915457 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23230173 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.122706952 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151412503 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231328509 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220573008 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147155334 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232591721 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161828773 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107382025 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134263916 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183239365 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154467493 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163866733 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136135887 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186047793 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23898261 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100219365 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141176384 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196000223 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137004961 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135272648 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165236013 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149677298 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138502934 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12670807 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155685011 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212805259 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18580236 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159071929 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1680079 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15430711 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258236491 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147035458 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123591488 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150298878 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122677936 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195527345 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200123345 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140171112 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235581263 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.179863092 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205451096 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174000605 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140582283 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180078933 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131388428 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091806446 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226198159 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171453745 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164101484 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197996384 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227754082 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.185706327 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187851199 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203974331 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175019241 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165658431 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157665916 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111731958 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163085654 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171651061 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126206855 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145529691 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134689588 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147586556 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115790283 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136224534 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225258769 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176294088 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191521133 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163823881 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155610573 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182379004 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130897 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176345952 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.182507437 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149673549 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201961953 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233801966 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191993041 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147756953 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201246318 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124372058 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125477495 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114195943 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198810012 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10755325 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138735479 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16446695 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183584144 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182011863 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208599518 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219391608 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202019065 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193403009 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095882496 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170301543 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187981028 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179299366 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.199146933 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142763998 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152627904 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181650778 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16107912 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260422499 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174358172 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179470519 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2419663 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153162961 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107734539 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15364134 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195431556 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155776388 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206521291 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122622597 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144352013 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164376933 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134505957 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162133158 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184684304 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166253165 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223667899 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154067885 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188320026 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128280735 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16616519 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160483776 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16692295 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081439074 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176822977 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236986141 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152604406 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171988656 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191527885 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133675212 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31106504 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249676686 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200928126 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13898132 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15811907 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16124549 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166220455 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173464587 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18062904 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160199826 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190689837 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161794183 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139658341 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141109385 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121956992 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151732868 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133261448 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150148061 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178939502 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141984257 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187656702 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165811479 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162363083 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174875259 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152786798 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145076957 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151051266 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217129794 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186466294 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243123827 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153203127 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181792508 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239116984 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100816288 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134272081 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132788486 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179015658 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10855978 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226805443 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190515762 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23437455 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186239602 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195781521 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142592244 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120639246 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128824941 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205389515 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210132201 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157367549 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161875978 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234735756 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118754255 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134730101 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180265438 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295740977 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147754001 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229973575 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083787387 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284504054 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130972066 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104585946 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165250824 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24077635 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138901592 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191117078 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17469274 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172718576 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16646137 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151057816 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191963817 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247743239 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204263611 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180827126 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134099815 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15935506 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178460185 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224108201 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161827058 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113927359 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236599786 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200516917 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199311136 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142597546 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171361519 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170648969 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15938588 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222199875 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112158175 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239455087 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140316849 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195771118 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155500001 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145398144 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17823693 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190457374 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146886049 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219189686 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185719053 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137019922 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104798226 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170719835 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212794858 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158850315 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099158794 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210545724 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098430332 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224346843 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234672786 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13897818 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156967117 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150364186 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136584751 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127727817 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188530202 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114145573 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16857453 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208320275 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138583079 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193749328 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23465361 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17251457 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17698153 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146170056 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694141434 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133257643 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197733187 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159989067 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238414509 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150765821 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174378406 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160588279 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170485353 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197131527 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164180929 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235126933 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222847476 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182297474 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103698072 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188406787 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165795237 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.115663776 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152398758 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172438831 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164218653 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15763126 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.207374978 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178851057 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106204742 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143766115 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201345065 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160666375 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215184239 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181930221 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1096955 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208444897 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195756752 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134412084 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182495622 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244089223 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115041334 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154713638 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137190871 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157270693 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269317401 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097024355 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238272349 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191363425 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163048261 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172759637 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150010188 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226365058 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162775171 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188919207 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149156797 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161764588 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15853328 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138891803 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102893486 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158610073 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170112601 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.153090701 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160447522 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167510679 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19877734 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094464129 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145833631 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318959146 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199268284 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247875434 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110021799 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139285082 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162567234 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152889567 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178469864 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181490044 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137645925 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137932187 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107863959 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159701548 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112261757 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158552924 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198034102 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196553046 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212295734 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138622271 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280320397 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112713533 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160387488 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117930245 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104732832 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152912481 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148997911 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162979612 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193618343 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273535187 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151146083 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135281158 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150317903 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098896899 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137588541 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167014337 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167130686 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179312443 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147461029 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080719831 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158295396 seconds)
  done (took 84.619751916 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165974859 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134374235 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148619139 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20452497 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177920879 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269766184 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211911914 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25498962 seconds)
  done (took 2.701807162 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095818905 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14994953 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15788517 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134105497 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092632286 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118847412 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.349719638 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134216205 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118642789 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121639874 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176859621 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09435947 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.560247145 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091516709 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120873318 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10988191 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09212043 seconds)
  done (took 3.846783376 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.482628865 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.740533666 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.519088322 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.099795994 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.212792021 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11383356 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.81001461 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201349632 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117318572 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.493824106 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.779931507 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.167604756 seconds)
  done (took 18.874367759 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118165726 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136596044 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123340402 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153645431 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141567665 seconds)
  done (took 1.814358856 seconds)
done (took 133.527028277 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.106843037 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407717208 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071433992 seconds)
  done (took 1.652209758 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110425586 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137371699 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108205008 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13689305 seconds)
  done (took 1.639949385 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100648155 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126519578 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109007504 seconds)
  done (took 1.476509329 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325951559 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189923043 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.171867724 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108621563 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129964357 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104414506 seconds)
  done (took 1.481500672 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09816534 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128321723 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097225532 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130968964 seconds)
  done (took 1.594025807 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096503735 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070908977 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101124163 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075820955 seconds)
  done (took 1.479541321 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11496851 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132367089 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103691847 seconds)
  done (took 1.496282875 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129285599 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.141128014 seconds)
  done (took 1.416071631 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10803993 seconds)
  done (took 1.247122383 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.120045946 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171002851 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.17997503 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.161317982 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.203670566 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.159519102 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143611052 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.138447596 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.128739724 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.141411228 seconds)
  done (took 2.695228009 seconds)
done (took 18.10918991 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105031946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.512693954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3846043 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145030539 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722075545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379812709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035057839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146502874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165452684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092918419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139418922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67336239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064473518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469340243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.022591524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373308932 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67697174 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123953228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119004064 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094433509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020682164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091278527 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122756756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091990729 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704872802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42620803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095915608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372004768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09286534 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126500964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382155279 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124392129 seconds)
  done (took 17.231226478 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.098648836 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17403078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097091875 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138146555 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123388048 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094663271 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124144485 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093359433 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180888219 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124018728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109688194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122530244 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125462719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095482324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142316139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091994197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125905127 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092038259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123072063 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120937349 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112629244 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120679273 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093846925 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121800012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094325012 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136235384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093806015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122140613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120013097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098919842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127748483 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093895659 seconds)
  done (took 4.880946089 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144900833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183900558 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129677618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126233561 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.17066282 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12438127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198530494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117457867 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183345319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123479543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139478941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092256732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158011667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093821145 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144526669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12093887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096522094 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123108926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092091699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125357885 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139198204 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09294627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121774173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093800839 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123078994 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107277591 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124313747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119964092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093385961 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125955535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099519638 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123783956 seconds)
  done (took 5.209186163 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102108328 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126266838 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109241021 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13863863 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094700051 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.1266046 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096364384 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124503042 seconds)
  done (took 2.069251582 seconds)
done (took 30.529332136 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114211668 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126791278 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106462254 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135058891 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10249734 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132558965 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090345767 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134384023 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133576644 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103311484 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137068225 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091497291 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122190025 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092207078 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13505756 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09703128 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132465589 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10159541 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134957533 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13155853 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095593641 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132809432 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102923025 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13381925 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103201651 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134844937 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137142166 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100063817 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122607301 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09426019 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124975742 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103938619 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124362445 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104670754 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127646572 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097434928 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124187688 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093488778 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133522785 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132176893 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100527273 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133064955 seconds)
  done (took 6.055736404 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.110072481 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139498919 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105793471 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081017036 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118152512 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080331125 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138851221 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079097726 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110065988 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108351298 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073494366 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10737465 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077980344 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10089155 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077867681 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075586413 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108367242 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076685444 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076049817 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105924748 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080021285 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073102894 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109156899 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079105045 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074188929 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110775656 seconds)
  done (took 3.633330447 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10413346 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134123935 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113007621 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184154144 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161752809 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098395849 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132273227 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109559124 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.139852083 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11997728 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096852841 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149423237 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108524117 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129555828 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090629646 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138082001 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134955174 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09436296 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128382491 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111433974 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139129963 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101926435 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142218855 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131526755 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09311708 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123013589 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09635771 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134910964 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097403934 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132806665 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09578353 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125699435 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122152813 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105620585 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126278087 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094532501 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144443914 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102209645 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132245996 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091839992 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.132333235 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121860431 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113892023 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163095928 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091186563 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130277912 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094435835 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134194675 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121490876 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110859755 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131357629 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091927896 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126087966 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091258154 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123131684 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106183682 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12442665 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093836134 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133814569 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12665945 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106601322 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126309311 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108983625 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122364768 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099297695 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122834353 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092578202 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121913797 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113794068 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126584135 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161574153 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093071264 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125043881 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101818098 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130759037 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12812152 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093881048 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137393602 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103316433 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.1261257 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101945269 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126526601 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094409121 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141955716 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09347677 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125240738 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092469281 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132022213 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124562598 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09366924 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136821949 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092351023 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125969333 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109983221 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123796777 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093402633 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129681392 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.1267751 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09194243 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137145164 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098061271 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124647654 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101791806 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123764142 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094723514 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13498305 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126909168 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091956575 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126206389 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099775027 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122998782 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093759519 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125816419 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093932015 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132827035 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098362512 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129325623 seconds)
  done (took 14.895134535 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233145772 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214380079 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205395365 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.294465582 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136519721 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11379164 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.25315688 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124817119 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124522292 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159009102 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176470922 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18086433 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169391966 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179332598 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171126768 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092638519 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142991517 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163612892 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214221745 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258401064 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145219345 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100250333 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160838857 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162008892 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138027425 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132560983 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110490984 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136980211 seconds)
  done (took 5.867742237 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112671473 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158248607 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098240535 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14659434 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14945846 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093092718 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128979521 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093616561 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136361284 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136441918 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093399465 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13036232 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.09953946 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133267549 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122344319 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103398505 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131473269 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094956844 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127129601 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097176505 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133349282 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100966951 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127612989 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090650631 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133449078 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121447627 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086516904 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142519483 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091758539 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147942435 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120264353 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101243891 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13635905 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093055943 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123575511 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09457933 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125463044 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094920826 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125344445 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090665853 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123523017 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077079438 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122287308 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106398151 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.131973855 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079962026 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130213397 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098146068 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125810232 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.11983452 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097244894 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125195487 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097836308 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13175362 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097278232 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123990332 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09707563 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116254166 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100732175 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125281188 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085787955 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090817028 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128743942 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118406438 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102550064 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128792195 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092338466 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125826335 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097842272 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129781951 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095372029 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129792951 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091086416 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126365167 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095229957 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130247987 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095760495 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12336362 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092065412 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126154217 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074797111 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12408041 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073847385 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127043825 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092101702 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122921529 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094901316 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130056504 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137138483 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095954332 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132758581 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094065759 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122443343 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096266715 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113370049 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096657093 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139716259 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140232888 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094837192 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121197333 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108628846 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126438177 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092423296 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105603484 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102568814 seconds)
  done (took 13.039557054 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130233913 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153943909 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094525186 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142495731 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156910411 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156118233 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101509898 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130966188 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095683293 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143181195 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094410414 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132860197 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093802489 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138164076 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156814318 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104792808 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125503556 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108147703 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12943531 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169839787 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111668365 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14241708 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10982092 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125797369 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09826591 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141736889 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161499065 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106952183 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137976716 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142015735 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108910055 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161326343 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111807074 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129744127 seconds)
  done (took 5.539774586 seconds)
done (took 50.182130185 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.295382899 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.499435823 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.261307456 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.290731293 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.304219855 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.276176811 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.266314689 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.257540534 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.484038662 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.259530553 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.509887705 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.938645694 seconds)
done (took 59.831497362 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.341620973 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.392845973 seconds)
    (2/2) benchmarking "String"...
    done (took 1.53044849 seconds)
  done (took 4.106001726 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.618460982 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.237583959 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.527488776 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.260618697 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.258323321 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.554515685 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.075153402 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.660473805 seconds)
  done (took 28.758554227 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.271554929 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.351061155 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.291879463 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.269096586 seconds)
  done (took 6.367226955 seconds)
done (took 49.375586079 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.288515864 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.283204036 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.278233255 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.237452561 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.375892757 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.298756323 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.696174863 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.289693842 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.285605603 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.237977376 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.281724854 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.273966956 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.274621082 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.657640496 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.271640258 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.256780086 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.317619995 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.834596803 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.67564549 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.275156518 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.287845517 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.317203599 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.262469487 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.262243437 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.340203821 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.25880469 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.263023738 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.280071609 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.013656261 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.267091169 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.285056387 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.767693906 seconds)
  done (took 193.179177538 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.263478563 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.494718515 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.554883954 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.306337038 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.716897217 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.462329471 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.402343003 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.808478467 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.288095122 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.283384506 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.425475945 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.259229469 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.480334354 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.236069017 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.293924694 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.356558761 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.594053076 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.501152787 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.31087378 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.44557653 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.272357157 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.401175976 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.35714861 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.3870189 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.274482316 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.361409086 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.306706745 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.305349641 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.453350201 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.508706513 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.299491896 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.331384756 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.919262527 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.118625696 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.287357255 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.284975764 seconds)
  done (took 152.539853384 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.33041623 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.267701769 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.266028452 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268627004 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.302212535 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.265030813 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.878263971 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.879988317 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.769425597 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.725965099 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.762488809 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.624658277 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.26843123 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364393028 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.277535387 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.265696084 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.279174477 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.310584735 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.267741535 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265420832 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.872437933 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.281533139 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.330374688 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.46797437 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.281599003 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299674148 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.658521855 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263226165 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299087746 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.601925073 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.316293936 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.261592075 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.666025075 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.163915239 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.375088013 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.260599 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294771741 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.263324466 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.262420951 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.546540231 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.260502279 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.262726542 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.262558997 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979114486 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.262343564 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.867261338 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.26599497 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.234569636 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.258143538 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.259235381 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.17510766 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.256215905 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.013519692 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.273528964 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.255027726 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.259022022 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.254716303 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.256531646 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.290223539 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.188526153 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.352565733 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.272527025 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.258443268 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28803824 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.255810323 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.292031404 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27049407 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.311286692 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.327731397 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.475705377 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.842573101 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.258765991 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355471799 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375472052 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.252483466 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.255808351 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.255497179 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.256300073 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.367149101 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.251704826 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.689652953 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.430787539 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.271852951 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.673030692 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.355393676 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.254510128 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.677901659 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.256891736 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.255071866 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.026617424 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351974045 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.25308843 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.255094105 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.256740613 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.255927335 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.690420292 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842826855 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536408433 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.257956675 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.0410446 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.26082469 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.256186558 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.709619613 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.82112831 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.962714605 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.2602466 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370329705 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.433223482 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.274372025 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.258449007 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.676404621 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.258953995 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.316372481 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.254622445 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.65557268 seconds)
  done (took 375.384191756 seconds)
done (took 723.618759019 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.838662339 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.839604912 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.954933835 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.828796585 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.792607842 seconds)
  done (took 10.433935964 seconds)
done (took 11.613244356 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.462465489 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.46052129 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.326336969 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.463408248 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.292159884 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.480488366 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.439199473 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.278445383 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.366169636 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.353846493 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.367535349 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317548488 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289198282 seconds)
  done (took 19.077515508 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.590954063 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.594546122 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.324255125 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.59075405 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.300774643 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.63040891 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.46305538 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.481600505 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.48518296 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.298383132 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.271810233 seconds)
  done (took 17.216006896 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.59915686 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.59560227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.326325541 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.598977573 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303699885 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.595048631 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.469634337 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.491192923 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.493357366 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.299579353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273402763 seconds)
  done (took 17.227288339 seconds)
done (took 54.699950282 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.268363403 seconds)
  done (took 2.446524312 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.306348701 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.468090036 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.286836735 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.270673729 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.26995198 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.273729028 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.279572614 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.274199367 seconds)
  done (took 11.612560805 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.27289252 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.270495555 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.272331837 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.274678614 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.271794633 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.27056158 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.274014309 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.269675605 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.268850546 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.269767806 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.269212997 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.276700489 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.272349738 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.270545344 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.273018258 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.270568462 seconds)
  done (took 21.532686906 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.272516526 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.270676078 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.267937845 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.271673206 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.270357291 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.270897894 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.270487188 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.269367519 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.270292155 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.271821936 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.270152452 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.269769579 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.271057608 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.268330116 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.269706701 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.270158146 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.268332056 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.272410242 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.2728344 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.26992532 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.26853094 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.269879213 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.269507879 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.269500362 seconds)
  done (took 31.671952855 seconds)
done (took 68.446271209 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.46841847 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.987497414 seconds)
  done (took 9.639860102 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.274926608 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.270493943 seconds)
  done (took 3.73210977 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.270757623 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.272128619 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.272384792 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.272484555 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.270308459 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.272911031 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.271789761 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.272533775 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.27333802 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.271601562 seconds)
  done (took 13.90524391 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.273924984 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.272324853 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.270639359 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.273186879 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.271670575 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.271113049 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.273637702 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.270733081 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.271024343 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.270407965 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.272887484 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.271947605 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.272007989 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.27041292 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.273759052 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.271511639 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.271127794 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.268712355 seconds)
  done (took 24.076095122 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.273496922 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.273574293 seconds)
  done (took 3.732983423 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.272248566 seconds)
    (2/7) benchmarking "second"...
    done (took 1.272435909 seconds)
    (3/7) benchmarking "month"...
    done (took 1.269343529 seconds)
    (4/7) benchmarking "year"...
    done (took 1.271505207 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.272101042 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.273000828 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.271251928 seconds)
  done (took 10.089397387 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.275552924 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.451526526 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.532871456 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.911079543 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.273857614 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.274603781 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.134588307 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.27515264 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.278143831 seconds)
  done (took 14.593771229 seconds)
done (took 80.953670107 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.288718295 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.286474124 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.412580947 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.280349823 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.278479604 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.605741474 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.283592609 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.386077039 seconds)
done (took 38.005868243 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.278620613 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.250118913 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.995775508 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.245480985 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.288085628 seconds)
  done (took 18.96176664 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.273435088 seconds)
    (2/2) benchmarking "read"...
    done (took 1.597779576 seconds)
  done (took 5.050840376 seconds)
done (took 31.474478017 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266333609 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.267249179 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.265229672 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.264721717 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.268163324 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.264945741 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.264124041 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.268546213 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.269638841 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.264186483 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.268252931 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.268009234 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267570869 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265048878 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263739781 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268371298 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.266746991 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265633456 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266547418 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.269917586 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268855641 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.265313663 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.266783099 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.26728424 seconds)
  done (took 31.58242376 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.27116355 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.268355143 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.268609593 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.268926015 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.266482104 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.268750279 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.269157969 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.266327787 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.267681068 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.267992499 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266044857 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.266251585 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.267995004 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.26994669 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269365594 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.269976329 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.268930449 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267973038 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268974812 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.267108479 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.270744317 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26805159 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.267552265 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269660685 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.26557954 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266117532 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.269844495 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.267974464 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269033725 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.268142862 seconds)
  done (took 39.23075316 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.27457631 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.279937341 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.269453845 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.2693746 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.269634774 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.270151928 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.271089287 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.269761792 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.270237085 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.270094768 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.270288264 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.269975706 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.270844273 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.27024296 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.271285639 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.270037932 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.270466568 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.270380617 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.267138155 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.269839766 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.270828286 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.271781053 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.271155862 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.26991906 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.271534399 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.271117484 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.270501914 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.272147168 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.269941999 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.272431364 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.273021502 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.270752266 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.271508841 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.271720968 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.2711883 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.272130222 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.276453591 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.279294842 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.272036428 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.271057584 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.272015725 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.272205712 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.27239464 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.270592038 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.271377687 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.270991148 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.273719707 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.272687016 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.270695033 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.27329803 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.274709059 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.272798661 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.273344838 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.27678435 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.274970563 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.273684985 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.271241431 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.274699126 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.274587608 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.27420516 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.274570868 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.276602458 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.274461173 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.274003855 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.2742472 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.276187624 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.275176461 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.275872288 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.275979053 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.278289104 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.272834583 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.273533665 seconds)
  done (took 92.803296607 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.274901186 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272557186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272390987 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2699094 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273231855 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273161537 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271625489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274259069 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270479166 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.274340379 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274913649 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271610183 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275318233 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274050152 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273650306 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269809929 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272654525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270441727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.273462564 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272673419 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275552005 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267319974 seconds)
  done (took 29.18576759 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270984758 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.271565784 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.267779503 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.26846608 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267774009 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271402983 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.269860407 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272760598 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271367489 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267786647 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269950562 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270953804 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2682142 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27383001 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27037756 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27034927 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273952444 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.271441068 seconds)
  done (took 24.050977177 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.2705175 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.27255883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.273944417 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.267556012 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.267259774 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.268264369 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267472765 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267472981 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.267584178 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.269012027 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.266131835 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270069135 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.272232483 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268364313 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269410872 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.266607504 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.270745154 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269918208 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267965749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267218821 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.265965316 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273128469 seconds)
  done (took 29.105534846 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272285492 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269984023 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271991596 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.266158446 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.265903119 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.267775724 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.270104201 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.268876286 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.274440928 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.269614884 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268116725 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.270982186 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.272394717 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27204329 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.269028727 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268921357 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272974302 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268295052 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274208489 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271211904 seconds)
  done (took 26.591717576 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273925898 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271202076 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270766692 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270132084 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269696465 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.272802844 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269945935 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269339149 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267433419 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269527698 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267998744 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269294874 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268232168 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271954606 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269856054 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267104087 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269352258 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269363008 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270448012 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267699582 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268033942 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273850718 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269040393 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267382582 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269797758 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268034576 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269541465 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269487251 seconds)
  done (took 36.737856737 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268363744 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267260698 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.266680919 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.265982037 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.267622715 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.266505347 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.270728198 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.269044398 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2714422 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.268809619 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.268268748 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.270906128 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268792316 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.270371677 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268967105 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.270526597 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268989598 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.266593397 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266468729 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271711852 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.271338033 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269630555 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.2687286 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267315714 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266692235 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.272275236 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269497943 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268952212 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269001292 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272538862 seconds)
  done (took 39.256095621 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.291386553 seconds)
    (2/2) benchmarking "in"...
    done (took 1.288804142 seconds)
  done (took 3.766834604 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.267513464 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270362744 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.272417382 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.267117109 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.26965323 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.272207008 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.270263974 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268911815 seconds)
  done (took 11.344186309 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.271978577 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.272174143 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.272412189 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.270711427 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.270752772 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.270424018 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279252428 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.291818637 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.2699271 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.271697823 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.27594545 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.27740508 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.274828425 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271162062 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.270023574 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272544884 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.272473879 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.271412409 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.272239033 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.272062761 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271762571 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276185014 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275812843 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.272982235 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.274615345 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.283541351 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.297084531 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.274305433 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272262451 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.275273658 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.27111983 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.272283733 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.272458634 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.271468721 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.273356213 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.272211345 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280730658 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291475597 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.277698684 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294167633 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274078649 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.271285298 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.277654083 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.276219914 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275690444 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.273806531 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.274932963 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.271453859 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.272488056 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.276022844 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.279493151 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273344704 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.271413377 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278798523 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.278261801 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284676129 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.294896062 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.276819179 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.284766571 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.284169923 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.306691653 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.299190491 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275476249 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.276842033 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285342716 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.299280765 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284908901 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.296640691 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.277377725 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.275225649 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.279737366 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305980522 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.299781265 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.274815448 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274507878 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.274433016 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275588656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276219621 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28334737 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.296980977 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.276962524 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277269035 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285331501 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299691576 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.275880633 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.277375785 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.275681531 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.276536698 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.277975492 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288883847 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.294800634 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.278647708 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.274934288 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.275986921 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.276696628 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.278053077 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.278095097 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276492503 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.275218436 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.277465349 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278164249 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279591367 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.285327032 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278191695 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276995214 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.283130505 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.299182916 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278085788 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.285300792 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.280555054 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280496567 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.280598395 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.282117768 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.27779238 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283306072 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.287282363 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.281423019 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.279003383 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.281024588 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.278296761 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28697602 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.304435623 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.284696433 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.278960589 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.283418462 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.288565969 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277821109 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.282017611 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.28312786 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.277259118 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.279647685 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.281768982 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.282326764 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.281392095 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281560015 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280616085 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.279355744 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.281101159 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.278698813 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.279938149 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.281283865 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.280885626 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.279699615 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.281706912 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.281200791 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.282260857 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.287110652 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.298766743 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.282172912 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.284536026 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.279796949 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284050771 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.284778517 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.284073979 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.279921394 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281546846 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.282415361 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.280921984 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282361009 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.281279533 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283350646 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.282445329 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284214818 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.2800313 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.282242063 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.28300034 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.278322271 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.283156454 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.284360599 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.284976339 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.281248322 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.282252382 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.284487665 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.291682174 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.28335284 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.283498559 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.284940756 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282576511 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283706103 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283535449 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.284018694 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.292380526 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.285642025 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.289256497 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.303815998 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283832633 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.285279526 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.286086137 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.285848445 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.284599668 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.285436949 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.295995854 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295582469 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308542175 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.284408273 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.288283913 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.28560099 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.290895914 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.287489093 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.287527483 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.2854605 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28574932 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285378327 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285080757 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.284914754 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.285037493 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.285464105 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.287617835 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.287946411 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.287518932 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284614516 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.285652757 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28837005 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.286478397 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28827408 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287951636 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.284103521 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.285391891 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.284262422 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.282436949 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.285037215 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.287186633 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.289949428 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.286561674 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28732585 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286470184 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.285165396 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.285450716 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.286579619 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287907885 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.28645785 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295634801 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.306320229 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.285968642 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289918821 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.306135752 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.284044999 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.285789307 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.286878885 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.28570145 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.29278493 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.295623361 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.286465162 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.289567487 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.289268566 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286861036 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287334584 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.293282533 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.304044 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.287198699 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.289629851 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.291568126 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.285637818 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.292330257 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.287383499 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.290880734 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291644634 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289170867 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.286565668 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290282714 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.286932026 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.288333737 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.29038703 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293480898 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.297136425 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.29079894 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.294606744 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.287352751 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.289840541 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.29132155 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.289344861 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.289638275 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.287262889 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29890809 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.312594258 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295634462 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.307277139 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.28865716 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.297096747 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.308798858 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.294720411 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.288691714 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288286373 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.289161351 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.290562303 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.288578776 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288762076 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.291861309 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289831151 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.291637476 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.294070257 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.289219973 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.288799411 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.288402422 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.287709294 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.291554912 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.289470592 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.292332114 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.291320862 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290552595 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.288944793 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.290171048 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.297765888 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311942142 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.291524261 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.290781713 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.290835459 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.289429626 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.288247524 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.288995521 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.293788191 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.297673069 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.292875646 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.298693915 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.291937402 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.297476917 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.293457408 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.294108878 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.298549973 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.286765621 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.291916042 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.290424137 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.290400709 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297871982 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.310484346 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.292392144 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.293929722 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291992772 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.291690584 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.2920133 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.292668337 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.291567103 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.291079577 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.300780457 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.311800032 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.295329331 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.291575893 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.289795846 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.292593779 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.292682642 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.28983575 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294636495 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.29163378 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.29375955 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.293844215 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.29274911 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.293494057 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.292490999 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.291741406 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.29088504 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.293517852 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298607563 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.314606225 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296127543 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.294768824 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.299220203 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313151471 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300514438 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.313459402 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.293756284 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.294268639 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.293671048 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.294124523 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.293499934 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.294300478 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.292928141 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.293747675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.298143296 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.295088573 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.295156778 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.293856365 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.296636916 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.29378223 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.303555571 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319561337 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.295693828 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297526369 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.295078297 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.295505241 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.29714245 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.296197427 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.295598326 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.297763552 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3049245 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.303718464 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.296742732 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.295037422 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29465219 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295866172 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.297975702 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.296215737 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.294003773 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.297507782 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.297305069 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.298186777 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.299972128 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.29722197 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.296456204 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.297132044 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.296182506 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.30437043 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.313431014 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.296434849 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296558046 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.298169822 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.296928572 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.297602458 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.297525802 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295367281 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297966604 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.297942885 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304351337 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.303654033 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.296254669 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.29531879 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.297639256 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.29622692 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.297886763 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297901635 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.295500011 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297347259 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.297872327 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.296772172 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.299021021 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.2974732 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.298225639 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.296880901 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.29880642 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300601875 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.306387661 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.298307355 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.296792699 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.300232329 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.300315344 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.299797306 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.296253405 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.303445108 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.320087539 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.310203163 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.309610631 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.303277521 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.298344137 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30287614 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.307281259 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.29972411 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.299990362 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.298915213 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.296727938 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.29942569 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.302098201 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.299825975 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.304244567 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.3181974 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.298847935 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.307288966 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.317695407 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.300705392 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.299442304 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.30360547 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.298663747 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.298516969 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.298169906 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.302221981 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305423426 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.318181877 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.301694153 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299554126 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.300349165 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.301922266 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.305685136 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.299149598 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.299564151 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.299262446 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.302438872 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301952458 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301725976 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.299599239 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.301412538 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.301970678 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.303114457 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.310423445 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.300261493 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302769982 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.301673999 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.301838214 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302044261 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301350756 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.300527687 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.299547371 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.299674258 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302382325 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.301583271 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.302694696 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.301141959 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.305819854 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.302502904 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305056819 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.305138506 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.312716963 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.312564174 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.299358285 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.30187243 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.304234573 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.306538554 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304842709 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.30493167 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303683729 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.303689106 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.303986126 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.303569985 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.304419874 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.309685404 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318822906 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.328910816 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.308447979 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.305751829 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305082013 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.308781179 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.303208353 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.306037354 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.308691886 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.305944499 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.311741761 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.30835567 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.311603018 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.327231688 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.310168074 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.310200683 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.307641253 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.313392797 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.306779728 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.307064131 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.308007143 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.310297981 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.325196461 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307202584 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.314455993 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334802537 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.326917641 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.305846717 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.305920589 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305347134 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.306037154 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.310984396 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.305370394 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.306933333 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308474532 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.307507263 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.307822937 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.313520836 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.30737118 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.31011474 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.308832503 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.307985084 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.309907611 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.304093437 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.306465365 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.30698308 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.307780426 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.30736997 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.304568824 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.307821725 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.31753604 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.331882909 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.307757033 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.30636076 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.305586962 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.309721859 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.309667668 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316768742 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.320014946 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.308155661 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.309633128 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.308094734 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308353388 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.306664925 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.308674329 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.306196372 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307199386 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.308274739 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.319228048 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.331863583 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.31243954 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.314304021 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.307826175 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.311064725 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310867133 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.309722726 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.307064582 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.310074633 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.309483154 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.31323028 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.308925283 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.311350515 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.313032914 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.318665433 seconds)
  done (took 772.034747031 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308756466 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308034423 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307724575 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.309625317 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312200286 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309504171 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308874471 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.309296631 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.310420836 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.308352555 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307656228 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310336466 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.309669742 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.310858497 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308874246 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309353275 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308927821 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.310376325 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.308761969 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309208735 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.310413192 seconds)
  done (took 28.722857029 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.313869492 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.311540103 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309136925 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313742199 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310270258 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.314254087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.310985864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311071652 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314541657 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309010021 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.315019172 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312649356 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.309279761 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.310524441 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312182563 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316322096 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.313762784 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309430911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.311478942 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311207095 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31113297 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.308252769 seconds)
  done (took 30.082662309 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.313103902 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.311256471 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.310235975 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.312175075 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.311420533 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.312290741 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.313718253 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.313482068 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.313783465 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.313575063 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.310693558 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.312860932 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.317699569 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.321624268 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.315384964 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.313354135 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.458837648 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.313699475 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.314224353 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.315592917 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.311338918 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.320173462 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.33017541 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.311565913 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.315088955 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.314178296 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.317969152 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.3180528 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.315421335 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.315052882 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.319631355 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.312039833 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.31570687 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.316566217 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.314399836 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.316949072 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.319014035 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.313257265 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.311455984 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.318755803 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.322611892 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.334325755 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.313550422 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.317780767 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.333556171 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.315138003 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.319388325 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.323313022 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.311785392 seconds)
  done (took 65.860710907 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.315290145 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.315022189 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.311967552 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.314283951 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.315838653 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.315916241 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.315298807 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.315100264 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.313905932 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.311453941 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.318305845 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.316092602 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.314859976 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.318477469 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.318259906 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.317034553 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.314080904 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.314637959 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.318168172 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.315821186 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.316129892 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.319613665 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.321700977 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.314211152 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.31520022 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.31459083 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.314029595 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.31714491 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.315725567 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.317492603 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.316164572 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.318527112 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.321105468 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.314617968 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.318314469 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.318904873 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.320252307 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.314165931 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.31884986 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.315217431 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.320401203 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.320319604 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.316883876 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.320098237 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.315646999 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.317830765 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.314718763 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.315984047 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.316077576 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.319388039 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.320452054 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.315351211 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.321336469 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.319578617 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.3194256 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.32332975 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.316926256 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.319109289 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.321663734 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.320471171 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.319322947 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.323607375 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.319825326 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.324402076 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.321329165 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.316458158 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.317993023 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.319807556 seconds)
  done (took 90.819333442 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317197996 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.317670805 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319673404 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319494336 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.319846862 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.318383582 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.319193548 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.31817718 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.320898611 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.319848569 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.320990159 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.320935858 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.317310709 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.319589451 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.319237867 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31970057 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.321930222 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320097063 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.320457188 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320275107 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.319426126 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.319794476 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.321308948 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.317739081 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.321431338 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.320242898 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.320798277 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.32090812 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322189163 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.318553463 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.320449387 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.320347586 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.323225271 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.321187706 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.321524584 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.323010768 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322679856 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321884324 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.321546167 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.319574777 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.321717775 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321794345 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.320441099 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.321720099 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.323085783 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.323160002 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.320319903 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.321011398 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.323791155 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.323038379 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.322397241 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.32308409 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322747513 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.324013585 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.321827655 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.32308811 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321939625 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.323489104 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321104205 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.322811966 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.321767785 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.324028167 seconds)
  done (took 83.132386001 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324018708 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.323765078 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.321834014 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.321233911 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.322438336 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.322298799 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.322105797 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.324496063 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.323686562 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.32354039 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326791385 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325261297 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325052785 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323729449 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.319524503 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323982507 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32285909 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.321781298 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.326947962 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.323928529 seconds)
  done (took 27.703950613 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.323113939 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.327363747 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.321508046 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322353168 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.323863265 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.323503174 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.324858657 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323971601 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324481984 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323068521 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.326538933 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.326842804 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323105438 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.323002265 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.326917446 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.32397965 seconds)
  done (took 22.424458511 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.323939591 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.327244313 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.323788823 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.326482382 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.321836472 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.321525639 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.32696514 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.32311827 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.325199117 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.326395333 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.325726853 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.325981583 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.325596523 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.326113807 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.325240779 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.327840176 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.323229189 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.325713017 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.326705619 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.325223536 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.323749575 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.323828626 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.327607455 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.325894667 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.324561991 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.325555519 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.326406993 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.326533921 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.323129776 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.328532167 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.324471349 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.325850149 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.324533823 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.32509099 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.327551776 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.324592269 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.329442428 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.330625657 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.327695998 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.327019541 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.330324075 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.327684864 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.330931752 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.32773673 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.328309545 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.3272552 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.329693919 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.326857806 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.327903317 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.328933695 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.329091354 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.329200499 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.328679993 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.330576487 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.328856984 seconds)
  done (took 74.194399816 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32887007 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.329359578 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.325235434 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.330232014 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.327931354 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.326183584 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.334172323 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.331196344 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328452328 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.331577036 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328934019 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.332534046 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330560396 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.331591229 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.327502066 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329593742 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.326945498 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.327137319 seconds)
  done (took 25.166872752 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.329664627 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.328454337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.330213994 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.329076204 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.328960757 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.332705948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328052878 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.330916714 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329651395 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.329865012 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327397567 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.330303207 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330647173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.329656257 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.327306305 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329450213 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.331619162 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330276422 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.327288307 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.328371794 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331313073 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330820902 seconds)
  done (took 30.492140569 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.330344356 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.329668513 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.330713891 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.345452816 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.347337 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.351393234 seconds)
  done (took 9.276695205 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339645014 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329929991 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.330421909 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333176111 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331864736 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33196784 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331070391 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331767988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333186646 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330025636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33010263 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332092474 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332443458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329079672 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332814351 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331256461 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330642541 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330453306 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330605915 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332233187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329848201 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331259972 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330395129 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329732146 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329571755 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330394578 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33360125 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330671777 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330563832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333422531 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334137508 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331480608 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334975968 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331724229 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334581261 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331688886 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330340101 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33355129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333590103 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330551613 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.33440373 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333179102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335425715 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332407397 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333822609 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331193613 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331146344 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331682533 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331850589 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335762245 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333628488 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331350252 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335611292 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33396665 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335442869 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335360165 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334005507 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331562179 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336552972 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336010873 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3344465 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338328181 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333931226 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333876374 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336008231 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331744771 seconds)
  done (took 89.219270912 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33296682 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.333783805 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334219102 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336484749 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334509121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331533623 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332657111 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337546401 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335258719 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334387402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336276072 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332451362 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33334469 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336167501 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334641487 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337270553 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334561513 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33530808 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336129842 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338350142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333182654 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333547326 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336224688 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335388696 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337296848 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337150391 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336065958 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335161961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333733751 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334906923 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335866522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335116372 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33474281 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.335521901 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336150887 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334995027 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334363764 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334036232 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335476521 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337094833 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335632086 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339187851 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334993806 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336098983 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336004067 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335972602 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33581092 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334462411 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335618407 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33613927 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335730712 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337001681 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335834646 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336986378 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336652442 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336542356 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339454542 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335836081 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33877 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341490862 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337178627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339390894 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340086506 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338767241 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335988338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335946168 seconds)
  done (took 89.413793098 seconds)
done (took 1803.380240761 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.336113574 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.341183133 seconds)
  done (took 13.924920528 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.507566507 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.460696166 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.34181697 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.376754705 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.337908033 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.364410112 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.337205276 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.340105409 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.342255873 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.342060296 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.34181709 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.532216766 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.393501498 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.343831495 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.344721616 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.43698341 seconds)
  done (took 43.397148683 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.369248604 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.34935778 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.458967585 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.36378607 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.368732036 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.528761268 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.398748457 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.348595769 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.511795611 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.386863006 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.874318207 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.370743066 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.348250209 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.43674778 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.367039864 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.529253708 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.589507285 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.879671561 seconds)
  done (took 30.732965361 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.77602997 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.354974352 seconds)
  done (took 9.382606208 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.36659075 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.347090452 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.348305389 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.34700245 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.337409267 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.335572142 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.343521998 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.354015257 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.823440779 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.46855279 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.349730052 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.355390246 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.36483236 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.349401905 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.342339358 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.382189843 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.496940348 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.345841054 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.345023653 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.352484943 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.346168768 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.470992949 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.385173681 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.345597948 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.468181376 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.88300776 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.346012053 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.35290902 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.477841784 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.346281353 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.347373058 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.347434426 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.348748252 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.953437017 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.820686734 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.356414292 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.385323153 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.355951403 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.346241686 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.541452677 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.352092312 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.355125493 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.346491547 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.810107965 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.474596597 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.45951224 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.550298738 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.364181389 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.349787845 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.40761462 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.347266136 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.350222303 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.379383661 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.105830876 seconds)
  done (took 111.890794405 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.366632019 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.736256717 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509398391 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.358614526 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.174706082 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.031839842 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.349438686 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.6150381 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.406818863 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.336687528 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.627996483 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842805853 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.36336261 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.41678653 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.783683854 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.399945012 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.344366682 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.222645734 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.355390767 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.340850331 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827178019 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343444739 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.360500874 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.476704921 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.380234943 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.789507501 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.652773181 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.879026134 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.356983126 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.339008279 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80194349 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.358500173 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.363776392 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.338822808 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.601063993 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.693693821 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.674418259 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.354856288 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.353362761 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.341807764 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.362923879 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787493705 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69639621 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.359682312 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.36043756 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.803364758 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.361393287 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.350707686 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.34326882 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561346507 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.029639221 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.345230091 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.641033655 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.341659819 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.633599712 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.411886876 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372469109 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821635566 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.361174159 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.515524916 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.40665788 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.345807653 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.347582786 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.346060109 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.342402851 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.683994683 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.690737716 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.346705742 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685972549 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.811116989 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.362997963 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865549161 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.262697276 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.352964434 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.403947053 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.35392732 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.043053621 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821681386 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.368781635 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.341993844 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671088354 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.359585247 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.617685447 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.358588883 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.342978714 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851350784 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.352639104 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.351887567 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.355515045 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.340393754 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.103433409 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.349451016 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.620620412 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.377400356 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.34691493 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.3474995 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.367533413 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.343052486 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.358798217 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.348655977 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859886847 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.360613608 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.306275302 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.358992744 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338253823 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.332868235 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.335785982 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.338558481 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559383924 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.798274185 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.35798641 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.338220779 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.331544514 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.341577672 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.466098713 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.342997518 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.633958481 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.355013687 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33280811 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.351854367 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.071972236 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362282201 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331679671 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.356008857 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.234820979 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.540173007 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.357007012 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.350058964 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337883029 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.355347846 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.558867748 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.358236666 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.414270869 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334950636 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.026626302 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.366263277 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.368410771 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.671820893 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.338812984 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.200393195 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.346069845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328471775 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611657619 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.586835111 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.611523816 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324874135 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.337007432 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.998296538 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.363986704 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.461981414 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.339002476 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.2983136 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516692596 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.52526515 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.316545756 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.913552925 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.318517374 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533706364 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316487977 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628879893 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.802807899 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334304018 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.321483459 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.020983426 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.010077896 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.07585864 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.323711287 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.586749993 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.267263251 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.797379861 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.319584371 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.313394586 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.917923729 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314545084 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317071106 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.313458325 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.313205289 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.388000358 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486522003 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.493115747 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315902444 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76113694 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.375407033 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314119861 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.32131809 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.316746044 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.661053568 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.336816941 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.31704244 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.312512124 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.313757427 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.314770628 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.777982088 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.273260176 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.31491783 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.465023975 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.940022258 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.330787631 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316256814 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.930507117 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.525391318 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.849272611 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.340745202 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.613013264 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.338319576 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347587386 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.037848677 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.397336205 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816556673 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330768809 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.314042808 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904882975 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.329674329 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.384483966 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.3123595 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313230337 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.837660508 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.330554441 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.311207019 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.492244578 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325146848 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.577683054 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.314341838 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.338518604 seconds)
  done (took 1110.405712536 seconds)
done (took 1320.981672902 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.314338452 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.311095386 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.2979561 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314802428 seconds)
  done (took 26.466096395 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.322029887 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.320941791 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.322148819 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.315938109 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.324427445 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.317405758 seconds)
  done (took 9.151169659 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.401669499 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.307945289 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.309897132 seconds)
  done (took 19.247968256 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.513987797 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.598487689 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.662983566 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.507135586 seconds)
  done (took 10.511420737 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314288161 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.31494832 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.314760832 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.316351476 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.31977282 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.321858106 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.316434686 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.315708281 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.317700178 seconds)
  done (took 13.081298155 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.316781633 seconds)
done (took 81.002853325 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.747850529 seconds)
    (2/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.43302913 seconds)
    (3/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.917324314 seconds)
    (4/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.300031396 seconds)
    (5/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.50934423 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.551809531 seconds)
    (7/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.936801149 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.348954006 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.333876544 seconds)
    (10/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.656953242 seconds)
    (11/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.372631332 seconds)
    (12/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.336725304 seconds)
    (13/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.111724057 seconds)
    (14/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.293232176 seconds)
    (15/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.40701746 seconds)
    (16/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.334879129 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.643856467 seconds)
    (18/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.758887481 seconds)
    (19/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.289237124 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.227483112 seconds)
    (21/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.101910201 seconds)
    (22/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.332848653 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.398251092 seconds)
    (24/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.426907804 seconds)
    (25/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.328896834 seconds)
    (26/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.825026355 seconds)
    (27/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.316832587 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.325227669 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.717057518 seconds)
    (30/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.201205057 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.437618835 seconds)
    (32/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.308579541 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.297473572 seconds)
    (34/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.334614946 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.480936144 seconds)
    (36/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.011615554 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.349825169 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.336785558 seconds)
    (39/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.68414255 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.042535274 seconds)
    (41/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.397047185 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.420711453 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.569786235 seconds)
    (44/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.519040211 seconds)
    (45/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.329677996 seconds)
    (46/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.684076864 seconds)
    (47/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.374917386 seconds)
    (48/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.675362667 seconds)
    (49/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.424701566 seconds)
    (50/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.134597529 seconds)
    (51/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.296398925 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.6770954 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.965684868 seconds)
    (54/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.298810352 seconds)
    (55/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.334730223 seconds)
    (56/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.124039321 seconds)
    (57/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.411832173 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.058779969 seconds)
    (59/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.401262333 seconds)
    (60/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.395942134 seconds)
    (61/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.293925502 seconds)
    (62/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.332288059 seconds)
    (63/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.443358126 seconds)
    (64/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.136061389 seconds)
    (65/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.094657344 seconds)
    (66/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.909295706 seconds)
    (67/286) benchmarking ("sort", Int64, false)...
    done (took 5.513024359 seconds)
    (68/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.332972115 seconds)
    (69/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.330560713 seconds)
    (70/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.576894425 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.401374322 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.947554622 seconds)
    (73/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.293345425 seconds)
    (74/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.485653076 seconds)
    (75/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.017511578 seconds)
    (76/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.723215429 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.181243732 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344242745 seconds)
    (79/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.294090193 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.132552043 seconds)
    (81/286) benchmarking ("sort", Int8, true)...
    done (took 6.317536092 seconds)
    (82/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.072202261 seconds)
    (83/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.392633296 seconds)
    (84/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.342243301 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.795039099 seconds)
    (86/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.57645363 seconds)
    (87/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.315177709 seconds)
    (88/286) benchmarking ("sort", Float32, false)...
    done (took 5.337299587 seconds)
    (89/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.2958221 seconds)
    (90/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.933853467 seconds)
    (91/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.297147364 seconds)
    (92/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.345150939 seconds)
    (93/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.308099164 seconds)
    (94/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.301011551 seconds)
    (95/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.298548818 seconds)
    (96/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.737346294 seconds)
    (97/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.819489368 seconds)
    (98/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.293941774 seconds)
    (99/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.301858278 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.568599067 seconds)
    (101/286) benchmarking ("sort", Float32, true)...
    done (took 6.316751259 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.278230505 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.333608551 seconds)
    (104/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.424825278 seconds)
    (105/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.315267387 seconds)
    (106/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.315310947 seconds)
    (107/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.314487496 seconds)
    (108/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.748506373 seconds)
    (109/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.701724768 seconds)
    (110/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.401961951 seconds)
    (111/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.304258792 seconds)
    (112/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.428262595 seconds)
    (113/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.324236412 seconds)
    (114/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.422591652 seconds)
    (115/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.520206768 seconds)
    (116/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.338084267 seconds)
    (117/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.30070411 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.845226432 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.353089925 seconds)
    (120/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.322181153 seconds)
    (121/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.421571381 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.573664245 seconds)
    (123/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.343791994 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.064359609 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.582906622 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.942569664 seconds)
    (127/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.799093689 seconds)
    (128/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.530418276 seconds)
    (129/286) benchmarking ("sort", Float64, false)...
    done (took 5.614093806 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.419620011 seconds)
    (131/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.319494192 seconds)
    (132/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.34053368 seconds)
    (133/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.55063377 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.90048884 seconds)
    (135/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.373684299 seconds)
    (136/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.379078879 seconds)
    (137/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.298529956 seconds)
    (138/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.164591135 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.106197032 seconds)
    (140/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.296379078 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.359400335 seconds)
    (142/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.297591596 seconds)
    (143/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.570396925 seconds)
    (144/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.349865667 seconds)
    (145/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385953465 seconds)
    (146/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.380361294 seconds)
    (147/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.097019066 seconds)
    (148/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.094655506 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.340234289 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.342750192 seconds)
    (151/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.031708205 seconds)
    (152/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.69764941 seconds)
    (153/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.354456051 seconds)
    (154/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.331204568 seconds)
    (155/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.847036853 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.34853813 seconds)
    (157/286) benchmarking ("sort", BigInt, true)...
    done (took 6.319044126 seconds)
    (158/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.502878062 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.309080244 seconds)
    (160/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.148967381 seconds)
    (161/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.423906058 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.155139967 seconds)
    (163/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.427687667 seconds)
    (164/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.367366712 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.397569173 seconds)
    (166/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.366633537 seconds)
    (167/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.403866024 seconds)
    (168/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.300129297 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.799485097 seconds)
    (170/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.418485343 seconds)
    (171/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.501879263 seconds)
    (172/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.088465296 seconds)
    (173/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.299425278 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.359898156 seconds)
    (175/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.573471321 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.322859298 seconds)
    (177/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.53278493 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.363149524 seconds)
    (179/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.665451344 seconds)
    (180/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.456817491 seconds)
    (181/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.300406532 seconds)
    (182/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.317227957 seconds)
    (183/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.369538289 seconds)
    (184/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.325294174 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.105080978 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.399127238 seconds)
    (187/286) benchmarking ("sort", BigInt, false)...
    done (took 6.337158828 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.401337368 seconds)
    (189/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.651079221 seconds)
    (190/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.8387456 seconds)
    (191/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.425816983 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.67143014 seconds)
    (193/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.363446525 seconds)
    (194/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.8195962 seconds)
    (195/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.305433253 seconds)
    (196/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.832162607 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.236101752 seconds)
    (198/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.833774783 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.228307157 seconds)
    (200/286) benchmarking ("sort", Float64, true)...
    done (took 6.319175837 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.733430499 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.554336827 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.945664367 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.730488327 seconds)
    (205/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.724947471 seconds)
    (206/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.299231229 seconds)
    (207/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.333799732 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.447918178 seconds)
    (209/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.338445499 seconds)
    (210/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.300225996 seconds)
    (211/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.364442543 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.343997026 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.170581185 seconds)
    (214/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.839639126 seconds)
    (215/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.735501585 seconds)
    (216/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.161723389 seconds)
    (217/286) benchmarking ("sort", Int8, false)...
    done (took 4.395415382 seconds)
    (218/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.333736811 seconds)
    (219/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.899114319 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.382428999 seconds)
    (221/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.345133762 seconds)
    (222/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.304296786 seconds)
    (223/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.628814926 seconds)
    (224/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.304295606 seconds)
    (225/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.409130137 seconds)
    (226/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406487767 seconds)
    (227/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.739606604 seconds)
    (228/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.373517146 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.66802295 seconds)
    (230/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.35296898 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.337983673 seconds)
    (232/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.336427189 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.333695724 seconds)
    (234/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.348407934 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.532169142 seconds)
    (236/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.321618647 seconds)
    (237/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.33702898 seconds)
    (238/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.573749752 seconds)
    (239/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406528277 seconds)
    (240/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.71228168 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.353081912 seconds)
    (242/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.309807137 seconds)
    (243/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.341767912 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.711288579 seconds)
    (245/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.333998868 seconds)
    (246/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.848102187 seconds)
    (247/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.542242328 seconds)
    (248/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.309054697 seconds)
    (249/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.196438574 seconds)
    (250/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.56217633 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.740571311 seconds)
    (252/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.534911881 seconds)
    (253/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.412427271 seconds)
    (254/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.308913482 seconds)
    (255/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.120232832 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.347545972 seconds)
    (257/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.450995726 seconds)
    (258/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.535797015 seconds)
    (259/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.083058118 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.432977763 seconds)
    (261/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.334573119 seconds)
    (262/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.340414415 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.409865719 seconds)
    (264/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.079296397 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.443747584 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.136939092 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.248506122 seconds)
    (268/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.507740186 seconds)
    (269/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.445100238 seconds)
    (270/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.777322601 seconds)
    (271/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.331181388 seconds)
    (272/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.30882852 seconds)
    (273/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.325228822 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.369396727 seconds)
    (275/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.679313221 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.004492559 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.313525379 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.912432901 seconds)
    (279/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.336425668 seconds)
    (280/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.305369054 seconds)
    (281/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.677854094 seconds)
    (282/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.321911475 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350893806 seconds)
    (284/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.306505811 seconds)
    (285/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.358265075 seconds)
    (286/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.319229931 seconds)
  done (took 932.917406238 seconds)
done (took 934.143947416 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.360509649 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357209165 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.340079822 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.360152466 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.449767856 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.362735284 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.350022474 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.338156532 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.386012153 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.387826049 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.338826353 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.36484534 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.339683758 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.34089509 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.338444198 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354304891 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.372845643 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.341042194 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.358877384 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.34884989 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.35604845 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.33621209 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.387977594 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.362308035 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.34442746 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.341219416 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.345333776 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.358056001 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.452311658 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.341829381 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34424387 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.351366013 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.357939981 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.336003877 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.335439667 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.359102996 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.352643152 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.349703684 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.344158108 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.373234652 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.75546509 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353326589 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.340607234 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.340354042 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.341193384 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.345942367 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.341766115 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.345764016 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355992221 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355466679 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.745409851 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.369809988 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.344365854 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.342757935 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.352497401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.342794138 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.344530008 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359423611 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.362773574 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359486249 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.352372778 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344398488 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.343099553 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.357775047 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.349726794 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.780407048 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.349952696 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.347254362 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.754391169 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.358463362 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.784143309 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.364548125 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.344715656 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.355958155 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.375753549 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.363731309 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.336617698 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.342701087 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.348401522 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.34313209 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.352797801 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357982198 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.348351189 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.344292978 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360425539 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.367594977 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.354168458 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.343144331 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.3526108 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.364154915 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.351959109 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.35281601 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.346890193 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.341089125 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.352026884 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.349815031 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.348419115 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349724071 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.349686486 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.357470586 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.7533079 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374884305 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.345642989 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.341637694 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.342569807 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.357383253 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.751444583 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.35946405 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.367019571 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.392908829 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.347165208 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.35119871 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.346515833 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362064081 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.355246667 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.346704745 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.33896378 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.352438155 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.74426858 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.373203765 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.350968321 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.346059652 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365603496 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.346921115 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.343149969 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.367535895 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.346377034 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362118313 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.466154718 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.356019635 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.379414225 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.346011238 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.349001111 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.369997572 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365140433 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.376543093 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.349765055 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364033622 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.361901122 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.342833571 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.361170291 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.358554463 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.34636917 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.35171906 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.341438718 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.371765927 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362739358 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360724014 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.367712244 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.469307407 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347001876 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.358042914 seconds)
done (took 226.666525381 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.409647746 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.347876152 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.435369419 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.345906766 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.446622845 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.454878234 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.340773765 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.347259534 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.341653886 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.726310608 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.341185211 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.344066841 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.346478615 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.343860985 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.426029189 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.342338855 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.342277907 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.687492762 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.342713835 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.415011125 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347027119 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.342540668 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.346698526 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.775039067 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.344301899 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.347800846 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.417751953 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.347132127 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.699292899 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.350369498 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.349155875 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.700046667 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.439057126 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.364084438 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.355898392 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.35331261 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.453136635 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.365029467 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.434912434 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.428360083 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.439287398 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.384197017 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.342215243 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.347654709 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.350391559 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.348226396 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.343813324 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.374636804 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.350149211 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34577751 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.689337522 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.357292826 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.343699296 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.344996074 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.344767728 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.374668455 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.344068495 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.344678656 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.435839905 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.348912966 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.411255119 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.730372533 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.730615909 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.350491917 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.350745478 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.34963342 seconds)
  done (took 149.420466299 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417110942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42591101 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.462915091 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.36508033 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.403486323 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.468202786 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.364077605 seconds)
  done (took 11.161837418 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356939136 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351940676 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.399672715 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400206621 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.352830814 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.496995556 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351072294 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.362311846 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.345479599 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.402464478 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.350027309 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349605757 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.356301578 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.350569483 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.397993841 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.361651545 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465192017 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.350166042 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.348637288 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501302609 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345574289 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.356512492 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.401521031 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.361816715 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.351815913 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.356372333 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.917634077 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348743013 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347725402 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.350747031 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348237467 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.389808937 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.35102563 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.347600685 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347370487 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.466156075 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.347901053 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346998892 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.348702918 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.341199263 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.350515337 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351201646 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.350656785 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.350151872 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.349691846 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.373857722 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352525493 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.349467851 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.351477232 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.350228939 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.400563065 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352528601 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.349461852 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.3470997 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.408011304 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35792709 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.352607769 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.349832809 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351494931 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348939333 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.502805974 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.398763805 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.350250812 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398811189 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352597831 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.351346813 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.351214255 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.353276433 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.407730242 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.354298968 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403682098 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.355474339 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.510473605 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.378164105 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355935412 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.355403318 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.356032314 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353669063 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.355289849 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.359781588 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.35558724 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.35661461 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.359525982 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353045995 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350290565 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.45564382 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.463674901 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.350204736 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.367345483 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.36007643 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.350785666 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.40550977 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356757924 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.351771207 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410391677 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.469375142 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.407446163 seconds)
  done (took 154.960911379 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.358042953 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.362486369 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.355213698 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.371065176 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.35355858 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.354183434 seconds)
  done (took 9.416381145 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355042796 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358549959 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.355796884 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.354896166 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.353627383 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.355448457 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.353915685 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355875517 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.362348613 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.355340033 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.355246535 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.357734311 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.358880319 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.353353203 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.355211677 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.355119289 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.355092348 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351340515 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.357166627 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355932006 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.46155845 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.357720333 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357007111 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.359600709 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.360373524 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357182246 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.36428865 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.356503334 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357502665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.366604701 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374573541 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.355563562 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356916868 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.363297639 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.358201087 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.355214242 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361789129 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.356847317 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355691743 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.358906412 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.357111472 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361045409 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.357900992 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.355970573 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.362118395 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366987887 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.361617429 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3680535 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361246613 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.360985928 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.361798734 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.358754448 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.356987887 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.357409004 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.363483997 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379252674 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.366546338 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.361154487 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.358187897 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.361726166 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361824766 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.357638064 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360981997 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.362947572 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.355659903 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.359310853 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360885472 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366218287 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364258842 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.361330748 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.35999553 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.360827318 seconds)
  done (took 100.244618514 seconds)
done (took 426.456456731 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.707447271 seconds)
  done (took 7.9726527 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.484776678 seconds)
  done (took 7.749489502 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.696543274 seconds)
  done (took 21.969568397 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.365655718 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.394816501 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.360372091 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.362121633 seconds)
  done (took 26.749205121 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.76973572 seconds)
  done (took 8.037202719 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.351410815 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.363452721 seconds)
  done (took 13.982153241 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.969828488 seconds)
  done (took 8.236553846 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.641567041 seconds)
  done (took 7.917432642 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.379536648 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.378328504 seconds)
  done (took 14.285333873 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.333638963 seconds)
  done (took 7.600471998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.156150488 seconds)
  done (took 8.423780761 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.35534508 seconds)
  done (took 7.624644428 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.369141668 seconds)
  done (took 7.637452668 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.36491853 seconds)
  done (took 9.63023461 seconds)
done (took 159.081838785 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.355267762 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.354194721 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.352576857 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.352983303 seconds)
  done (took 26.679077366 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395980529 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.396347901 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.394846001 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.404102066 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.397446093 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.395288603 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.389820511 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.386626848 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.403181763 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.399052787 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396468428 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.39752977 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.396024089 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388639719 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397638761 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.396784449 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.407276435 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397839674 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.386764535 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.399478057 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.363404493 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.406433166 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.400307354 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.362946263 seconds)
  done (took 34.727414561 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.882443375 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.433831941 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.516292329 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.415804304 seconds)
  done (took 7.515414681 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.414015398 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.414895173 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.42698381 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.463262891 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50562473 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426890934 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390547943 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385059618 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.370486093 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.414876306 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.491834282 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.430029984 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.519116787 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363595097 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.55566588 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362121052 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.363827791 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.413652646 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.468235369 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.481163363 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364038977 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.416957723 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.419281148 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.435313231 seconds)
  done (took 35.567686061 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.364161661 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382434214 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364085616 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.362833966 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.371396873 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.361146654 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363836129 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.3644492 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.364506585 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.369381001 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.363213387 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.375142181 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.362916688 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.364001215 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.368740219 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.366214008 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.369834501 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.362939935 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.364018485 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.371185014 seconds)
  done (took 28.608100771 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.357957567 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.210869652 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710559914 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.612585949 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.357741057 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.359964932 seconds)
  done (took 27.881267684 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.433278497 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.584470665 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.365356071 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.722188167 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.814503267 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386313929 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.365735756 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.60579548 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.922865346 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.918154323 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.421970606 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.435836473 seconds)
  done (took 20.249062858 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.36882501 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.362094438 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.373562196 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.375494645 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420942935 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.386935235 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.374108042 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.359691265 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421362304 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.43956445 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.38754431 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.42099919 seconds)
  done (took 37.963964402 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448320465 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404546942 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.242896754 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356759787 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07376761 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567497665 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.406109094 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.838496575 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.363234857 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634817547 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370437618 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452279997 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616263682 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374131335 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365039727 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.353432284 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603059668 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868919322 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363640994 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.489549607 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387485681 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368491172 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.573318647 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.391283583 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573952468 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.502175407 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.621530587 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.13721287 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655945785 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374181981 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372374052 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362759065 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636568063 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019011267 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475683165 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372260163 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364276046 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.906078745 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.344055603 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.482852382 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380392408 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368994721 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374009299 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36301575 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296955046 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366068761 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831144429 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.36835189 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.074285072 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362102116 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375527145 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454238737 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.367194249 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.353447175 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393432598 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.368034629 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.360297942 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457110961 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947790939 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.898424915 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369836336 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.302465318 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369489622 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.384972928 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010143115 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.480301508 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.369129446 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367676175 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296748647 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.474589206 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380708774 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513492188 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.383121441 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015706395 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076185224 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380351192 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297306428 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933806203 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379736332 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.302122081 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593841225 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14124909 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301465158 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.322510465 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304689722 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077070699 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370092513 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.776629778 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383272305 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843225431 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.374334886 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382055705 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388564331 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58793156 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.244475224 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366941849 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.367175354 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492847472 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385755952 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.834759645 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303677416 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.366473193 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621044766 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.577671517 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363727781 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.352863114 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604966765 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370297255 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.383330233 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369137288 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.378474953 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.956280956 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396082874 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900617632 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385555621 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.144546163 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109627761 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374266925 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.469810847 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378659967 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616699799 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.12956134 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.522767535 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435269516 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376171333 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367987073 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.495029926 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.9613324 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.527159309 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.364450696 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376068181 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.379054457 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.370177652 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317851801 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.368419589 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373885148 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.147579992 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591690815 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380278776 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651433266 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301648358 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517194256 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376764457 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.588987616 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.559845081 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.382396056 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632496909 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808892305 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371126387 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384383248 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390869657 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471845595 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391557069 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.368743141 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642156407 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.372581433 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374639375 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.51832138 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.149063062 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366654057 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.374690925 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385399675 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966620218 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366965051 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369780823 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259799741 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.383430747 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440906708 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374974543 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.379633969 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.185269335 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395721817 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.37369447 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.379090534 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59095992 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3800015 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.416929375 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452682379 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.583696672 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968471948 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402568447 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.306732996 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.081420378 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.062384021 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373469303 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.556632483 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37260624 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382615748 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380721156 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371959771 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95979075 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393874778 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.419360314 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.380601384 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380771302 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.377085301 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371215782 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.163257465 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.94613185 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380456532 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.388293735 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516824575 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.385227457 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306060552 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.889946823 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378845065 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37360963 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.150758711 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408240909 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.433493305 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867300837 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628934017 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388679007 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380462479 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.545796394 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.40623264 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.379994014 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377445272 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379259653 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.376514 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379605229 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.382105035 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.431252457 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.738170687 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934911036 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108024115 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945850018 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311816647 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.381120338 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.256225814 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.840960541 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304081056 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.03082008 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562258625 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8593556 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314202369 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588956205 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.561935365 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152547084 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389687233 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599331116 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29227434 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.380163783 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382997458 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585151982 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410312871 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.3867929 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.309668894 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.654147425 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649777668 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373471725 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456020971 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839938035 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372029964 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.149580576 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.379935621 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.698714499 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565303648 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.000352174 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.762435886 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374640064 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395228675 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873426708 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376269168 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.905592735 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017190286 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392125014 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.595960407 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309898633 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.384668742 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.386444256 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.374633521 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.681403864 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.384708553 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.628955838 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385907169 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311103917 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386657394 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927405905 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.248700356 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.383462711 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3774034 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128258641 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38220933 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674085655 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.383435198 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.165977766 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395108613 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311762732 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310981015 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.070268239 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387928494 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356783701 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885445859 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.383607904 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404941334 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381339471 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222362624 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633338137 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.390900483 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.983347901 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62144075 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383152246 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39821251 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.478106864 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381234025 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.358505864 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.258969422 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.616027435 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397310467 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599792773 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.270067002 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.275028966 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.432478251 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605796707 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.26169614 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379977915 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63169549 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.107051435 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.395186826 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100669684 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418083318 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38016857 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390318313 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381697523 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396628979 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466607223 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39017605 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.389374743 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.389635119 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554403251 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379248172 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384884268 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.395370403 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474128335 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.951655035 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.164318318 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.154744453 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989659366 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164407687 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.99829098 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415807458 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383292887 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381734829 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315978453 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528548066 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906418128 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653826336 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509795335 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.3821648 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399227941 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381116895 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390337463 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593516561 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655600711 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.35991975 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381837274 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.169501716 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.538738661 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392930811 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.590390273 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902032331 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964962782 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497040583 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388877647 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.845827358 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654128472 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.473502504 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384639404 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975604841 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.388602633 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.721005155 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.403661903 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387628452 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532788896 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390979022 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048776786 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.410460064 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.538316415 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.155803062 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.459900963 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637118314 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.859315685 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.390002173 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993358045 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126693274 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642724905 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452480392 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395666199 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.491131009 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531031336 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.387775793 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279387303 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384729588 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230752134 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.092515702 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.39346721 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989511141 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667701252 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.381582347 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.389977077 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403252584 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.394091611 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606101581 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097433507 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605074489 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393918083 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390969252 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.9537253 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987473551 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414654715 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317904795 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.38861793 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640848078 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636729374 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406529807 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.836645047 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.095323079 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961950773 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.358386872 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40768213 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394341689 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.105681836 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993728566 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.207434626 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90924655 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.04477169 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397263267 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661706095 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.390216751 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39319969 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663154449 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.388457768 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386119551 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398491083 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.997656902 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181307196 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.387114434 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.580295453 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.321872646 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.613885665 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418283529 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337447765 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38440431 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.571182203 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384113149 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516166514 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395313355 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.393809714 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394167157 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.121895499 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660922682 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.390289874 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.381545042 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.364193251 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391932398 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481599691 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663512565 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39151048 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.063562762 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.739161761 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644857019 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396714099 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.368345908 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.392866751 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389818102 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.107266115 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39509885 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389036779 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987047942 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.39791457 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.401070992 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391163748 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.603562762 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600551923 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399580476 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40290353 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39706616 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406167768 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.287721267 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.157174088 seconds)
  done (took 1663.467707145 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.423626196 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.400033276 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.42980946 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.446284084 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.450058155 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.509239371 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.481841517 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.406619498 seconds)
  done (took 52.847630037 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.39666256 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.542246016 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.421682344 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.389238988 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.397540561 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.396624592 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.84864941 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.400677058 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.396017638 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.400305626 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.398274428 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.401381977 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.059306447 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.397627982 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.401113704 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.371367081 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.39881738 seconds)
  done (took 66.322496635 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.392082639 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.406769686 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.495887296 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.388681758 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.528742403 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.419988303 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.366630912 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.46770023 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.402596519 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.409904977 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.059048416 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.403011557 seconds)
  done (took 85.041082815 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.409811847 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.407835393 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.408272567 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.409214594 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.408243663 seconds)
  done (took 8.345721916 seconds)
done (took 2096.487319315 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.400422704 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.103013948 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.019894771 seconds)
  done (took 5.426102958 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.537741991 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.588905505 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.709071393 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.712719676 seconds)
  done (took 7.84861812 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.677027005 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.778018809 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.578009129 seconds)
  done (took 6.331992826 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.673460272 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.401896917 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.396284537 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.390388479 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.39517845 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.39576696 seconds)
  done (took 20.481761564 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.396215378 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.395863714 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.394168129 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.399275619 seconds)
  done (took 6.886494748 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.371683267 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.087961234 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.371907814 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.389415218 seconds)
  done (took 18.52058439 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.140115642 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.155816447 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.13928891 seconds)
  done (took 7.737675053 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.421627643 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.417296651 seconds)
  done (took 4.139514079 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.679733584 seconds)
  done (took 2.979199549 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.409568037 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.448534961 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.452181791 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.376327796 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.675212784 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.812522616 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.037591251 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.618778912 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.347451383 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.624621368 seconds)
  done (took 31.103084741 seconds)
done (took 128.628490312 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.227757841 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.761326656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.597873492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.197100099 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.628309334 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.599147604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.603765394 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.166558247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.709608591 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.698842589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.243965015 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.626408047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.758434674 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.7735675 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.759252565 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.402254298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.632342416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.27724697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.886411344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.12318794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.598708764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.839611263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.077341322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.861321238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.626689955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.551183361 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.420749293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.395148976 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.068200654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.441710028 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.547669726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.29938571 seconds)
  done (took 192.70207378 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.400309577 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.392225538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.391864632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.408271876 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.396636545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.392961379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.409963336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.424261384 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.40332214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.393651134 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.393928386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.414582697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.391315032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.392914285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394407215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.39327601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.406934371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.394449322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.394202758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.393287615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.394156391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.411774864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.394154381 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.405424036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.392432115 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.41168517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.402306195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.392313742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.425041527 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.394279912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.410370649 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.39442372 seconds)
  done (took 206.113997522 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.396261382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393049436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410927036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.398949059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.394255297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.412983627 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.395135955 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.394769405 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410161397 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.392254821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.396120979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.422141414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.396922254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.414784555 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394372812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.410622573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411843879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.394842615 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.407183152 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.409159857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.398551292 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.400453195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.4028716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410061751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.396250196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.395099075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.412028903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.411325519 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.396676991 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.395270973 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.395264737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.412339473 seconds)
  done (took 206.191422628 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.602745057 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406782586 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.407526073 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.367039071 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.408078918 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.406394233 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.402223716 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.59529611 seconds)
  done (took 14.905517428 seconds)
done (took 621.215370716 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.678829769 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.392063918 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.604461143 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421455301 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.190621443 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.440653603 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.424316754 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.597081959 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.339526441 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.601310485 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.690353352 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.439199125 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.83550437 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.423196502 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.680344752 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.521029487 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.32989009 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.453735809 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.73881522 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.960565545 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.684873308 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.916573137 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.613820951 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.33040089 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.84043165 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.899846791 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.135842908 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.322071276 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.439974276 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.746712721 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.078670649 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.378333454 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.484953684 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.484594043 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.542469084 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.523886957 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.363700906 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.482314449 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.626316681 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.685496306 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.95410662 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.159789325 seconds)
  done (took 94.767858538 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.392612859 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.392251213 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.390210561 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.391085303 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.392371589 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.39335838 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.390303768 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.389837529 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.391306676 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.390168969 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.389976695 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.39140582 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.390996289 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.39222304 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.391420587 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.389976816 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.392772858 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.392466027 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.39105875 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.389223174 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.392557141 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.391605777 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.392301839 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.393106987 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.391436413 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.391149253 seconds)
  done (took 37.486720377 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.409575327 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.651688443 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.821650112 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.417948128 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.409974172 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.414438938 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.488803781 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.410526813 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.412479229 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.415023681 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.562226387 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.411633114 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442362036 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.851368481 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.41468931 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411060019 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.412773393 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.411469392 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.663825402 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.417482888 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.506721362 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.410179697 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.48983155 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.419322917 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.431703515 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.412183277 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.414636181 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.976200341 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.429120001 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.56525031 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.220806474 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.488774196 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.953999742 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.854085274 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.222683109 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.415927513 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.412754231 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.569342415 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.409141779 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.413172751 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.49112727 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.410396944 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.832103196 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.096274681 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.427742136 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413612593 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.998524882 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.583881605 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.657650845 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.422208924 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.857899103 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.417658727 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.415897695 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413522252 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.658539204 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.420736759 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410055202 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.030817285 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.435495801 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.491693154 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.411212214 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.415901744 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.671183438 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.413674733 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.656958421 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414889846 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.419742495 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.43330629 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.833247939 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.413537088 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.12034112 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.430227583 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.414749642 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.566118182 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.657882605 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.029330398 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.430933288 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.672856632 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.969132619 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.502968472 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.415290524 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.968495598 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.509714655 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.417890466 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.417847858 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.415745345 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.415366386 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.462628348 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.490345579 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.040013456 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124204956 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.053717233 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.511098098 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.427540743 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.417071611 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.033343777 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.436101606 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.417408998 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.832121442 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.118046612 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.432414754 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423197736 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.117729097 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.434224196 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.495078882 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.420392221 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.841805757 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.414850821 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.467504124 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.417369642 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423309842 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.43850605 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.496185962 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.416848683 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.419047824 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.088743263 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.58956578 seconds)
  done (took 186.207935665 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.412374178 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.407637176 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.411516251 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.409847455 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.412090072 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.419136993 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.415369902 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.409787347 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.419176337 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.412542431 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.412702929 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.413182942 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.414894302 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.42160276 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.419252662 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.418953537 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.069688618 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.412282404 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.412419329 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.410698341 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.209000645 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.411983529 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.411952857 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.410921987 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.411218696 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.413104054 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.422093147 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.431872328 seconds)
  done (took 154.379534862 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.423228699 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.983287474 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.434655808 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.552625389 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.443223341 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.417504916 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.54792943 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.477827542 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.436167155 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416168919 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.416333954 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.721433784 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.418809826 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.94116669 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.613193371 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.563794037 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.936543287 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.434388377 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.417100473 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.418035211 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.553570506 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.42243085 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.725152823 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.991717296 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.438701037 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.988520082 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.402631487 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419610432 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.420722568 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.987454002 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.434561103 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.724535167 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.495699328 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.478044528 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002395474 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.952786152 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.953056689 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.566526771 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.419841632 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.418105825 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.418077989 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.406332247 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.986814299 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.437346832 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.421760985 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.975881253 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.438888134 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.421755795 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.426540775 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.417318815 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.48134561 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.495471234 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.741415121 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.990384158 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.513625529 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.431244213 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.554235438 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.819065175 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.421756032 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.939852336 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.402130475 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.996159191 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.439258071 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.405141271 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.424541263 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.426605192 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.570592587 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.553002425 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.941772543 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.435531891 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.94116251 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.585668202 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.417574592 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.422260325 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.423494735 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.993897042 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.95395921 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.587631314 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.555472838 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.616397846 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.406111072 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.420751887 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.406313485 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.502421139 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.419056684 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.995565299 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.959801857 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.436850393 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.424807701 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.426916134 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.42347665 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.599314795 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.007533516 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.517056123 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.930630477 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.749418194 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.730477896 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.424138309 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.485294687 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.436100844 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.732873214 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.425809889 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.483235995 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.886629497 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.73227024 seconds)
  done (took 168.928004912 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.67186762 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.626415321 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.513814658 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.569368065 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.029236076 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.99513493 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.669732703 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.564152944 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.532481714 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.677467695 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.564636009 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.51620274 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.639544163 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.501428438 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.16447535 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.510168463 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.529839738 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575188129 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.578689312 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.444831448 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.110386374 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.719420037 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.617071941 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.24958057 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.516747285 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.20494397 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.980612939 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.005036875 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.60063791 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.73276223 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.972035447 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.54571694 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.380347654 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.11407888 seconds)
  done (took 67.953221041 seconds)
done (took 711.030281146 seconds)
SAVING RESULT...
DONE!
