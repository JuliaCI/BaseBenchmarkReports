cset: moving following pidspec: 20926
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.227569579 seconds)
loading group "string"... done (took 0.54834515 seconds)
loading group "linalg"... done (took 7.663817897 seconds)
loading group "parallel"... done (took 0.170945233 seconds)
loading group "find"... done (took 1.164837907 seconds)
loading group "tuple"... done (took 1.82027988 seconds)
loading group "dates"... done (took 1.251318101 seconds)
loading group "micro"... done (took 0.23167419 seconds)
loading group "io"... done (took 0.768536452 seconds)
loading group "scalar"... done (took 40.914513026 seconds)
loading group "sparse"... done (took 12.812895528 seconds)
loading group "broadcast"... done (took 1.15481653 seconds)
loading group "union"... done (took 13.45907805 seconds)
loading group "simd"... done (took 4.795955168 seconds)
loading group "random"... done (took 9.699486084 seconds)
loading group "problem"... done (took 2.130490949 seconds)
loading group "array"... done (took 22.611675806 seconds)
loading group "misc"... done (took 2.11218659 seconds)
loading group "sort"... done (took 3.466485459 seconds)
loading group "collection"... done (took 19.534494757 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.579293995 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142888028 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14918515 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146877024 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18870308 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156780311 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158752135 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097310107 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.010146575 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176782969 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153135129 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524030502 seconds)
done (took 5.28341518 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.221833523 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097408698 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104042609 seconds)
  done (took 0.948053356 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.079265312 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145231749 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095057249 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077706344 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095326143 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077212513 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095253062 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076694298 seconds)
  done (took 1.41362839 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087312083 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097340121 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081520532 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096972152 seconds)
  done (took 1.116035678 seconds)
done (took 4.535194672 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.73556234 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.270817377 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203157637 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.483931779 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.175523884 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216041112 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675763727 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351884696 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25220068 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099426929 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142640464 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386445874 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13727444 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676494386 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088796965 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123480355 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178119559 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445370655 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084086106 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110175995 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117232135 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140611949 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130435732 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089476826 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18575759 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081444822 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194687162 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10813561 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080148771 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287497743 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201479027 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687249454 seconds)
  done (took 10.934160688 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111459251 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134116657 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098191312 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137231261 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1333304 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099420896 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083856944 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097559918 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12193773 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177146376 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113628119 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136314438 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094988042 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081642758 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115552068 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244009035 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121103134 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102412855 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101734332 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103068682 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121710012 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113619202 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110081772 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092280137 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167183925 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223887231 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111411171 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.1260337 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097586536 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112589516 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14373747 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141961802 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094692423 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08071126 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173521067 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123774659 seconds)
  done (took 5.207968772 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.079258382 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189306802 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121320307 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170135849 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079765236 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141952058 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094588305 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11357634 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258623898 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.121934761 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176246246 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154817055 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141590097 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098427369 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099359586 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080748507 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097744066 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.628204781 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15619155 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133621632 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096195935 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103321634 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099358235 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367447392 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087151156 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096161127 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080616424 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081517914 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159527641 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080652547 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.152987108 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101328904 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103114773 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132199406 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191629729 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127072287 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115773089 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096903789 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.075887141 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096689214 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174721081 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104140876 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077598419 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095183581 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101037665 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134671452 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134071878 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097620584 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079822246 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.217818782 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079337106 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11349155 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.903363861 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181067334 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088191165 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094984411 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320644887 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098630922 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101924903 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076657501 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.251631503 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.190341286 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097941722 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078583049 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097142675 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079516778 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397835933 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080117564 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.7062238 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083381587 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105323392 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082697054 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096776699 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102049807 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086765215 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117143311 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079495284 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098592491 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078947754 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096155154 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080651487 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108334524 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101622526 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080726371 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163904442 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080687387 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115370669 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125415589 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083762795 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095009246 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129120099 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082667821 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09732793 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131709718 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081511187 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094489933 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107171388 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082515181 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14278811 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096734637 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137584613 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094639432 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123067441 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09840709 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113352446 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111586229 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098783481 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083579688 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096012094 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075822831 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165094683 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081578943 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097250534 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080622293 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109121048 seconds)
  done (took 22.340184188 seconds)
done (took 40.309259625 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.316050684 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102895996 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104483081 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104401576 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101264851 seconds)
  done (took 1.555062307 seconds)
done (took 2.353225115 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288349667 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173210829 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095623455 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168566518 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093877815 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173092851 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159718574 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111498974 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201874563 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095763763 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16352219 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094137693 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076357517 seconds)
  done (took 2.721930873 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095827649 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115176809 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08508411 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111906427 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07604569 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1122863 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09178663 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117226371 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109944673 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084818054 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093979062 seconds)
  done (took 1.888978776 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095614133 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113264785 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082278998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111048928 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075334351 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110436772 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091338785 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116302631 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108999409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084924631 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093791942 seconds)
  done (took 1.87782874 seconds)
done (took 7.274793754 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092645589 seconds)
  done (took 0.88387368 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.933819105 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.011167956 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11306309 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149130997 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.296083933 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194188735 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.484979037 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125453647 seconds)
  done (took 11.307547623 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.113985302 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.114609364 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104424286 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082300404 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105833894 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081800017 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102562929 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101857249 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085803774 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100337175 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080743665 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102144919 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099795963 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085607277 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102189002 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08375425 seconds)
  done (took 2.405076077 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117496845 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117020663 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108041956 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108461586 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085391349 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106126958 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107416036 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089082361 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103169048 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104203428 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089480817 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108131066 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10456901 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078859486 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107753115 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108088877 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085917276 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.1073408 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107306491 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089353635 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107389474 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095906288 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086352236 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107651325 seconds)
  done (took 3.338025281 seconds)
done (took 18.728102248 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162975889 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108855739 seconds)
  done (took 1.069720333 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097215423 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113411949 seconds)
  done (took 1.011633882 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098622372 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096617755 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121831939 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1088548 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079239185 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097323346 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11993275 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080454619 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097757812 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078649452 seconds)
  done (took 1.783862396 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084989908 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109558863 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101145577 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094716744 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106280111 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095324503 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087354852 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101327005 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110782012 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078026089 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102625498 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11433867 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084555132 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116856726 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105277697 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082597041 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102652175 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100087016 seconds)
  done (took 2.58404441 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081601012 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097975778 seconds)
  done (took 0.984641945 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084736788 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094810294 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08155335 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098158555 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094575311 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077203483 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094792812 seconds)
  done (took 1.429931411 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485047032 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135740992 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261294009 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101932569 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10315306 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302161752 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100434309 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083391567 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105488914 seconds)
  done (took 2.542856591 seconds)
done (took 12.207362962 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095073108 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115803463 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111456558 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467886861 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107690807 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099880556 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147257787 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249399593 seconds)
done (took 2.205026151 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144555618 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32921647 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116561149 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067065366 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098255065 seconds)
  done (took 1.421756317 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081814453 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099484475 seconds)
  done (took 0.989369717 seconds)
done (took 3.36990851 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082125406 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096322825 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.113244385 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098316659 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078732015 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097571458 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077017259 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100023628 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078089692 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096355983 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095382378 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080969545 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096110112 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077632829 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095144485 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080730923 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094427784 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077742825 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09501075 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078321423 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096760813 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078457827 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094755436 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080457474 seconds)
  done (took 2.985335699 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102277162 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099371936 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103542826 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085431936 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102175887 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085197039 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10443196 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09704257 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085777543 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101653178 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100842962 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084316199 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100565054 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082600857 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099841612 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101616884 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085496629 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098859456 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081894482 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102036164 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10289676 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080629951 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101786257 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101164015 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084294307 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100618847 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081664607 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098870148 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102079371 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08430548 seconds)
  done (took 3.654781155 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087121462 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093944702 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078798619 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102041643 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078778482 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097970414 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076650324 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097303934 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078153796 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09622558 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078384213 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096005953 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07663018 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098036808 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077969801 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100026355 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107289243 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077647095 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095277148 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079097946 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097832178 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077310504 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095330533 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077812312 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095999151 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078141962 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09671103 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077410209 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09631164 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077184442 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099116769 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080597107 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095955416 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083069664 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099397013 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076330747 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099950597 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076129593 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097236457 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093346006 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077529017 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094780486 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07820355 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102035895 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078158847 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096632724 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077459726 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097910358 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077864456 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099014088 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076678064 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096399753 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078282536 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097119565 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081447132 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095861139 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09485057 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079362352 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096343504 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0788177 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094331282 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07777211 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097515597 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078342067 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110920788 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0836532 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095375678 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079456163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096399135 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079378947 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098482629 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108823112 seconds)
  done (took 7.215276188 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086136145 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105643158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07957603 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098517581 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075697046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097384977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099086115 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078680985 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097422005 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085367557 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097497713 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078507209 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099014053 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108022374 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079989269 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097512136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085130957 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094880621 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077440136 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100372999 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077923076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099885422 seconds)
  done (took 2.819690947 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213445974 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106811553 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142632681 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107170153 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08227206 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10678681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102230398 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087088952 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103657775 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083218174 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102646518 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103313765 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082839492 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102224012 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10034145 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085690544 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103290191 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084260398 seconds)
  done (took 2.723656258 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095141116 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099305178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101212524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100459988 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098858059 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083264023 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104790737 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107243488 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084080119 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09860957 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088836993 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101628141 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100418604 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081715927 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101489304 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08052353 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10215016 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079665994 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109116514 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10474166 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103207833 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091227515 seconds)
  done (took 2.942451579 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098367384 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100981438 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118082806 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084643788 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095662804 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079334181 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10581318 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080105294 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108920292 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101119833 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080613849 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097483741 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08815873 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099821377 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.1040339 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081111524 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101670218 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081462322 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102101491 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077265286 seconds)
  done (took 2.713062679 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104823182 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.211558778 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099906786 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092681151 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10127356 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081167286 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110562224 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100786207 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082022407 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125771402 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101076451 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081160502 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111241649 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106875577 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09894872 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092453007 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109784905 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110341941 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081307027 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101000888 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125454965 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081162974 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11063698 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100365113 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081779898 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100573529 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099714316 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088742516 seconds)
  done (took 3.722252441 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085295037 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09809132 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078607605 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096853266 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079427931 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097062055 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079290445 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096310786 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081434286 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096709639 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081086201 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099860755 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082868617 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100317053 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081181443 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099191701 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08042074 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097711305 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077822982 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097069869 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080340074 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099910395 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079934026 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097486644 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078158874 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099261301 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077852797 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096979075 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080866879 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0985023 seconds)
  done (took 3.506481339 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093614413 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109019226 seconds)
  done (took 1.032417309 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082207812 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117763827 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07852974 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105252464 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08459775 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101040463 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107782085 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085924561 seconds)
  done (took 1.595163835 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097807454 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110039704 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082095719 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113561889 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109535315 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097016476 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169602991 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101330587 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086199335 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098884586 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112960168 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080615091 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106197036 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080967001 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106668518 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088121538 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099131976 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.1052548 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084692632 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098351323 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083088664 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110192925 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08308534 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097171574 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10135496 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089886412 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112447327 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081811025 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103559946 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108201259 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086580607 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093562867 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08213902 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101429272 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078294172 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109536347 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116849172 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084270074 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109958997 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082431993 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113068255 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095642159 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086921056 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105989533 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108816233 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083201256 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100778078 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077312163 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098104512 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083904794 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096113007 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081101817 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09541435 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08827438 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103889061 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111449959 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080350321 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101523923 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084043382 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104654694 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087165059 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103115249 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101903755 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081193961 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107949811 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085717903 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109970431 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074696407 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095082545 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098043736 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091425603 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123704552 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089899938 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102116907 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101183613 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079868443 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103563263 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083060103 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107314275 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105932845 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082233921 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106750034 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0888038 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101094344 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082958702 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108339122 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098239999 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083262568 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09833602 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116955039 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081877741 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097758277 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079961215 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111525914 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084046218 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100607447 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078395462 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10876601 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092778273 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083301082 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10149323 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082490461 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112074819 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106270196 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088008483 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110182858 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087300197 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101735882 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102920622 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078707465 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101738177 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083989923 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107722356 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075286356 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104271956 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082762943 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102942104 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10888874 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079881537 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100888591 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088929022 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106304466 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079025102 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097610282 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102077014 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08186631 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105833805 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088732706 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100123189 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075596431 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096854769 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103631376 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081970125 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103764559 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08704602 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104616286 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075797511 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099687465 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103950515 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090600633 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101951668 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08192043 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107599237 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100275047 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081716701 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107169772 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08436005 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100778465 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086911226 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103011529 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076282776 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104726506 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10291812 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0811206 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104224504 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085446416 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104215252 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0817898 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100136839 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106401909 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083089032 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10009003 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081836342 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100086224 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091068708 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103629183 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095740693 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07986337 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109462315 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079121968 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101239144 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080584344 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103052869 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08156669 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09971375 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099842473 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084275126 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113073843 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084971384 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103164087 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105584633 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09363317 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100619979 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.082904368 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100956847 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101458965 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084364366 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110845607 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087174796 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107234215 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102301921 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080003895 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106422582 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09101661 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100503256 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080220387 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101662796 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084866207 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107476176 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103420187 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082904691 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099533938 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082489702 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10583574 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101613004 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083423026 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098948492 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087142033 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100694746 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088542017 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103569535 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110693057 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084792539 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097466399 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08547509 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099953094 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105589158 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078307069 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09771852 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081818602 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101007801 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081145895 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103720209 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076555628 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108704402 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088092947 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10231355 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100058446 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082840229 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107561548 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084164487 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105344148 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085442345 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107461411 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111334248 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08097153 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104325336 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092926524 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102268776 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075425947 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108941646 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100027257 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081800133 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10067654 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079558423 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104874246 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0903916 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109597815 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095020027 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083917986 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10020289 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079950446 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096896734 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08541949 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104529731 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082140965 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10853171 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102380895 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083899375 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106447663 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08194273 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103355647 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101597862 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087131447 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103676235 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085223392 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101053373 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085707454 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103728173 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079028144 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103855102 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08195844 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102531469 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10741373 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083393731 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10173732 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084122893 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103343275 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081564982 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103322458 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099155746 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086486104 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102642197 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082852157 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104011092 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076835963 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109842072 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081256906 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110441926 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100448634 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079582427 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106519874 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084660651 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10789743 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.081651947 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10380299 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102166151 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082369702 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10516974 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088622634 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099595463 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091740051 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110398338 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10192454 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085222815 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102261295 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083546483 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10181364 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083154785 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103491324 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100026318 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082891553 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107981305 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085384967 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102543871 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083917273 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10357845 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081493888 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103518387 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094582348 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082520056 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100738863 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083887998 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111899779 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083082756 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105004475 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098492577 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084873379 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100843369 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078605152 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11095773 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110784087 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083986041 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109331389 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080831048 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103844282 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111606131 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077348933 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098868637 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.0807187 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09892995 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090759268 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103527933 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09080926 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102306292 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081269101 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098921588 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10197962 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082745328 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096539747 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0816165 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10535643 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085100542 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100812684 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082917212 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105850347 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083234203 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112238581 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101283514 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091306824 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102801418 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079037785 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101550627 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081233728 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106044821 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101770183 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080686816 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098700273 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08220567 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102748093 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083958862 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10297292 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084068377 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110323913 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081345304 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105452438 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106532004 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077739071 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104414328 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082321651 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10304551 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08132217 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107421127 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104857793 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084691687 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112434869 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081031308 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102760268 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082629036 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10004018 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101301448 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082389911 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10216075 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082086795 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102857742 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089971964 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100836674 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084562749 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102448143 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101498675 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090079491 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103284626 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085686689 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110651046 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104381245 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085542639 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109704303 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086347033 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1060386 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10211769 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085554919 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108140015 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082361936 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108415115 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082839559 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103146803 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083188808 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10102637 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081191215 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102860069 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100837179 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089424419 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103999393 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081232565 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102067848 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079566279 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103530932 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105171438 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09217212 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104326721 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086371669 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098684758 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.0800007 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104558714 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07975559 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104376438 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104202955 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089512622 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105259031 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084260581 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101606638 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090828217 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108289113 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105754289 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080793721 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106243479 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084848617 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10478547 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082979955 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.1032725 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103133678 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.08764816 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104103059 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082322245 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109746541 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085886254 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104086075 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.082352696 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103518732 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101578623 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078780031 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103206016 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08490776 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108522513 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084128207 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102874831 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112009974 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082638315 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10224218 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087018987 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102232025 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086641348 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098993117 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083022567 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104801577 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103397234 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078275837 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102365689 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080035715 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105757342 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082125651 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098697115 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112571397 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092968995 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105819574 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081570277 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10119739 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078307946 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099055401 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081557377 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104482178 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104138302 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093884818 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10147988 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082627094 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098501789 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08215187 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107350449 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085201354 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101165366 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096693875 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082313953 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106459072 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088936807 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102218985 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082009571 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106969734 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083996346 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102728536 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105580676 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079916079 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106698946 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096657202 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104753943 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082781578 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110193699 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1118359 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084122497 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099010385 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082993432 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107130119 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101435434 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085538664 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103236448 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098937672 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106439057 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101233072 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082559933 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104667243 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082946368 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112043548 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084342564 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103448973 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106719558 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085996316 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111930321 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085005654 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11314805 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104933225 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086718945 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102357263 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083443046 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100590848 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081235924 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104564278 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083746549 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108883793 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110602017 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0824881 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113804281 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1105511 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088048587 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099343438 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08250429 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102525964 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079693454 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104064336 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080953192 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101764149 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080445483 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10277152 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083206715 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109385209 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104454103 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084330967 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103022667 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079427573 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105623562 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08507778 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104931973 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079070783 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103183239 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102527133 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088191001 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10739206 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083805932 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104817125 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084325283 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10429229 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078805578 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111272784 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101038782 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086986302 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101530805 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083526861 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103776343 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086499364 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109434271 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103685773 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086885915 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115490344 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085716993 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101727264 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080855868 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109821456 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099995966 seconds)
  done (took 57.777756162 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150496704 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080017343 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098726093 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078980113 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113154861 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09900921 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080063049 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100499835 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079847412 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103409317 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078009856 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099721064 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109102103 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123458379 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092997528 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104388695 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076720918 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100263513 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098447202 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080500105 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109769018 seconds)
  done (took 2.938463705 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107147938 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118128241 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113729056 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118810481 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089474727 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116777052 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113457027 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114939547 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099194668 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111866931 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118778013 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115160545 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09082877 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111333833 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111169227 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093367602 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118829584 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109907844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116096508 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094722899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114586736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115308833 seconds)
  done (took 3.29165479 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086522831 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102232256 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085300297 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098311268 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083147179 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098757633 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086455693 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10138104 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086272485 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10394147 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081433209 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102850637 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10463295 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078804378 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10335172 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08163038 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150084072 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108304231 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08302007 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106148265 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078727671 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10668798 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09806048 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079654131 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102599511 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087199182 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105293538 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080571813 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104781597 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081956707 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104736208 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07994202 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105807922 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.1027227 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082836523 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102302502 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083640108 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102816373 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07884218 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103145979 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083296257 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099975433 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083669181 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105955144 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081268011 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103266032 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083562077 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105358758 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097215639 seconds)
  done (took 5.529459082 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104658947 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161659238 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085125626 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144925449 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121130032 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113131565 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087271801 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143455004 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103870159 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081597659 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123145456 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120246013 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103807166 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089207725 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111304423 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103734388 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085018869 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103630968 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107769367 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084470743 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108334955 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090117224 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120793916 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117940753 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108670759 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082238809 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103528841 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108641292 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095998665 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110483075 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109003766 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089036269 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122101117 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109680351 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081834543 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109076396 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121673343 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104839065 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087538732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102237794 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086300627 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110068267 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110455531 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101052381 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105965243 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109146082 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082826845 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101569546 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117416978 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085480861 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114359395 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120073048 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108200272 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085048091 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110448348 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119872213 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085012428 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103138505 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086050251 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117499432 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102200529 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088159186 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120010689 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107858756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111766541 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099668073 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109807712 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108418537 seconds)
  done (took 8.191550981 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095318549 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111545925 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120343991 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121429691 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090367868 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111931665 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110326904 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089927424 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11077646 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117183769 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111777628 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133153002 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085720785 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116882741 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112144361 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090713521 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111698138 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111916369 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089749904 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1124105 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111884447 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121431934 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090453643 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120650577 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141983833 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10639528 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08939085 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112336532 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121050371 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110707588 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124871976 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091111275 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111813166 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12095055 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124658765 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08987568 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104197483 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111567851 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090720138 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112718451 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105611153 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100095714 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112869717 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10699197 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090312733 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111742511 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121033215 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123389855 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115016704 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096131278 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112475726 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121143667 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110952199 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090779799 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122130061 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14896052 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121090563 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120936849 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112359965 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100595492 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122182539 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127735423 seconds)
  done (took 7.747919323 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108499108 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11564833 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118920141 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100482735 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08320753 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109347836 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081805371 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103685283 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112974527 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094448508 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117903522 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108943567 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090631761 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117047817 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109430299 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11240562 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088720278 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110336685 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114599724 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108006271 seconds)
  done (took 2.999435857 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095386795 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124101331 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08397451 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113330095 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109326893 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090417209 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107842377 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107178685 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085919452 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108272595 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095534793 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11692011 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106907606 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090703328 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116747364 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11360514 seconds)
  done (took 2.559162309 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097232672 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118576815 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120692195 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083464712 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105212543 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079708357 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106491986 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100726409 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081332798 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124787771 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083561114 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109474848 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105182473 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082565576 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102186513 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087421843 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101992011 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081683295 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10640035 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120949359 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095685011 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105394571 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105130283 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087361576 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10543164 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088973872 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108068053 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102992874 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082661692 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105563684 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08340918 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113018136 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100985079 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084035044 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102799057 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082321301 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105987259 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084040176 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109630261 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104647963 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083794897 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104830064 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083672403 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106882265 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080159577 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107629154 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101026365 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091739524 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103569321 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085321831 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106098732 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085745978 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108063194 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115964073 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087803259 seconds)
  done (took 6.305736568 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100417881 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109590162 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079408209 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104864837 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08758489 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109166698 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108850708 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087835347 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106797668 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08173862 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108498347 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088522934 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108266064 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109178912 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087694963 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10931207 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079334361 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107290344 seconds)
  done (took 2.679413105 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092462485 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105225891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091952332 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106788177 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08419772 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10925623 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080150864 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105304866 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103954242 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086473597 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10622498 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087137413 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104186359 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086385883 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106863073 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083449957 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109493563 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103466852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085262823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102333053 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087726413 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104008083 seconds)
  done (took 3.034554646 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12023303 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125976219 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091726915 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232285831 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102613301 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133671133 seconds)
  done (took 1.708881357 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111613071 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12196109 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107402776 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106491331 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115535069 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085717612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109321521 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108258986 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118571414 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101386381 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109342022 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118111981 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118556868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095707987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114648138 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114800601 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107755595 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087412285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106740412 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127655797 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08771726 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118636291 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108538336 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08673572 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108800311 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118045904 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117830948 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120963126 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087566284 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118653127 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114362235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085960894 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118510571 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123109673 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107701121 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097199872 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108590268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129762515 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113005845 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097407896 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110398808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114111245 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096562752 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114196619 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118674234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108225159 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09264164 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108899675 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107975973 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136944782 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093751928 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118171693 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116079167 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118622148 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095914044 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156260157 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102087586 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118506936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115674571 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121884731 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117645828 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094179494 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116682483 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123073221 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114998774 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117642245 seconds)
  done (took 8.214730824 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103000694 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126775856 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109110463 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122077096 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097290032 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109737783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108366268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087962856 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109400955 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106570132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152761278 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088740001 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118740227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118663692 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087176368 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108606317 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109562033 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117690095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086952061 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134539107 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108893465 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117744066 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118547895 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096717998 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122803372 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115511822 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108009592 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087300398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108973238 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108050988 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094544229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109432553 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118045558 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08585037 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118454362 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109366717 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08608138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115042529 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108949402 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114032332 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096468099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129561064 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108541431 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107776775 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102077802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111227334 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108641969 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086086127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109990965 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1073396 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101178337 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12321193 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123596476 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11893561 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108961961 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087799747 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110286295 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108811001 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087535774 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116521674 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117999081 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086275723 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136270015 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109256027 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109267461 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117600424 seconds)
  done (took 8.098830338 seconds)
done (took 156.794649461 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.224003389 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.229608901 seconds)
  done (took 1.362270697 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099038411 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136344704 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094617048 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170204981 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106444183 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119527429 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138298822 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096301171 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107477992 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085768569 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107887972 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086195296 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172558466 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084353984 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107763339 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108008271 seconds)
  done (took 2.735300852 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201562973 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.257131187 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10123648 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106903394 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088375545 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111657489 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.1046641 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090576794 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109515926 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085801718 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108834405 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085336001 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106922692 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085788561 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111492479 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088083157 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106802512 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086758863 seconds)
  done (took 2.953103559 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116557684 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151618995 seconds)
  done (took 1.187703579 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120725337 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180219558 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318881863 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15500553 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106446618 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127483106 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15691514 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130567251 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196416806 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123815592 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122643219 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096127952 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141301732 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11588435 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093934736 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11906562 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142042842 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092158136 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116672789 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116728165 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115344424 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107133698 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11464886 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09322895 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180755142 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120163045 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084439321 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107831592 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11649798 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094740492 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113900525 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124477822 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097217119 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17709082 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100784714 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176726196 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096826916 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11240854 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114780665 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091579064 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119458259 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118016204 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103421093 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119213619 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083889833 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118870222 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106222933 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085263831 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114629774 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096022485 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116065026 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114618972 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154543039 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118477983 seconds)
  done (took 7.597414097 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.809080835 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159637616 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08972847 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.897081809 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13565584 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102971185 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78370344 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111050762 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254224377 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762121471 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132391241 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118822302 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201902526 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257534128 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95403101 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286635171 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.690920935 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101916168 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149991853 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151169403 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117835482 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135112661 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108767871 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428503122 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116911695 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112514364 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09527398 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118431742 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15751366 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124080003 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113266665 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174338444 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247006759 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203771873 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093402394 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112264727 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109949507 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167478675 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263665915 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187991636 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178930413 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109967374 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108738033 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100178297 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132244226 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107628349 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16085271 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172996331 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168000942 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113972461 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119052896 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097721745 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121381879 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162352699 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12014929 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.317633574 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308433065 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088390314 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121298002 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125514794 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25545986 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100370636 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223249431 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138882452 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208206474 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088433632 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780468781 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167778775 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11089769 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094506073 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120370085 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115926738 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096957016 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16776037 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390242777 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124654932 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115224794 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089214152 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239724479 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123261823 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088915378 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159894552 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11683694 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120422209 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100790412 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121485832 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167461527 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.255346027 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099682796 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120362503 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114877603 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102466751 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117642455 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209934376 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218708642 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15941142 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228697447 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098482519 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185403956 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167837887 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118979615 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170706505 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118412468 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100650987 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122986703 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214591416 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144694052 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122884831 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09328606 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118741302 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147168103 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126696196 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095787318 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190864683 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458888993 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165732681 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10947248 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127265274 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096650777 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182411172 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095030268 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256164334 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121646068 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168429661 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119203088 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086753353 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121396082 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161294783 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122903243 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121222889 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099754051 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119645826 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232358892 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214958245 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121497797 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218410879 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182120688 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118771249 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169299435 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121957746 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165894429 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121049958 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120569184 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094503659 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763006306 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122538753 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096771144 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115350581 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187429381 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110531808 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102247261 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124484623 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085703641 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773439502 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126455071 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120872383 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100420498 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118207476 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120564991 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094997935 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116317654 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1614826 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229188598 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119343941 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118723806 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103507387 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157876107 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117021848 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124949807 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123920488 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102843784 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122867308 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114959353 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101070739 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18916511 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161115364 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216311944 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566213457 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113165229 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124831546 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225946207 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089774588 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287083827 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118945214 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198854641 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185031951 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098254865 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310103674 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184925706 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187130976 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105305738 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19390104 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088365126 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117994685 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163686534 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111687206 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095108029 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182812756 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103273047 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123066066 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957735384 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090429542 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24507679 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086856819 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169347048 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117197208 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120956708 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29129869 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089899932 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129028657 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163999025 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115615394 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12424214 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.706008025 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124715361 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097918725 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118364852 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221487319 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162385437 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120382498 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119551483 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097578457 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183354831 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206783549 seconds)
  done (took 43.793316362 seconds)
done (took 60.542507933 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281454501 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214738775 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264297723 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17009172 seconds)
  done (took 1.953957996 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173134184 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149644543 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119980947 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108743137 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150647116 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084196919 seconds)
  done (took 1.729536874 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360552494 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274932132 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24219805 seconds)
  done (took 1.827714726 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.317896679 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248021429 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476304673 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325314748 seconds)
  done (took 2.416472902 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210439315 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134253121 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112438353 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102947417 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198256537 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248365244 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142156062 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20359181 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097814887 seconds)
  done (took 2.444596821 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197098353 seconds)
done (took 11.517332777 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.128645004 seconds)
    (2/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.129778403 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.225192759 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.205900753 seconds)
    (5/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.121917398 seconds)
    (6/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115843287 seconds)
    (7/286) benchmarking ("sort", BigInt, false)...
    done (took 0.21979869 seconds)
    (8/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.258851151 seconds)
    (9/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119682491 seconds)
    (10/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.226121757 seconds)
    (11/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.146193368 seconds)
    (12/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.256751146 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126116834 seconds)
    (14/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.217675118 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.112393081 seconds)
    (16/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.225071074 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124394187 seconds)
    (18/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101310385 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118814849 seconds)
    (20/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.190725661 seconds)
    (21/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.207464798 seconds)
    (22/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.165810765 seconds)
    (23/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.148603283 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108787687 seconds)
    (25/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169544177 seconds)
    (26/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111937201 seconds)
    (27/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.087442571 seconds)
    (28/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138382755 seconds)
    (29/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.132760339 seconds)
    (30/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089972058 seconds)
    (31/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.18550804 seconds)
    (32/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108588054 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.215563246 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.0914683 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.211276717 seconds)
    (36/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.118598844 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094718547 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137193277 seconds)
    (39/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100920469 seconds)
    (40/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121947188 seconds)
    (41/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064372453 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185982857 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.174541543 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.151440129 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.1169908 seconds)
    (46/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.164977261 seconds)
    (47/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.160392723 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117068935 seconds)
    (49/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093886239 seconds)
    (50/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.15051455 seconds)
    (51/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.204137011 seconds)
    (52/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.176096818 seconds)
    (53/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167444789 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.141447787 seconds)
    (55/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117048581 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088595357 seconds)
    (57/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112683907 seconds)
    (58/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171725103 seconds)
    (59/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.19287541 seconds)
    (60/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190509013 seconds)
    (61/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.245403075 seconds)
    (62/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.09298066 seconds)
    (63/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117249866 seconds)
    (64/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.120249765 seconds)
    (65/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.204886691 seconds)
    (66/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11269481 seconds)
    (67/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.158100828 seconds)
    (68/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121519395 seconds)
    (69/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.065724732 seconds)
    (70/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118743108 seconds)
    (71/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067533717 seconds)
    (72/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175109304 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.085450111 seconds)
    (74/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190689184 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090209667 seconds)
    (76/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067583003 seconds)
    (77/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.178070432 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.136370001 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113517537 seconds)
    (80/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18501097 seconds)
    (81/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.142953277 seconds)
    (82/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081999554 seconds)
    (83/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.200019392 seconds)
    (84/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117460592 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087879033 seconds)
    (86/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17751249 seconds)
    (87/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175751522 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092719219 seconds)
    (89/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187774252 seconds)
    (90/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067050565 seconds)
    (91/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.090406516 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111929505 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138814864 seconds)
    (94/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083233273 seconds)
    (95/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17288326 seconds)
    (96/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065506532 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.172096729 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124407055 seconds)
    (99/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.162066981 seconds)
    (100/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119040922 seconds)
    (101/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06576965 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121696047 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119644928 seconds)
    (104/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.119477957 seconds)
    (105/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.185901051 seconds)
    (106/286) benchmarking ("sort", Bool, false)...
    done (took 0.180937821 seconds)
    (107/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093417773 seconds)
    (108/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119671167 seconds)
    (109/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065281452 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140054652 seconds)
    (111/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115660115 seconds)
    (112/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09381978 seconds)
    (113/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.090829853 seconds)
    (114/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11534881 seconds)
    (115/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122601356 seconds)
    (116/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.08951468 seconds)
    (117/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116741486 seconds)
    (118/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100423624 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110495357 seconds)
    (120/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119579781 seconds)
    (121/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095098777 seconds)
    (122/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121450745 seconds)
    (123/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097645886 seconds)
    (124/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.107251401 seconds)
    (125/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.12509765 seconds)
    (126/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099407671 seconds)
    (127/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067251752 seconds)
    (128/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118727556 seconds)
    (129/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094977448 seconds)
    (130/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133409167 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085734223 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117172378 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085736417 seconds)
    (134/286) benchmarking ("sort", Float32, false)...
    done (took 0.174073687 seconds)
    (135/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117877872 seconds)
    (136/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088757492 seconds)
    (137/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16437045 seconds)
    (138/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087436757 seconds)
    (139/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092719981 seconds)
    (140/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06774958 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118096753 seconds)
    (142/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066861393 seconds)
    (143/286) benchmarking ("sort", BigInt, true)...
    done (took 0.215090862 seconds)
    (144/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086998868 seconds)
    (145/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123117605 seconds)
    (146/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119182087 seconds)
    (147/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09390959 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108206867 seconds)
    (149/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.165503749 seconds)
    (150/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121056076 seconds)
    (151/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.179036301 seconds)
    (152/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09237536 seconds)
    (153/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.151104869 seconds)
    (154/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.098829973 seconds)
    (155/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.092217247 seconds)
    (156/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185280199 seconds)
    (157/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067723992 seconds)
    (158/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093908952 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110642741 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.084800539 seconds)
    (161/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.177187691 seconds)
    (162/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.110061219 seconds)
    (163/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065804327 seconds)
    (164/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.140369677 seconds)
    (165/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089990142 seconds)
    (166/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111696083 seconds)
    (167/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158659811 seconds)
    (168/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.114906985 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117153551 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112757289 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.091770374 seconds)
    (172/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.120696117 seconds)
    (173/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092444031 seconds)
    (174/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066638472 seconds)
    (175/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12558203 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096038879 seconds)
    (177/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.116050938 seconds)
    (178/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067442395 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.330899464 seconds)
    (180/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076984828 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084776451 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.211784354 seconds)
    (183/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.091893908 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08506031 seconds)
    (185/286) benchmarking ("sort", Int8, false)...
    done (took 0.188161371 seconds)
    (186/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090801829 seconds)
    (187/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.10909654 seconds)
    (188/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090762764 seconds)
    (189/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067322299 seconds)
    (190/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10919726 seconds)
    (191/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066960522 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066598269 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116147655 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.083917186 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117904569 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093761815 seconds)
    (197/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111585771 seconds)
    (198/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197029116 seconds)
    (199/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085654283 seconds)
    (200/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162490182 seconds)
    (201/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.214402542 seconds)
    (202/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.112055191 seconds)
    (203/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091660943 seconds)
    (204/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086515721 seconds)
    (205/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121391752 seconds)
    (206/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076613114 seconds)
    (207/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065198703 seconds)
    (208/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090839211 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091218035 seconds)
    (210/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.089870193 seconds)
    (211/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089055893 seconds)
    (212/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115620275 seconds)
    (213/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078086612 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108551554 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085683203 seconds)
    (216/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.109486591 seconds)
    (217/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093650258 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10982172 seconds)
    (219/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066359028 seconds)
    (220/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065837428 seconds)
    (221/286) benchmarking ("sort", Float64, false)...
    done (took 0.171698748 seconds)
    (222/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081607457 seconds)
    (223/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119105956 seconds)
    (224/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067337038 seconds)
    (225/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.14003137 seconds)
    (226/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098290221 seconds)
    (227/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117291889 seconds)
    (228/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.138256948 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100060269 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139858927 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134375866 seconds)
    (232/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069490087 seconds)
    (233/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086672039 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165907689 seconds)
    (235/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091603375 seconds)
    (236/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.156010286 seconds)
    (237/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126813819 seconds)
    (238/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066112006 seconds)
    (239/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112619092 seconds)
    (240/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.086345041 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111965822 seconds)
    (242/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134852971 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085567485 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109051395 seconds)
    (245/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067258332 seconds)
    (246/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066029673 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116594463 seconds)
    (248/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085040525 seconds)
    (249/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091705456 seconds)
    (250/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067041343 seconds)
    (251/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068118638 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120107914 seconds)
    (253/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066438493 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091321806 seconds)
    (255/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087562057 seconds)
    (256/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117508986 seconds)
    (257/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077777293 seconds)
    (258/286) benchmarking ("sort", Float32, true)...
    done (took 0.22131184 seconds)
    (259/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.075548007 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092917914 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093007763 seconds)
    (262/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.09074052 seconds)
    (263/286) benchmarking ("sort", Int8, true)...
    done (took 0.211598014 seconds)
    (264/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087976236 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109184607 seconds)
    (266/286) benchmarking ("sort", Float64, true)...
    done (took 0.222662119 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085503386 seconds)
    (268/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110390352 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094783596 seconds)
    (270/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10237322 seconds)
    (271/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077228258 seconds)
    (272/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.08427505 seconds)
    (273/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.101719304 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085381027 seconds)
    (275/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109946091 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091553407 seconds)
    (277/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128588075 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122833186 seconds)
    (279/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078146028 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.084967413 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116874367 seconds)
    (282/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134745655 seconds)
    (283/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068026482 seconds)
    (284/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111856015 seconds)
    (285/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.07747154 seconds)
    (286/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093089879 seconds)
  done (took 36.002626107 seconds)
done (took 36.953714265 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102704132 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147948093 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094613647 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135864104 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123009188 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090339939 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119479783 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.095384377 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124424424 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125191789 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097460974 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093557724 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09804666 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121484842 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095840856 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139801538 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12417147 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092789467 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119588187 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084362668 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119438997 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085406871 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113779008 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069155434 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122588921 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093381492 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118930424 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118496055 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086737169 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109853399 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090344722 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11751341 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087471883 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124587687 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092401273 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118904042 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096431548 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121697722 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.086634138 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112716525 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117158294 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087301467 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116286657 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094895318 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116088883 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093457885 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119641996 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098093944 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140246915 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114710537 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094972956 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12079173 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095187818 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119361893 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089147486 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121279764 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090794641 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139929855 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118740881 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09196393 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118517994 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094473738 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116801851 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094071563 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119867771 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120305682 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09883623 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115424024 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097515691 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116805719 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085763335 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119989494 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089784613 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112095785 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09563339 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123127625 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084961253 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117820831 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092259677 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117237621 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109978611 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090891975 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112786581 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094081886 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112003986 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070323351 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089912221 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117325566 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.084113491 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120927933 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115847331 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093705766 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112364706 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098503205 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110718322 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091168905 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110621575 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.085999852 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113679027 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089988698 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110417848 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087776471 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120622493 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087633885 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117531376 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097240928 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112045333 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115464551 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086422456 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109010519 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100835028 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121763092 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085582171 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116945616 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08501862 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118930032 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085140212 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111990292 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085753844 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111511248 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091950361 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11149759 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088824529 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.11855419 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12421037 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08840249 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113530934 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089758422 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110379603 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093997907 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110494975 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087892497 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112209213 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078373594 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113097135 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08852111 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117162982 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089561043 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119745925 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087831757 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120882218 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090748686 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118120676 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091332582 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110866683 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074136364 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116341216 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089074746 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112722208 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086455568 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112899164 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086841469 seconds)
done (took 16.97085186 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090412093 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184503829 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150693754 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141621409 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105758895 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112390411 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120301936 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117304739 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11412065 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142212057 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110109404 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132993432 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147506049 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086385008 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112211223 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091594718 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114150318 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100817814 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146493907 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132683984 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162657753 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08579376 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146784355 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135758164 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11991517 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106170418 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112961307 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090384875 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11523384 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111669399 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133703569 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089241171 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112799384 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133622937 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103790848 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120530707 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087053391 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120016253 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086474639 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111958864 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140933323 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106546613 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117375203 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116419485 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090611106 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113866509 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08873019 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121200169 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098067534 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117155716 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124531673 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154774392 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091386635 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122092579 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085657299 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123437355 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12005963 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090259233 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112005063 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089921944 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111145908 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091741104 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129016377 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14281983 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09016838 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12444786 seconds)
  done (took 8.654233883 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109257651 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139248192 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103750973 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131476769 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110984983 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087940144 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112526303 seconds)
  done (took 1.808648477 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093517136 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133719213 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11102974 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136769928 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131923365 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108924012 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124595733 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087538584 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132598187 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.087255555 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135251611 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151836273 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089027084 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120956371 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136778059 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089289953 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137224491 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088377052 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117413661 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109997564 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117108796 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135212929 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090671546 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113538908 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102001491 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114718782 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161683831 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092916944 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115414153 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091509976 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112940728 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165601061 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102017946 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125921875 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086773737 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129322741 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128385893 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086372773 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129389749 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09285473 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128657293 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08838427 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116578786 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085543139 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.136372113 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122580203 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090058693 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114219473 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092407558 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133683753 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088428065 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127529416 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088767134 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11881536 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088470055 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121060943 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121947169 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090371584 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132477389 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090694044 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131392791 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1043121 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129390649 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130421661 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090489585 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127620108 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101683679 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117872985 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089982834 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119465652 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129143579 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087315894 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114741219 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099579608 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116018364 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.1114171 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137262633 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089019617 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126424841 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113991349 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090037598 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11348799 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111279914 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120744189 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08821702 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119201702 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090101885 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113106708 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086584909 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118049396 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086668429 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115641565 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090281801 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116251866 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115903781 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106513893 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115421004 seconds)
  done (took 11.877013247 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093817084 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114274819 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091721366 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114535799 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090773615 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114586608 seconds)
  done (took 1.643775603 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118885669 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119649417 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103085781 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121120451 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155823176 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102306891 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130190757 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123008824 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.105976567 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126790086 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127880269 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104264466 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136040353 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120557014 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102107457 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121591832 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10259054 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125255387 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127067935 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096343217 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136500256 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120884719 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096341844 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131637902 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11567491 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096935624 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125110022 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101443726 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128637762 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122934472 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095882443 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118218898 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095315431 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123385055 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129889416 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095090798 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12147957 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118161632 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101490453 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117802195 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103009293 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122654094 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126532983 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093572989 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123074269 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120226093 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094655718 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125602193 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103017716 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119412 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118695661 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095261973 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118045944 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093106655 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122161614 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122433709 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094368447 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130416074 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094289154 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121976022 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117539071 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092787013 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124593294 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116615383 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105357981 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120627369 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095435018 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122186551 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121339779 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094994948 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120236761 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092454887 seconds)
  done (took 9.255731685 seconds)
done (took 34.247784937 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.700493285 seconds)
  done (took 1.720439085 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.840030089 seconds)
  done (took 1.86406063 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.744927309 seconds)
  done (took 18.799566912 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.515745255 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.59198495 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.0010905 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179430371 seconds)
  done (took 3.313302534 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.972632243 seconds)
  done (took 2.018698298 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.29011215 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232336468 seconds)
  done (took 1.55104576 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.797706112 seconds)
  done (took 1.838392683 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.377153771 seconds)
  done (took 2.40774818 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333457654 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183453628 seconds)
  done (took 1.556364268 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551329578 seconds)
  done (took 1.588543648 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.010130053 seconds)
  done (took 8.050754372 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272143113 seconds)
  done (took 1.322429021 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.30546814 seconds)
  done (took 1.34657618 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.609596049 seconds)
  done (took 4.651902922 seconds)
done (took 53.060680274 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104088749 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.1274771 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101816386 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124492296 seconds)
  done (took 1.492902559 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105811017 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121026068 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100708748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121354578 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125068164 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096090885 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124214186 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100521802 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121311878 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095883455 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122223711 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118704094 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09972862 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123806615 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092030294 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124128154 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.096981725 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121887523 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124179075 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095535535 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118856341 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097372164 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124926989 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092564655 seconds)
  done (took 3.71063453 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103083657 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11827652 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096169522 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118017755 seconds)
  done (took 1.486436194 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103536017 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142389332 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138079369 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099650571 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143653217 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134621269 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092408375 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116458968 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093427993 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125772484 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089872319 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150462321 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137050624 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098576733 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127838305 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087290488 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117406805 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136485278 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099200762 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127051629 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09211235 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12636612 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089315458 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139397986 seconds)
  done (took 3.853355533 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173413529 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127670598 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137793106 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095132804 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160501401 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140477571 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088589883 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141463574 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086248386 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131706277 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116742467 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133290518 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129244007 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087097554 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114834748 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086207355 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129811064 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12852193 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090208457 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127320053 seconds)
  done (took 3.479317456 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102970066 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117197988 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088335012 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115936462 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098960408 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121447207 seconds)
  done (took 1.696994905 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097017351 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113932858 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090368045 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114494996 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094345014 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114262784 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088656686 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115088801 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089222049 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116145434 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089663505 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113092208 seconds)
  done (took 2.289056779 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.502101016 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118850064 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118070457 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089380089 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120821023 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089335686 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128718144 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092382499 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140297348 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087101794 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116529301 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089456001 seconds)
  done (took 2.744212462 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238466526 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12611788 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286155366 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369205151 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157691168 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176702324 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284046252 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164088659 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22456633 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166840227 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229426793 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198583792 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152928565 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189201567 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139176866 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14374697 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204322859 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245760191 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152703315 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206747723 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228257765 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168132362 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180387008 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151004555 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138653297 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170727326 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120126606 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105103996 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233143743 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174613404 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215557301 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162283227 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146188983 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209080725 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251057572 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221161028 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283052097 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137888809 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148340648 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170210186 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26422956 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13966019 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229756595 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15433455 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105322101 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217624883 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16760643 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175353449 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151648193 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138029919 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194147267 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239789765 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191825924 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137935 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326423683 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151798864 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.17526917 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19356669 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251407437 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198629356 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212834037 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094958016 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214364178 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193843869 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184363576 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173581853 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.20618213 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145996739 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199091334 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187571175 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164885486 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221239215 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184186501 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142020122 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167472782 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171618117 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199509533 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226728168 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211799314 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.093509894 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166871774 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148890387 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132993558 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193601874 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097160195 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242114385 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143954984 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16126951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213673186 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159663173 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161126623 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228352325 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201188704 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148104473 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083318741 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153678302 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155821699 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218430364 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112119379 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15766953 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161490288 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129785391 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183154467 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125303866 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182566303 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.11835785 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173582997 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180326509 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128486287 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160460277 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151939551 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124427473 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203117922 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196490207 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141729585 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132950881 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208290715 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176576174 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150768891 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176679542 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231296388 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115832606 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148641064 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229386968 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243000925 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112102763 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226184681 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156127612 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106319753 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132594567 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180142845 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154559757 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160231285 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135008849 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181850568 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236773854 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097813052 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138474232 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190868829 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133475523 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132337099 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163214531 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146859854 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137428022 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.123377943 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152547155 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210560511 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178524496 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154081074 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165181668 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151579302 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254317435 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140839924 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122650466 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148560173 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12072167 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192957191 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223672604 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103415568 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232803807 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172187571 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202390706 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198550392 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107904308 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176532139 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130987005 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091130133 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223341623 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168722536 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161291311 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19496079 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226470438 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180827563 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208312956 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171755806 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174333214 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164358101 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156732303 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110248108 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160133748 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198476908 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095927587 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143839422 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133003075 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146374172 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114453067 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133798122 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222695892 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170054066 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189835576 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162246453 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149900701 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180503026 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128812136 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173989321 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17702021 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148662513 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225566816 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195178458 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185021063 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144382324 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22631741 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094543134 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123810861 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114078294 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198276093 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106690341 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136296248 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163240787 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180497531 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179094659 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203685835 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209965266 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199980701 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190755003 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093613216 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168619014 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184006923 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201838176 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166718257 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141084761 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149954743 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179084529 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157932802 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258070756 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167976618 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175975073 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235977662 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149670636 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105182537 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152120919 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217706669 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151599341 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176308906 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119022745 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141811524 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162328877 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134091634 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160025116 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181570449 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161203016 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217673551 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149898917 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184851023 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127562004 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162798416 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160555693 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164945347 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081729352 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173767824 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232101749 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14832756 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168711484 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187636009 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131698677 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310982476 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247397426 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195686893 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137190769 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155004769 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161242616 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163517344 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170452012 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179306516 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158943038 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188406435 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158033765 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136793945 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13951054 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120048273 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150314301 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131988443 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147757705 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176119584 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140278099 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184685022 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163703186 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159483152 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172094116 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150226982 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144638631 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149808875 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214017476 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183225767 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237194193 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151885086 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178735213 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233789814 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098102328 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132153983 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131542526 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177536696 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108851804 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222124917 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188415615 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232448428 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185320949 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192671163 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140526653 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119760501 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155290279 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173987892 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20892196 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154127282 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159616502 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22933937 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119083574 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132587714 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177899068 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31852339 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120240855 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226373052 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079837309 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281704579 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12938448 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104481131 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164281616 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235415286 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136670142 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190640538 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17424534 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170686232 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165472158 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15083324 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191360376 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244566124 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200995081 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178123448 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133600493 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156345369 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175208024 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220584059 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156573781 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112390597 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234065026 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195798121 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19569283 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142717464 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168593686 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167473414 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157583396 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216846116 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106759837 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235629623 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134153693 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193489885 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153870626 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144457253 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175403877 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217444274 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115112208 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216250715 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183407324 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134874016 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10565667 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196121872 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182377461 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15857684 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099343123 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208547222 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098118749 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220566705 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230282273 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135789706 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155395062 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148088081 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133880038 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15426334 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157433652 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113094944 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16743883 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203280175 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135945061 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190009792 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231233521 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168516973 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174335134 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144869158 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692538364 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132093003 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192842556 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160660621 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234600578 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149838648 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173196604 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158017804 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168536695 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193560503 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160344143 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230089651 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219191979 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178603173 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102920938 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185587853 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16357551 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.114884132 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151304562 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167876013 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15997668 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153738755 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.20522474 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173024087 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105352637 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14035901 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197531635 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160755224 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210484155 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180542275 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109843342 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201645627 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18909514 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132769189 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179783887 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239302389 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112471115 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151912581 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134663151 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156561508 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26250754 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096073238 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234779885 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184032853 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158938455 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169168261 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147566024 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222311828 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158501852 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185894615 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148797043 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16023751 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157041879 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137207511 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102583607 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156345655 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169554788 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150094843 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159538952 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166464133 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196513186 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094396492 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145357553 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313526544 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194998686 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243486169 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107879856 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136463525 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162675647 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152578682 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176957807 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178900371 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137056004 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135512481 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108029349 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15903566 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112399509 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156778688 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195634275 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193899544 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208621805 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136132267 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276950184 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11157765 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156470788 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11671299 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104560096 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15101014 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146539772 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160121898 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192412091 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267450332 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149268654 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133898119 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148747659 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098374633 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136101375 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166032638 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165117195 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178445784 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146168276 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08032139 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157533482 seconds)
  done (took 83.318683678 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166780783 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134257344 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148459559 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204031797 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178472951 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268348373 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212232045 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255283093 seconds)
  done (took 2.712223199 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095997168 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148277727 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157526888 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133229674 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092472224 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119279102 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347671481 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132531012 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118584151 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121429214 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17499766 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094161351 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.55647027 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090388382 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118234826 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109211787 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092205344 seconds)
  done (took 3.841612511 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.47781881 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.739421705 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.516768416 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097373145 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.200688732 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112763577 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.844525329 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.200776285 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116955054 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.494590817 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.77404862 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161985034 seconds)
  done (took 18.886811614 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117512101 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137127242 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122715169 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152778522 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140709506 seconds)
  done (took 1.820073108 seconds)
done (took 132.36717059 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.107256186 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401908877 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070775087 seconds)
  done (took 1.657421257 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110560286 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136822603 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10895301 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136597347 seconds)
  done (took 1.650961261 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100857462 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126414111 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108031215 seconds)
  done (took 1.487021648 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323114642 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189265869 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.170143805 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.110224071 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129314443 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103965183 seconds)
  done (took 1.498646889 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100735341 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127622601 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097943817 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12967515 seconds)
  done (took 1.609253947 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097878702 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070369635 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101027036 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074234383 seconds)
  done (took 1.49466751 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117917085 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132186887 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10354983 seconds)
  done (took 1.509282118 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.134263301 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139601599 seconds)
  done (took 1.431461246 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109274933 seconds)
  done (took 1.261884799 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.121455381 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170208205 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189848128 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165772041 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.235281884 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165034381 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.1422307 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113553158 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132122675 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145126093 seconds)
  done (took 2.737492948 seconds)
done (took 18.273293647 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107049837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.511298013 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411987371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116728794 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723627452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379201875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037693448 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146510815 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165351569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093467044 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139064641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672456297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.065812431 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.473297896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.022145206 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377384742 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676173903 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122482487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121861861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093755358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021813543 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091656554 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121925035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092348378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704224847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424268279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095976411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376525581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092253035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126583675 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.380978063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123000496 seconds)
  done (took 17.255663077 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099253025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173374896 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096620074 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139304002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123299989 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093837958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124596472 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093317688 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179292075 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122515381 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109521846 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121896708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125818062 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095901552 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141571468 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091815715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125646457 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091488488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1221335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120814203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112183227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120394658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094317617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121059431 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092622137 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136332414 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093094119 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121550109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120271241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098237284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126846714 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093881965 seconds)
  done (took 4.880023179 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144559231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182437836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12848149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12578925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167783175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124395225 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198000965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117038254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182310916 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123879128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138798398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092731722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157335979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093000955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143465292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12026486 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096769042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121792246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091884122 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12400301 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138741868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093183278 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121719953 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093410773 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12376837 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106430082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124339198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119870948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093359091 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125900958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098929047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124007714 seconds)
  done (took 5.204525568 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100990441 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125643822 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107975169 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138189367 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093835317 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126357077 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096315764 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125710208 seconds)
  done (took 2.077784232 seconds)
done (took 30.567865251 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114645594 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126121906 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106443963 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134512835 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10139909 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132575829 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090278673 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134492822 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132573367 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102447152 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136517305 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091641652 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122232307 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091516239 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135912078 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097284123 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132532833 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100857295 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134197661 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131507784 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095076765 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133295844 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103425969 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133424612 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104734381 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133931635 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137279817 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100934172 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12268342 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094419823 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125373155 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103497211 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124321783 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104247791 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127725341 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095675559 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124931475 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093473466 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133874128 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131876741 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099874073 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132262773 seconds)
  done (took 6.059257354 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.110101565 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138429927 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10468052 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079822811 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117674148 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080443273 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137692872 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078979035 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109346959 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107530628 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073643976 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106945131 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077879159 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100617031 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077935002 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074693784 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108645139 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075774273 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075642499 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105171045 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080318619 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07177471 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108547615 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079043066 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073527867 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110442656 seconds)
  done (took 3.632726679 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102683231 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13455287 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11305242 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183822521 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160770937 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099798373 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133602001 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138415897 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108612444 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118883252 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096171281 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14906195 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110476562 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128870416 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09119252 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137365511 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134247309 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094013918 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127973437 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112253838 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137986296 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101229459 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143179888 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.1317527 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092791745 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122137148 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096041505 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135147698 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096704808 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13136535 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095298993 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124957826 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122342029 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105569469 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125587605 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094541358 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142177537 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101448413 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132206558 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092518712 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126259812 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121426434 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113759007 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169067554 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090617958 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130004375 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098706487 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133248682 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120710085 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110851507 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130914149 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091373425 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126396615 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090522651 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121423235 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10600731 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124314023 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092909169 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132116252 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123910843 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105169896 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125025893 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107859092 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121937662 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098954016 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121616774 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092095023 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121039889 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142592016 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094187652 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162891919 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092962856 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12391756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100478792 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130537299 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127483813 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093708465 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137457614 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101814017 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125383659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101772802 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126275333 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094364469 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142061119 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094071919 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123667927 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120549838 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099885066 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123625667 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093153178 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145104844 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091448223 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125097783 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.137504377 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093198679 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122061099 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101263168 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126380861 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09207978 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135115617 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097189228 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122947955 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130824034 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093861311 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123934957 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104260017 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126218399 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091348361 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127133894 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.097817416 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12321253 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092840534 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125776431 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093336862 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132615531 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127255036 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097563749 seconds)
  done (took 14.859112103 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233117116 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214502676 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.233436962 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260969646 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135811188 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113476628 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210538698 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155519273 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12316041 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159544959 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173689614 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180727081 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168569343 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.184232765 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169985761 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093395327 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142778465 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.131918101 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245349428 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258210357 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144019338 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099718333 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161441495 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158478572 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137254268 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101135756 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140938692 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135719377 seconds)
  done (took 5.855946314 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112779831 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155023569 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096592868 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144780704 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14883208 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092507724 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128716532 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093772132 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135660794 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134840712 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091875135 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130062596 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098592004 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133172933 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121403361 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103025332 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131738344 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094535973 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126696211 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096720121 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130563927 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100691749 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127086287 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.09141046 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132606127 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121290569 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08664643 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142606586 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092080304 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146367008 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121047008 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099320212 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133163315 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093657696 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123334401 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094730622 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125332457 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095140604 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125121667 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091299151 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123462498 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077711834 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122250281 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105993897 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130365846 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079157375 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12992423 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12641718 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095661047 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118958062 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.0969371 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124855661 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096641041 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130276346 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098245334 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123775798 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096721556 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115893177 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099848153 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124668867 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08619222 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119755201 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100221646 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117869372 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101698024 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128368186 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0922831 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12561408 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097461127 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129880346 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095253222 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126922004 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090572772 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127377677 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095008257 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12858017 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095515463 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123221756 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092275795 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123990269 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074734713 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124352327 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073635829 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126909968 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091170881 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122772679 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09532342 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129659802 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138077747 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095589636 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131488508 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094516707 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123232582 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096030452 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113508157 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096155222 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1392125 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14049528 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093910783 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121102274 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106860288 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125763257 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092834972 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105634471 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10111411 seconds)
  done (took 13.004191761 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130823539 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153836414 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093764991 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143297196 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15527252 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156553597 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101477185 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130411496 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096379225 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142761392 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093896372 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133148752 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097692268 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13777031 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157221631 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103519504 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125525115 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107746492 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132125995 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169340473 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11197221 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143134034 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107481763 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124945723 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098489194 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141569901 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160447908 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106857467 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137801502 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141406416 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108734655 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160323058 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111270094 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129623682 seconds)
  done (took 5.547559529 seconds)
done (took 50.119882264 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.273114938 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.524250672 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.267028396 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.289607391 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.272323163 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.293736095 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.27593444 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.26464655 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.416486102 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.26572633 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.50154656 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.000563976 seconds)
done (took 59.833853452 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.282385192 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.402616236 seconds)
    (2/2) benchmarking "String"...
    done (took 1.619617061 seconds)
  done (took 4.210291989 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.066316811 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.243084807 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.529597006 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.262167417 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.266804124 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.555069172 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.071535656 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.637868609 seconds)
  done (took 28.752567322 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.276008361 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.351002977 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.293223111 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.271278985 seconds)
  done (took 6.380059522 seconds)
done (took 49.885178565 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.255740962 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.299332311 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.278368794 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.243014057 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.383781018 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.29663583 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.552174605 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.267800956 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.301389405 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.248814661 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.298381513 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.262924556 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.268670205 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.595639536 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.275318781 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.262080967 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.307209375 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.783674729 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.696517004 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.263996304 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.267736156 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.291666018 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.268877289 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.268688392 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.309882861 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.267574166 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.264931466 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.277996105 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.965139353 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.267435121 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.291147132 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.728640994 seconds)
  done (took 192.798453752 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.265672416 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.445826095 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.527281098 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.331646571 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.969772632 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.461643163 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.398027149 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.048146498 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.284946237 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.294558156 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.430411558 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.265609565 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.491972751 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.242457439 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.300048928 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.274408336 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.53342609 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.518245154 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.322913662 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.437180927 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.280471026 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.334632755 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.264658545 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.412541936 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.312338769 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.363580028 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.292133103 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.297087426 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.457470247 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.478885833 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.296539035 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.310155741 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.918289736 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.130673168 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.276294088 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.267145724 seconds)
  done (took 152.729234703 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.336026488 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.269995041 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.270850681 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.269775246 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.304238814 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.266771349 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.88063938 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.881644116 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.773835937 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.819034389 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.735992238 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.269654459 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.605622845 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.271528504 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368024902 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.282523579 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.26854688 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.281998927 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.312873687 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.268391189 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.269379832 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.881344231 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.281204307 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.393599173 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.450912335 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.286605983 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305978112 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.662883305 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.26845372 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305747172 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.606892259 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.322237484 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.268863885 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.6834365 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.564328917 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384891288 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.268514618 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30437463 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.266006985 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.270335637 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.55759471 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.269875767 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.271215492 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.272821276 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.276909802 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.973252087 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.272758041 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.882988298 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.273495578 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.24076895 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.269493077 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.272674001 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.543210082 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.957896449 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.291136092 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.272953912 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.273514327 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.271776048 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.273946955 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.309336885 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.548544287 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.367152982 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.291097387 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.277471663 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307149203 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.271237239 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.390095793 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.270262351 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.477911903 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.330197943 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.376736012 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.883146525 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.275098231 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.372892511 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393310742 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.270709479 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.274494166 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.27585043 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.273891761 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.387953922 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.272146777 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.718424499 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.452796727 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.290648757 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.748873582 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.374658743 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271061852 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.714298886 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.276370779 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.274836805 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.055864726 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370710331 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.274255755 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.275072249 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.276559812 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.274896612 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.721567695 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883666273 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.564129439 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.276378042 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.575457421 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.275099894 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.742010076 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.857909725 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.002631044 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.276412737 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.391261426 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.454342046 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.293929216 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.273486058 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.751885889 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.276581126 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.33408228 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.276878476 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.675869195 seconds)
  done (took 374.813967105 seconds)
done (took 722.869193281 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.945782436 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.937128638 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.058299349 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.930651906 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.893649679 seconds)
  done (took 10.95969153 seconds)
done (took 12.161679967 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.481302671 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.480761323 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339688965 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.482683437 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.30280498 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.502339772 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.459594352 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.293660071 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.389355761 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.363382527 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387243271 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.333768418 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306872258 seconds)
  done (took 19.319088094 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.648163283 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.606497944 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338148982 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.619543867 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.315746532 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.610871637 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.482423724 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.502774941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.511210089 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.3076101 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.292952478 seconds)
  done (took 17.433476249 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.618267453 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.629542886 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341489858 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.626093016 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317356802 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.614320251 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.484849793 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.505167831 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.497386619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.308646726 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291664445 seconds)
  done (took 17.432557295 seconds)
done (took 55.388195706 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.287404566 seconds)
  done (took 2.486050567 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.323396443 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.487373738 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.306293232 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.287168941 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.289534267 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.288255849 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.290309031 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.288464626 seconds)
  done (took 11.759694846 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.282855094 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.285998186 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.28887625 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.282298084 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.287351792 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.285879169 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.2855775 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.287354454 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.288244911 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.284621064 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.284618478 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.285788156 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.285758935 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.288326554 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.28538478 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.286493157 seconds)
  done (took 21.77491757 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.285896089 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.283150399 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.285712599 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.286339918 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.284689206 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.286098086 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.286083465 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.285710831 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.284946595 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.283926441 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.286584007 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.286792923 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.286007221 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.284309016 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.285300721 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.288038533 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.285150326 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.286541543 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.28886 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.288304639 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.287441752 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.287848695 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.288378702 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.285584552 seconds)
  done (took 32.06917959 seconds)
done (took 69.293560916 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.548908574 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.079361358 seconds)
  done (took 9.829574236 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.288857797 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.287546379 seconds)
  done (took 3.781820985 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.290148142 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.289191637 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.288387321 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.290602398 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.288294828 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.290230418 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.28930187 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.288090255 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.288657766 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.289268704 seconds)
  done (took 14.093053015 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.289487524 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.292041515 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.287987863 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.288214451 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.291397291 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.290227974 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.290718727 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.291389682 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.287468217 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.287290364 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.293824178 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.288977838 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.289798519 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.288937698 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.290508306 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.288420438 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.289229512 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.288881532 seconds)
  done (took 24.416281691 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.292314901 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.291071828 seconds)
  done (took 3.786277059 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.287677501 seconds)
    (2/7) benchmarking "second"...
    done (took 1.287595614 seconds)
    (3/7) benchmarking "month"...
    done (took 1.288229821 seconds)
    (4/7) benchmarking "year"...
    done (took 1.289677426 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.288493019 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.289976482 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.289734341 seconds)
  done (took 10.22508796 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.294205502 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.466774452 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.547919586 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.900555771 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.292297445 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.296280383 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.168325546 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.297224979 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.299461074 seconds)
  done (took 14.766142018 seconds)
done (took 82.106333718 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.332752862 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.301228692 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.528902286 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.294947235 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.317313644 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.628816966 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.302290806 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.415916824 seconds)
done (took 38.333266863 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.290739315 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.264852311 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.125506727 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.270445868 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.375034688 seconds)
  done (took 19.24085342 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.376626408 seconds)
    (2/2) benchmarking "read"...
    done (took 1.625939828 seconds)
  done (took 5.208728268 seconds)
done (took 31.949344496 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293679313 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.295597445 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.294046125 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.290921575 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.295625266 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.291695165 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.291732603 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.293302614 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.293912157 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.291829313 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.292564979 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.295027794 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295152588 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291069695 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291766532 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294151768 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.29065469 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.290751937 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294159325 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291653329 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293502131 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.290422587 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.29273795 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.294430785 seconds)
  done (took 32.235717011 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.295579919 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.292323873 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.295070105 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.293273229 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.292535874 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.294772631 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.297267544 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.292376081 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.29552082 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.2930794 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292406647 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.290604776 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.293283187 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.290276052 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294480678 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.292154827 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.294579751 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292910898 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295304537 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.292462009 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.294116599 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292880534 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.292804043 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29454697 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.293266073 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2939577 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.294469266 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.29281307 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29620907 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.293697991 seconds)
  done (took 40.016504784 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.30121092 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.305323156 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.298213464 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.295993713 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.294504563 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.296392122 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.297286013 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.29588861 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.296513067 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.295266686 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.298321879 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.297866667 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.296669416 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.298100908 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.296848647 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.297380261 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.296568554 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.29785208 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.296842902 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.297563808 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.297094521 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.295593736 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.298668382 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.298016447 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.297010464 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.296960861 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.29705974 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.297369574 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.297119607 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.297045287 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.297307222 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.295526013 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.296101953 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.298190702 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.298490412 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.29850757 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.303164805 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.308762081 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.29673879 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.298995301 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.298724725 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.298275012 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.298320972 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.299828039 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.297572327 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.296907259 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.299333144 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.297023532 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.297838855 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.296393951 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.300221661 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.300128596 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.300464277 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.29900575 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.300446612 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.299799821 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.297720857 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.299656371 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.297223711 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.299255127 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.300136713 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.299501901 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.299246374 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.300030005 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.299885457 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.300500184 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.299166724 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.299424036 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.299995908 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.298978859 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.300113365 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.300771009 seconds)
  done (took 94.696283278 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.300261808 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29645211 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29913853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.296625415 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294963559 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.300819649 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.297446252 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298683519 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29565192 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.299907117 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301648715 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298403251 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298698343 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300258492 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303359524 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296979106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2999767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301295067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.30217837 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301070212 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301262303 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.298746291 seconds)
  done (took 29.797761276 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302232866 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.30269416 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.300037552 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.299826835 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.298591845 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.300894856 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.301744541 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.302019758 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301531909 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298863763 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297237457 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301043997 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.301503899 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302092615 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302074634 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303033366 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302351523 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.302085739 seconds)
  done (took 24.63288676 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.300897233 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.298628011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.301638171 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.299745342 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.299715174 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.301936178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299694398 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.302253194 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.302882861 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.299400456 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.303445299 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301895417 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.302880669 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301829256 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302316203 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.300698375 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.302692507 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299722645 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304257697 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299382248 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.299819488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301571296 seconds)
  done (took 29.840547502 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305710152 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302635414 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.30052251 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.303316475 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.302773179 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.302838387 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.304968789 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.30207239 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.304814883 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.304856387 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303091662 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.305112875 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.307596336 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305941927 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.304319402 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302555039 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304184795 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301557307 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303054642 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.302233711 seconds)
  done (took 27.289909673 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307386044 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307804106 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.307730445 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306467468 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304354239 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.308692568 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304890721 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.306965149 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306386077 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306038648 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.306967894 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.30604399 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308603531 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305843906 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306879182 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306679087 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308360059 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307757153 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304397769 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305718819 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306400538 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305907178 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307874551 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.308137297 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305990635 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307598155 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306969997 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308276407 seconds)
  done (took 37.807481921 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311034081 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.306898304 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.304205436 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.3063407 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.307781119 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.305261206 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.304288106 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.302761791 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306753284 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303053378 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.306020691 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.307802665 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.30663442 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.306641542 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.307177524 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.307031264 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307580793 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.304419593 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304137458 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3048445 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.305601378 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306223696 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.307415139 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.304617753 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304703789 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.306300125 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304495212 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.306343846 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30794671 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303690775 seconds)
  done (took 40.396681357 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.330361318 seconds)
    (2/2) benchmarking "in"...
    done (took 1.329115786 seconds)
  done (took 3.879122317 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.30806952 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311114281 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.309944696 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.307508123 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.308312154 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.308913982 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.311958317 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307922385 seconds)
  done (took 11.694214735 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.31075053 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.309549888 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.309072206 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.312479382 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.312198865 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.30852692 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.315664176 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.334271945 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.309419526 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.313237573 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.317071626 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.317863694 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.311082201 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.307915115 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.306247861 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.312470945 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.30983918 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.312166982 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.309154534 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.310057884 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.312888425 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.311571669 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312299098 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.306351882 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.31168669 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.323256385 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.335967941 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.310583528 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310473816 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.313030365 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.31227402 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.311099702 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.313217778 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.311531815 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.310911697 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.312106919 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.317846086 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330848905 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.318115519 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.333306189 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.318980343 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.311265778 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.311666392 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.314599478 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311679931 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.3120025 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.31159043 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.309838397 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.312113136 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.318189604 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.321317842 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.310508069 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.311850957 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315053338 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.311413839 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318521935 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.334937559 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.31590821 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.322077808 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.324719708 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.344175898 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.338061498 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.315327063 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.314653695 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.322593041 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.338907857 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.318798337 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.332020741 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.311325552 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.314996474 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.320017527 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345497646 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.339658247 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.314512607 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.315399043 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.314746464 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.315789 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.312532386 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.320253431 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.339496441 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.314743568 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.317095156 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.324145322 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.338114201 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.3164695 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.317887834 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.314878354 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.317539627 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.315520334 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324555662 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.338059431 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.314343573 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.312553017 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.311885423 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.317997977 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.317207265 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.30991035 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.312743223 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.313696671 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.314895967 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316830741 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.320499498 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.325906803 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.320050636 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.317387303 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.32104693 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.338422855 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.314439823 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.323279231 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.316563463 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.317362711 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.318154459 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.322754659 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.31515405 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.319014233 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.325540177 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.318187257 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.317631094 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.317016864 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.317155543 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.325776174 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.341506401 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.318300088 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.318219852 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.317861814 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.333207164 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.318603614 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.318985549 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.31522743 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.315659752 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.314587752 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.316958287 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.317415201 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.314592868 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.319640211 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.318370065 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.315346349 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.318806277 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.31906513 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.318093102 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.320668854 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.320382452 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.318222386 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.318465956 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.319400725 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.316787638 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.322821322 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.338637548 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.319981033 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.320121513 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.31450974 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319710018 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.319243521 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.319803889 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.316916645 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.31919901 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.320203661 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.322974705 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.31832747 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.321415024 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.319492551 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.32213245 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324429487 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.323718976 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.323091132 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.318848457 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.318766182 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.319272955 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.319678224 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.318861363 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.321276855 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.319567547 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.323734494 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.330685277 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.320879399 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.322161747 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.322599979 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.321166663 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321956265 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.32205561 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.322976142 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.329658235 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.321694 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.325643847 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.343831047 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.322107639 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.319393415 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.320405676 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.322124917 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.32451012 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.323374815 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.331968595 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330383989 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345525075 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.320389433 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.324046426 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.323371038 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.328137104 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.325121038 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.322969833 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.323365948 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323092764 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.320655407 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.322265252 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.320748295 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.323244283 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.321667117 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.323069223 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.324966051 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.323850467 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.324190891 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.32450279 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323868404 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.320436006 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.323759486 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323327556 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.319754664 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.319953342 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.319837874 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.320915569 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.323885647 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.325289349 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.327329769 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.321228121 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323920744 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32349858 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.324180149 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.323750257 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.323981732 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338732516 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.323050791 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.332638539 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.343970814 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.325412149 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.32668295 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.345252985 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.320270497 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.329857108 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.323642381 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.321417138 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.326188381 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.333245287 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.324112251 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.324245331 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.326403144 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323258176 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.326584431 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.329948774 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.340842421 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.323857377 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.325062175 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.324059965 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.320730258 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.323905385 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.325547706 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.323912716 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323715112 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323738673 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.324164752 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.32187049 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.326598838 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.324178985 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.32478778 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.327968227 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.335061516 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.329081424 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.322323366 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.324617358 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.323032251 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.329917963 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.321563276 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.325128796 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.320367055 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332739782 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.352233914 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327324264 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.34220671 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.329419806 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.3320579 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.345749805 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.327128666 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.323953209 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324773192 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.323529566 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.321311637 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.32215466 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.325195797 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.325017129 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324648817 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.325538653 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.327679592 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.322053752 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.319639355 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.324418492 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.323835341 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.324553008 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.320833105 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.331452145 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.323244948 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322736165 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.320581732 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.320818209 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.32591497 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343263739 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.320486946 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.323447637 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.320570657 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.32015165 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.32011131 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.322812976 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.326745719 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.334736989 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.327678873 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.327564805 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.322918273 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329717608 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.322671528 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.326704247 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.33230741 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.320783319 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.318812909 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.321269797 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.324694901 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326438429 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.344315447 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.322051158 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.326825696 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324876298 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.324045155 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.320952824 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.321305715 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.321975226 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.321473572 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.328067768 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.342992719 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.324283325 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.320097131 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.318096467 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.321984129 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.322822651 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.3225412 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32478181 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.321407121 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.320665874 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.321137222 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.323758505 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.322791187 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.322586335 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.321969789 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.319205187 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.321717448 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.328770971 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.343738454 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327294441 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.319568721 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.326893034 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340957028 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329858226 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.34486388 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.322745174 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.322905541 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.322724902 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.32291361 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.324273436 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.323387171 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.32534597 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.325662739 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.330486275 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.325477555 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.326195519 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.319792461 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.32402745 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.322233124 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.332710759 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.352545566 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.324875329 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.328698424 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.322002026 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.327042378 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.331519847 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.324617406 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.321991945 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.325939241 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.333355202 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.332440091 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.323823538 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.32542787 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.323473872 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.324973843 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.325225434 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.325468125 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.323830295 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.325677559 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.325295126 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.327957745 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326458286 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.325977943 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.324215068 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.324858728 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.326583543 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.333786592 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.343829947 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.322210806 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.326632304 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.327215625 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.325482911 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.325998028 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.328493926 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323536489 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.326037252 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.327883173 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.335194437 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.334537011 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.329750567 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.325865239 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.326384554 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.325326488 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.329389893 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.32473234 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.326979028 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.326677656 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.326841272 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.326702037 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.324585306 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.325346015 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.329001625 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.325456291 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.326885773 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.329347577 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.335938621 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.325359618 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.325058201 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.326909082 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327254316 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.325718607 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.323997747 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.334787186 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348406754 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.341073226 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.33729584 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.332825606 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.327457477 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.329879033 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.334159447 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.327161119 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.328662816 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.328699816 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.325175056 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.327366396 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.328836999 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329561327 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.330763728 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.344099382 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.325248729 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338430347 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.348272792 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.328748867 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.328605207 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.330730949 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.327419358 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.328102664 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.327353771 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.325853907 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333250918 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.350198118 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329855837 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329728511 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.327718725 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.33222695 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.336622227 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331329656 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.326668418 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.326459491 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.332581258 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33132671 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.329112067 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.327928602 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.329373444 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.333336271 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.334699345 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.340240399 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.325811121 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330618614 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.329087716 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.331183265 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334590411 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331712004 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.32912137 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.328971559 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.329468276 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333022627 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.330027905 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.336364708 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.33340655 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.334376131 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.333219784 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.33376833 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.333775493 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.344298512 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.34178435 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.332126926 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.329436734 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.333252348 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.33063175 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.332736755 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.331290272 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.330015372 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.330357064 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.332606901 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.332943359 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.331353912 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.332871836 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.344477009 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.351917359 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.331212482 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.332959989 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.331560332 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.33320681 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.328003048 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.332631794 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.331133968 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.333741084 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.3412517 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.331959632 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336976475 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349939394 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.333461771 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.335603162 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.33431342 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.337485034 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.333901539 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.333138755 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.332943954 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.334766811 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.350302386 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334914162 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.337586833 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.363183901 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.35236731 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.330756016 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.330766969 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330203614 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.333555797 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.331416732 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.332535873 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.333675848 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331269902 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.331925993 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.331496123 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.336034761 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.332168899 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.330870251 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.332269567 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.330869821 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.333531234 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.32833568 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.332263976 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.332196484 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.333573445 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.332225668 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.336036506 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.332249609 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.342705649 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.357281031 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.333761561 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.333141983 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.329661419 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.333818416 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.335042534 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.34254926 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.341874526 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.333335497 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.333712316 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.3334125 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333161748 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.332690181 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.33150968 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.330992459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.333271921 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.330427011 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.344163311 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358201434 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.335810369 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.332131963 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.3344225 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.333374851 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332287688 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.334620091 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.334855918 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.333596981 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.337243543 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.337250001 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.33413143 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.331796137 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.335078578 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.343351659 seconds)
  done (took 791.578897873 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.331863811 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330823928 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332974604 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.332873045 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333792739 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332660487 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330869626 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.331100257 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.330548742 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.332073112 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.332364394 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331131495 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332555466 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334203029 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33470855 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.335051326 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.334936118 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.331608521 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.335427748 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337409662 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.333159249 seconds)
  done (took 29.238345509 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.335504432 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.332409481 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.332432163 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.334926434 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331105136 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.335400703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.333365703 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336195325 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.337181175 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334457236 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.336314407 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33566315 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.333170253 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.333506425 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333008225 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.334322247 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.339474286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.331747025 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.335790657 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.332944327 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333946263 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.335613748 seconds)
  done (took 30.60646641 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.335669846 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.335714361 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.333137797 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.329848741 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.335739574 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.333111777 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.337755476 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.334113782 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.33994172 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.334925079 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.3301361 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.336436693 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.341474028 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.343705984 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.336767805 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.334263195 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.480193969 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.336560307 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.332767963 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.336576787 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.331783498 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.33788058 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.348688648 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.335490758 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.33268005 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.337715295 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.336044137 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.33641761 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.335338231 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.33608599 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.340064463 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.336398911 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.334645529 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.338194083 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.334906247 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.335025939 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.337776262 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.338740359 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.337637311 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.334498803 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.346714206 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.360551546 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.338247155 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.341306111 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.353462573 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.337997095 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.339319597 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.346972727 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.331322261 seconds)
  done (took 66.938500471 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.336109176 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.336479309 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.335072635 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.337533177 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.337273753 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.33733739 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.337593944 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.337377954 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.335019036 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.332946179 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.33703947 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.335261287 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.331515766 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.335751304 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.337251376 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.334597382 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.333669151 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.333613135 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.335115415 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.334248208 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.333032592 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.336085512 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.339260754 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.335411618 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337475182 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.335479148 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.333484422 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.337270238 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.331674598 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.335014517 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.337413897 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337464301 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.338779979 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.334277687 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.335624265 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.338913614 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.339869819 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.337132142 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.340407485 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.338780497 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.339955096 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.338739126 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.338845825 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.340125557 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.337475001 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.337259037 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.335684303 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.334652322 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.336920436 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.338781001 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.337228644 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.334502307 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.337560282 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.336607254 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.34030182 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.339376807 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.335396731 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.336856981 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.340072408 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.337132249 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.337669158 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.342184431 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.338136535 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.339700885 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.339153476 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.340880462 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.340330963 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.339943532 seconds)
  done (took 92.162086535 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340239375 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.339792154 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341013788 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339514797 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.341770487 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.340296581 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.339381503 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.338945604 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.340106327 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.341242989 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.341806424 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.338323863 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.342690485 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.340161582 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.341089647 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.338900439 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.340412518 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338179645 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.339996592 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339807276 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.339073564 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.338982084 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.338165628 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.338429799 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.339177053 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.339635414 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.338763062 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.336874962 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339176076 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.340408518 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.340537001 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.341342116 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.336287294 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.339022977 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.339101564 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.340201314 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.339290848 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339170386 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.339179549 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.33923643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.338283257 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.33988567 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.33946135 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.337716685 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.339281901 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.340844083 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.341196652 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.337832605 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.33891325 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.342396835 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.338321843 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.338977326 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338361843 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.337969855 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.340379812 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.33833763 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340029864 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33941731 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339172021 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.339337848 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33770164 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.341058881 seconds)
  done (took 84.298474974 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339066642 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.337378355 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.335604733 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.337458239 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.339892306 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.33470075 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337311045 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.342301674 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.338025809 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.340104075 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341114938 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33828782 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335286397 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341942156 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.337920257 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336464322 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336179396 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.334147416 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339371476 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.335122518 seconds)
  done (took 28.003990623 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.336721609 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.339151399 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.33500175 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.335780659 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.340729471 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.334282827 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.341565781 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340108108 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335421497 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338338985 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.337136394 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337708282 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33436505 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.337650338 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.340201195 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.336714668 seconds)
  done (took 22.646429545 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.336643651 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.336708579 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.34135515 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.338228253 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.332018743 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.338399695 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.337000919 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.336767054 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.336560936 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.341990119 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.335875065 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.340124964 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.340017207 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.342487874 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.334707303 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.341623384 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.334656983 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.336393507 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.338430414 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.341143254 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.336945661 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.334253062 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.336771323 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.339916819 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.335337431 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.337781427 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.338171883 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.336486435 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.33185787 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.339397104 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.33768539 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.337927033 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.33730266 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.333663582 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.34154301 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.334455342 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.334320448 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.335811069 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.339116406 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.336688492 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.340082265 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.333652792 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.342233626 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.339967304 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.338175094 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.339999591 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.335518489 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.335338245 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.336583001 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.334091408 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.340635866 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.337834253 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.337230431 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.337212338 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.340086605 seconds)
  done (took 74.811072587 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341295406 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.337711743 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.333446281 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.340537012 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.340445493 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.33648283 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.337880884 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.339066269 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333172453 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.339517208 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336793153 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.339925282 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33598419 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337252729 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.338097171 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337917973 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.336560514 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.339175216 seconds)
  done (took 25.326948909 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.338785193 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.336040738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.339456424 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.333538101 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.337482636 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.341625759 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335255071 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.337752585 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336269742 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.337784934 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336608117 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.338021775 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337365922 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.339715775 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.33936417 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340218106 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.338601093 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340177702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.335971656 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.33471055 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.340385332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341398136 seconds)
  done (took 30.683506848 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.33901845 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.334417935 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.339548394 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.354901792 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.357859548 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.362633952 seconds)
  done (took 9.334485504 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347055109 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341884596 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.336673665 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338040401 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338877427 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33859521 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336477567 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336943739 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339975973 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334665405 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338343448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338944942 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340175687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338991227 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340479871 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339981028 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3388879 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339894679 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337799946 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341249532 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339902357 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342153929 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340144741 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338472659 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338495211 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339244932 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339546782 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338061751 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335701182 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340892981 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339844314 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336356889 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342687269 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339168792 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340150804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339728201 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33712982 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340961662 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339090761 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337398351 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.342952783 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341388918 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34010055 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337416477 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343014319 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339913023 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33872985 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339495323 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339250071 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34367609 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34101071 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340034376 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343187988 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342929116 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340621906 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343411803 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34147969 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340438796 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341638055 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339847865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339507311 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343277864 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339762974 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34039292 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343700293 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340389807 seconds)
  done (took 89.704496512 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337915755 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34043869 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338587787 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339622345 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337670228 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337175619 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337907324 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33765554 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339812992 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339989872 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343018885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340213601 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340860472 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341622071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343117463 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339702424 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34066569 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341771316 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339029129 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339079471 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343806499 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338233393 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339454389 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337328517 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340714865 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34526801 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339796134 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341489416 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33902499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340616165 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343726917 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341843456 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340692655 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.338414518 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340189506 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341942288 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344729156 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340729349 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342730442 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346152277 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343108863 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345454863 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342045827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344675651 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341773753 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342586177 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342222359 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340498307 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343196645 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344524231 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342908954 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341358563 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343386637 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340774852 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343052357 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340799454 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342476292 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340477284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340294382 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343483043 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343135756 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341509714 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346352297 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343302669 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341437281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341936591 seconds)
  done (took 89.779645035 seconds)
done (took 1838.610777789 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.414707238 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.445325214 seconds)
  done (took 14.111553227 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.507157154 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.462808369 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.345060575 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.370719302 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.342328491 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.354588397 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.340316996 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.343525005 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.340551832 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.342892845 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.341458746 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.531498979 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.39771746 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.34178443 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.344092594 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.43470762 seconds)
  done (took 43.397051661 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.372027016 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.347004913 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.454218499 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.365527051 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.371298454 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.524417768 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.404925202 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.349123895 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.509522345 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.383178986 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.814834993 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.368731227 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.346132514 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.391121811 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.36621061 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.520717179 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.584790891 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.820989357 seconds)
  done (took 30.553678346 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.762918083 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.373326702 seconds)
  done (took 9.392909153 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.366461758 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.346543676 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.349169473 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.345357149 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.341957512 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.338281738 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.347670093 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.345555196 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.773129946 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.464520778 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.35136839 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.355712644 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.365727434 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.350874293 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.347092135 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.381694621 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.496677114 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.345991585 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.345891761 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.354337415 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.344836745 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.451019147 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.386293658 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.34949466 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.469140494 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.829353614 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.351718861 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.35774445 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.476838844 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.346735403 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.349704497 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.349413672 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.351632185 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.946735931 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.868730782 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.358003625 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.385695664 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.356846885 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.349481571 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.505236748 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.350102419 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.353821118 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.340573758 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.875179296 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.472739034 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.462015789 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.478398439 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.361818255 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.352193396 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.410136316 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.351925963 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.349355969 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.380256372 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.101185954 seconds)
  done (took 111.797639874 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.366034468 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.730398119 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512249211 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.366895165 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.170260566 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.093477269 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.355960062 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.615098949 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.39148406 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.34519038 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.628349683 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.83662834 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.358422301 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.393974538 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.871670521 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.403862302 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.344219426 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.055617462 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.359627081 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.346779304 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828011065 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357041368 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.342518895 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.538562155 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.380115694 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784089503 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.664250161 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.858195034 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.356640804 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.343717481 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801371306 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.362063908 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.356326732 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.347493578 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.60012983 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.686168856 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.675322927 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.362091074 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345281741 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.347358714 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.355632075 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783294466 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683993578 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.358561276 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.361738893 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797737435 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.361614668 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.353340856 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.350316609 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549652665 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.986782851 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.341767665 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.642162556 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.335741861 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.625661467 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.404181558 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386595162 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802006788 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.345928117 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.482177506 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360237721 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.327875291 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.336378336 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330543556 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.327521614 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653535548 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.654923923 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323015778 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.653955416 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.782204064 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334791324 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832731522 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.206676549 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.350254029 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.366791227 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.332686664 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.916946416 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789900492 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.377982801 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.315913201 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.635769801 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.33187286 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.587575505 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.330284416 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.316961445 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822073583 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.32082692 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.357482963 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.318464014 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.327583274 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.071034106 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323590416 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592912098 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.385505727 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319752513 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.320171787 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.361888053 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31836042 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.329897096 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.322997424 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829960846 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.335189004 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.293566814 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337302518 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3174072 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.317806192 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.320545 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.322428426 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545065863 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.7646947 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.339822878 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31906653 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.321278849 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.319913874 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.500744132 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.326949865 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.610684995 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.337310954 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334617988 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.322279942 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.09591592 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.369999221 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331090585 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.324653368 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.218164459 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.52313315 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.338566273 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.336756162 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323837482 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.334857012 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.485302587 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337053869 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.394114255 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.323361385 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00683249 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339785124 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.33696617 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.617869929 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32393414 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.122404903 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.342990645 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323891849 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.601327329 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.584262716 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.483683052 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.325827418 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.3376304 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.987906852 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.351811637 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468744211 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.344159151 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315267732 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52221423 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.514346696 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326195763 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.924605526 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.325031821 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543050462 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.330499617 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.615603605 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.803438459 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.336815743 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.329515439 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.018784912 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015979781 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.097325773 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.328340004 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.592810078 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.274585371 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.804218032 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.323406088 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325726043 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.902332383 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.330186392 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322860618 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.325363594 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.323810103 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.380130447 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498923681 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.535282965 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.331037455 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766209962 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.380603224 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32262591 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.344639162 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.329430829 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.673223034 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.354249958 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.328801694 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.326324576 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.328167567 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.330386017 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790560449 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.276724886 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.329121285 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47923103 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942753324 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.340383529 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.328133667 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.932326361 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.542292473 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.858075233 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.383598727 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.623297696 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.346928028 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.364654019 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.077413438 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.346526385 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.785550528 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.342837625 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.329352187 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.910300977 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.345046644 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.445427746 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.326555581 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.328240433 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.847766535 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.345764368 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.333602928 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.527603712 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.346484166 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601450376 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.327871696 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.361173729 seconds)
  done (took 1109.049745875 seconds)
done (took 1319.561575029 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.337266983 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.330856107 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.314417393 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.333583162 seconds)
  done (took 26.559407066 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.341054042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.338161678 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.341331186 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.338267884 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.34077157 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.338031106 seconds)
  done (took 9.282481695 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.404462974 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327353274 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332365533 seconds)
  done (took 19.306751687 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.527736759 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.601866545 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.674249917 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.499810002 seconds)
  done (took 10.547493348 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.342048283 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.3365932 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.341142373 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.337694353 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.340766359 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.34304065 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.339836138 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.339569065 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.341940849 seconds)
  done (took 13.305247767 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.338070993 seconds)
done (took 81.590069926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.456413666 seconds)
    (2/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.765786158 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.737530505 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.366961713 seconds)
    (5/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338493435 seconds)
    (6/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.412739737 seconds)
    (7/286) benchmarking ("sort", BigInt, false)...
    done (took 6.330898211 seconds)
    (8/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.326092263 seconds)
    (9/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.368494794 seconds)
    (10/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.530874184 seconds)
    (11/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.334856354 seconds)
    (12/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.016791283 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.5975805 seconds)
    (14/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.327834989 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.748825412 seconds)
    (16/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.948846688 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.37658226 seconds)
    (18/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.682786423 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.356921816 seconds)
    (20/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.31409891 seconds)
    (21/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.720152983 seconds)
    (22/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.347940285 seconds)
    (23/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.698969588 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.685737038 seconds)
    (25/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.541686812 seconds)
    (26/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.343280871 seconds)
    (27/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.455876765 seconds)
    (28/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.417413615 seconds)
    (29/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.447038697 seconds)
    (30/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.398195965 seconds)
    (31/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.328740269 seconds)
    (32/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.705283467 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.333599244 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.35334259 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.313840299 seconds)
    (36/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.335139029 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.442002549 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.351610271 seconds)
    (39/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.420203898 seconds)
    (40/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.438521592 seconds)
    (41/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.527420223 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.727026494 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.643704652 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.176562519 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.46468564 seconds)
    (46/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.172575122 seconds)
    (47/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.516302324 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.62276598 seconds)
    (49/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.361111776 seconds)
    (50/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.162944111 seconds)
    (51/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.155819689 seconds)
    (52/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.328839076 seconds)
    (53/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.363653168 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.341816845 seconds)
    (55/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.352608231 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.390461063 seconds)
    (57/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.374850122 seconds)
    (58/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.101862126 seconds)
    (59/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.700783149 seconds)
    (60/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.316911481 seconds)
    (61/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.368666491 seconds)
    (62/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.437150665 seconds)
    (63/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.155517828 seconds)
    (64/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.68249581 seconds)
    (65/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.568188318 seconds)
    (66/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.397525796 seconds)
    (67/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.381777928 seconds)
    (68/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.380469459 seconds)
    (69/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.920958764 seconds)
    (70/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.365371259 seconds)
    (71/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.319139507 seconds)
    (72/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.328688315 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.50315476 seconds)
    (74/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.313775947 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.66239138 seconds)
    (76/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.930529783 seconds)
    (77/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.626547474 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.208298183 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.224879438 seconds)
    (80/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.435132868 seconds)
    (81/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.289558975 seconds)
    (82/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.914727306 seconds)
    (83/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.319474158 seconds)
    (84/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.382208373 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.366417806 seconds)
    (86/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.317016802 seconds)
    (87/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.318455469 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.559739811 seconds)
    (89/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.457779128 seconds)
    (90/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.318209418 seconds)
    (91/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.532682793 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.553688005 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.790540318 seconds)
    (94/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.325242136 seconds)
    (95/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.508296847 seconds)
    (96/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.318896044 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.435172622 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.05333794 seconds)
    (99/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.366511877 seconds)
    (100/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.465760735 seconds)
    (101/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.691261594 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.973950916 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.425814143 seconds)
    (104/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.320659466 seconds)
    (105/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.342909458 seconds)
    (106/286) benchmarking ("sort", Bool, false)...
    done (took 1.851720693 seconds)
    (107/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.38016469 seconds)
    (108/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.615590364 seconds)
    (109/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.350391107 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.981595871 seconds)
    (111/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.070110647 seconds)
    (112/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.599170349 seconds)
    (113/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.32192525 seconds)
    (114/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.412717 seconds)
    (115/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.363173515 seconds)
    (116/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.425332071 seconds)
    (117/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.448178022 seconds)
    (118/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.502291367 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.809151941 seconds)
    (120/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.341361712 seconds)
    (121/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.437280973 seconds)
    (122/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.34944112 seconds)
    (123/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.425310335 seconds)
    (124/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.88409768 seconds)
    (125/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.127843969 seconds)
    (126/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.73884135 seconds)
    (127/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.561907936 seconds)
    (128/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.352304003 seconds)
    (129/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.376423384 seconds)
    (130/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.774879015 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.082102384 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.36791423 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.189539108 seconds)
    (134/286) benchmarking ("sort", Float32, false)...
    done (took 5.363261058 seconds)
    (135/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.381047821 seconds)
    (136/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.47449582 seconds)
    (137/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.360218117 seconds)
    (138/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.340042624 seconds)
    (139/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.956363044 seconds)
    (140/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.866525025 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.366964369 seconds)
    (142/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.101170051 seconds)
    (143/286) benchmarking ("sort", BigInt, true)...
    done (took 6.35678497 seconds)
    (144/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.340931258 seconds)
    (145/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.355530379 seconds)
    (146/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.455025037 seconds)
    (147/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.370405317 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.969097308 seconds)
    (149/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.742164479 seconds)
    (150/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.444630202 seconds)
    (151/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.323287167 seconds)
    (152/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.483170969 seconds)
    (153/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.072751389 seconds)
    (154/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.349987615 seconds)
    (155/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.316751995 seconds)
    (156/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.326946825 seconds)
    (157/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.148949155 seconds)
    (158/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.365938814 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.688428317 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.252797689 seconds)
    (161/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.354118863 seconds)
    (162/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.423264116 seconds)
    (163/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.160182968 seconds)
    (164/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.944100684 seconds)
    (165/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.404609287 seconds)
    (166/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.342139986 seconds)
    (167/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.457077866 seconds)
    (168/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.954444656 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.370414896 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.341294789 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.59610651 seconds)
    (172/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.327245229 seconds)
    (173/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.324717052 seconds)
    (174/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.737910166 seconds)
    (175/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.04318499 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.3990699 seconds)
    (177/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.36763878 seconds)
    (178/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319541172 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.931239663 seconds)
    (180/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.695253636 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.114280715 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.436863623 seconds)
    (183/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.341076026 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.401202347 seconds)
    (185/286) benchmarking ("sort", Int8, false)...
    done (took 4.364392523 seconds)
    (186/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.326806539 seconds)
    (187/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.358980288 seconds)
    (188/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.551581968 seconds)
    (189/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.523410705 seconds)
    (190/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.364788896 seconds)
    (191/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.784447836 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.321173939 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.07912273 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.05967858 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.979935751 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.560170676 seconds)
    (197/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.42864924 seconds)
    (198/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.907118803 seconds)
    (199/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.082047163 seconds)
    (200/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.345490932 seconds)
    (201/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.348566329 seconds)
    (202/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.642157497 seconds)
    (203/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.385055788 seconds)
    (204/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.360862805 seconds)
    (205/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.3569011 seconds)
    (206/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.102685298 seconds)
    (207/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.321908572 seconds)
    (208/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.337102356 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.381930288 seconds)
    (210/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.702554526 seconds)
    (211/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.424174515 seconds)
    (212/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371433459 seconds)
    (213/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.329090808 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.279186349 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385645778 seconds)
    (216/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.350330646 seconds)
    (217/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.371298236 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.892191977 seconds)
    (219/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.325097668 seconds)
    (220/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.323828969 seconds)
    (221/286) benchmarking ("sort", Float64, false)...
    done (took 5.651052771 seconds)
    (222/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.321718434 seconds)
    (223/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.146801736 seconds)
    (224/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.334774963 seconds)
    (225/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.701202206 seconds)
    (226/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.692149263 seconds)
    (227/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.372337505 seconds)
    (228/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.934712606 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.525145031 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.640624642 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.796370651 seconds)
    (232/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.332661155 seconds)
    (233/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.444689748 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.326929553 seconds)
    (235/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.323608847 seconds)
    (236/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.467611123 seconds)
    (237/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.69701074 seconds)
    (238/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.327068215 seconds)
    (239/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.404342652 seconds)
    (240/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.344840308 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.59311687 seconds)
    (242/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.206433855 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.767945802 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.777170207 seconds)
    (245/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.347450303 seconds)
    (246/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.324472928 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.374208569 seconds)
    (248/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.617374863 seconds)
    (249/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.2193729 seconds)
    (250/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.341366928 seconds)
    (251/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.333413103 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.742558922 seconds)
    (253/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.327942317 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.102587488 seconds)
    (255/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.409067089 seconds)
    (256/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.356497921 seconds)
    (257/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.325358371 seconds)
    (258/286) benchmarking ("sort", Float32, true)...
    done (took 6.345553212 seconds)
    (259/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.587780896 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.89570043 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.434461915 seconds)
    (262/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.440441516 seconds)
    (263/286) benchmarking ("sort", Int8, true)...
    done (took 6.36249881 seconds)
    (264/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.374315435 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.432970217 seconds)
    (266/286) benchmarking ("sort", Float64, true)...
    done (took 6.346508973 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.46356669 seconds)
    (268/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.349115257 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.138053808 seconds)
    (270/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.338683146 seconds)
    (271/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.608269556 seconds)
    (272/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.427322387 seconds)
    (273/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.123753987 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.243995162 seconds)
    (275/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.060711572 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.387150234 seconds)
    (277/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.232812529 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.531703851 seconds)
    (279/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.746381036 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.98145394 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.368644254 seconds)
    (282/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.355687802 seconds)
    (283/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.882180222 seconds)
    (284/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.454860478 seconds)
    (285/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.584527468 seconds)
    (286/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.357102337 seconds)
  done (took 938.387003589 seconds)
done (took 939.63898761 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.382220217 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375075814 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.3616084 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.383769946 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.472399677 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.385726592 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.368600578 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.361987023 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.409112205 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.410199609 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.36171768 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.389060571 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.36431226 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.362880058 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.363831098 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374617447 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.379330103 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.358890348 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.38040648 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.373540539 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.379132032 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.361975329 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.412498238 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.387059037 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.367588851 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.363695779 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.36304453 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.383258839 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.476408565 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.365150572 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.367613622 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.377626796 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.377723415 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.356952283 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.358496112 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.380391517 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374562596 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.372977578 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.366854765 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.394310835 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.772562579 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.376108287 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.367095411 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.365858616 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.367487113 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369031426 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.366310673 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.371242694 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378814735 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378722214 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.754741428 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.391160009 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.365067625 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.365186566 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.374057693 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.364975233 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.365149136 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379639723 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.384102536 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383798343 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.366202038 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.36711386 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.368093574 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.383876193 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.373605306 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.831016225 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.375517769 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.371105066 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.786081254 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.383212166 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.829267712 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.387013829 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.370194414 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.380142595 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.399023637 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.394812805 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.364373321 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.364987242 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.373552349 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.364402718 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.376041825 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378916313 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371411398 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.365068849 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380766418 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.394031621 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.37645176 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.368230565 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.376679827 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.385764476 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.376143767 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.375611696 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.371860433 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.361352942 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.375670964 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372707293 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.367395671 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.36907884 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.370114867 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37778069 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.790381583 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403885352 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.365289704 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.363212977 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.367473577 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380023133 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.787830131 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.381608719 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.390463768 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.419447184 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.368730076 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.376875437 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.368313436 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386606996 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.378441964 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.372682121 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.360341798 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.384765628 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.792695685 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.398862899 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.372676963 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.366775785 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38585658 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.371638573 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.366853518 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.401769459 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.371335954 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38274114 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.487358921 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.380736727 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.401764941 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.367272427 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.374155323 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.396064629 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389152505 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.398222746 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.37031676 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388451998 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.384992086 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.364556644 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.378197158 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.379599516 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.370181738 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.375542968 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.362295504 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.397392916 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38211346 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384459224 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.389164324 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.488106672 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.365549487 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.391025763 seconds)
done (took 230.270061682 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.436768549 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.369350791 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.448926151 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.367274211 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.463101 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.474021082 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.365313426 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.362718587 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.364097988 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.75076977 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.36443303 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.368741318 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.359821418 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.364709555 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.445787006 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.370663312 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.365626929 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.735172075 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.368521716 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.441523024 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.367406651 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.367626304 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.371216181 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.777478002 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.36614519 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.364851609 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.447700782 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.369396429 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.72019895 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.367182026 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.369790005 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.737766153 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.469886512 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.387058055 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.379470316 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.379652149 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.476924476 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.385852348 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.459802331 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.452875082 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.463581917 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.40679252 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.367103366 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.371572159 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.371226659 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371764328 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.368382655 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.398523482 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.365475955 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.367085487 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.719309031 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.379743038 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.379463128 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.370156855 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.368537798 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.392635038 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368750346 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.373086146 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.462414692 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.371564128 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.446162166 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.756731617 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.779416162 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.369446873 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.369636127 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.370761977 seconds)
  done (took 151.006328701 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436775029 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.4442357 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.480697103 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.384559882 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.420154283 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487375655 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.385426088 seconds)
  done (took 11.312674549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.376159536 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.371586972 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.433604955 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.420860221 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372409983 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.518270048 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374448303 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.382333628 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.371707156 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.426853188 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.374260294 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372942787 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.38031341 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.372476431 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418672879 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.382641116 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.488031132 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.37289637 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375100066 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.529008519 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37048908 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.379329791 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.425933833 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.386069913 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.374593324 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.378784614 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.940490213 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375984636 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371042143 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373748333 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369824677 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.411747227 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374547554 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.371198812 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371136286 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.490192121 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.377899839 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372480534 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.374112009 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.366507961 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.371223506 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375573826 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375617794 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.37115855 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.375274001 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398070363 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.372912641 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.37579948 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.371935785 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376148111 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.418436768 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375415284 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373027968 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.372365444 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.429921937 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381855125 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376257177 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.370620155 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.372480599 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369657727 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.527532305 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.419642604 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.376349719 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.423610193 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376131746 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374928431 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.373595229 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.373216141 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.435390759 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.37418486 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.421914393 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.371433239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.528236732 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.399496247 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376363096 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.378912041 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.378304821 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375524502 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.371567374 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.381521668 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.375553167 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.376660109 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382928266 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376548308 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376621339 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.477933749 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485348618 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.373110579 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.390581102 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.383122935 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.376415722 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.429201858 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.373999434 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.374266376 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426030528 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.491436013 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431623403 seconds)
  done (took 157.190991964 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.381530936 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384104505 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.379431944 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.393640004 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377580219 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.376743716 seconds)
  done (took 9.569003124 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379485948 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.376200644 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.379570654 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.379319675 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379286248 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.377201526 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.381500207 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379648713 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.380357805 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.376596811 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.378373285 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.378858069 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.376977148 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.377310857 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380390434 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.378966406 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.379058434 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375188298 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.379401419 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380161522 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473306843 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.379370026 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380086008 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.380541115 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.382893165 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380005349 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388313122 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.379855979 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.376724143 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.385790878 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.394664046 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.377273858 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.378619946 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381380019 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.381581021 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37986392 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382052425 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.378013441 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376251595 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.378028175 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.376536388 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377159654 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.378185238 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.379383326 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.377691429 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.382774565 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.380144647 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.386235707 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.378278046 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37911029 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.379957311 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.37919968 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.377938349 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.38049505 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.379519702 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398892372 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.383278273 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.381535431 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.379092005 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.377891185 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.382411326 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.380115311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381695219 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.383268506 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387099659 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.381111214 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.379041903 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384285543 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380233793 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.37887946 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.379954722 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.378506974 seconds)
  done (took 101.757431988 seconds)
done (took 432.115477766 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.691599957 seconds)
  done (took 7.974536136 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.54555258 seconds)
  done (took 7.828242118 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.909578041 seconds)
  done (took 22.200556094 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.429741423 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.457965355 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.391501728 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.366295082 seconds)
  done (took 26.92611703 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.704864348 seconds)
  done (took 7.983182104 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.36440333 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.375355492 seconds)
  done (took 14.016768608 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.939284192 seconds)
  done (took 8.213483059 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.733509182 seconds)
  done (took 8.006676728 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.378107588 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.375492042 seconds)
  done (took 14.288549184 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.343639515 seconds)
  done (took 7.613233297 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.437608453 seconds)
  done (took 8.71054318 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.35926243 seconds)
  done (took 7.631712866 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.377605658 seconds)
  done (took 7.648819812 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.346694759 seconds)
  done (took 9.616591483 seconds)
done (took 159.950922368 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.35871728 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.351255437 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.350844889 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.350906836 seconds)
  done (took 26.682403035 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.394939619 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.397865407 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.397447582 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.40733649 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.39887416 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.39876857 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.386499008 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.390637517 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.408104577 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.401921312 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.398432712 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.401476998 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.398831904 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.389712859 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.400320569 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.398699987 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409167151 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397774013 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.390488372 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.406880827 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367180037 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.407918716 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.400687185 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.366819146 seconds)
  done (took 34.778507084 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.88524542 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.436448686 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.518388246 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416638116 seconds)
  done (took 7.524919226 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.415827495 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417182603 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.426255126 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.470373211 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.494558645 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.427951734 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390920493 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388966307 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.373864273 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420243993 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.499780256 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.436426182 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.50402501 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.366501509 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.566293143 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.366103277 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.366837796 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418833949 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.471061672 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.482903127 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.365418986 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.420454381 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.421852922 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.4365609 seconds)
  done (took 35.616129181 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363862278 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.38573653 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.365858664 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.364408526 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.374322157 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.367396096 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.36872903 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.368717131 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.366723016 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.372271332 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.363712994 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.37887215 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.363683217 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368076614 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.374125423 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.369160448 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.372858791 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.368024151 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.368578031 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.373182297 seconds)
  done (took 28.668194696 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.357883017 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.278660456 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.709967023 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.61532421 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.359246956 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.360741273 seconds)
  done (took 27.950813294 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.43484805 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.583073362 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.364138681 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.716816931 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.807812787 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.381280983 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.368685129 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.607648723 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.918829715 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.90765657 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.422867063 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.436604465 seconds)
  done (took 20.220608652 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.368169564 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.361413841 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.36315133 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.376618051 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.421004251 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.384884912 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.37673463 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.362146547 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.422564469 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.440421127 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384611766 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.420077006 seconds)
  done (took 37.954348429 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449183773 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405661501 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.228319646 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367100248 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.082000804 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569882812 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424465392 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.845092158 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.368746574 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637080409 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365298234 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452817746 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622345984 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374147287 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365842979 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.331687531 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601300598 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846742482 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359265669 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.365737072 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386612927 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367925806 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.477325709 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.387924433 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570906071 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.494904114 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.616281164 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.135057398 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647655166 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370729158 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368307384 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359129474 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633483915 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016838379 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469895966 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370308316 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357706238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.906500575 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.35200971 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.361974317 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284383028 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362199731 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371304694 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357486308 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292352869 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364818588 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828851313 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.366406146 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.072209939 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360518327 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372470837 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455163768 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.364470601 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.352277184 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460618469 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367507103 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.359085471 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449601859 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946505802 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.78804543 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372468137 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.297266025 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376575064 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.2912539 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996782637 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.480537613 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.364719231 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36375917 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295424985 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.370567272 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376839007 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509228159 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.377056328 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009773961 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068460869 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378817016 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308326288 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902900805 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367318364 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.298327567 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589209608 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138253084 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298167036 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.3044174 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299306724 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060523463 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364425586 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.731975302 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381027561 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843706986 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.374317512 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380023505 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386186656 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587996612 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.242077984 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362886261 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.291835948 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503998131 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377182603 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.826805093 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298409237 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.361693969 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618110266 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.575445312 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369209595 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.333003213 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597580794 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369012483 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.384099056 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37988086 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.375124432 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.932790444 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391766719 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.79152792 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382714544 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.139113623 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089501156 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370624135 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.464628899 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37293785 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609585365 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.113836799 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241200295 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431821107 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370495418 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.789512643 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.408704003 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95852527 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.247264844 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.360669792 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378591628 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.376445075 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.365140467 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312293092 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.356574953 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376898296 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.145678447 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588681052 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365266872 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659515311 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301075271 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513200415 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372137411 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582857716 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.569030538 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.382286895 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623901245 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366961847 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383712112 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379298944 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386169223 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466995475 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389698847 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.378152731 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.622808329 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.369805085 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.370311568 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.417005677 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.147171911 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375183255 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.37274851 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368717661 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943611707 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362765514 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364269794 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256749626 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.379978588 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432747055 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373851427 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.377266252 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.151993441 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39311024 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.375179772 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.371050145 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584429228 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377776654 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.402266963 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448656673 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.57897998 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943893966 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399659594 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.304408372 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.081714293 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.059168079 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367056099 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.566213456 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366208093 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378636527 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379970091 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377958741 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94124865 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387308454 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.327808301 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.375081331 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38125561 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.375318828 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368640602 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.13176807 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.824031862 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375862315 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.381393787 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515104822 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.385327717 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304319474 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.88672989 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377024513 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371598812 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.148104138 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405327364 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.327142339 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873616284 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623518031 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382805947 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38260588 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.516951014 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.405089312 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.368560231 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345009509 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397189128 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.385714317 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379699236 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.381447236 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.39050091 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.73498848 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932326535 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108969517 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927448911 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299945766 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.38012216 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.272280555 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837468154 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308119254 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.031724597 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557075692 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.853627919 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31633591 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582500853 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.565631707 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139429049 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38302193 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601659485 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281638383 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.351115087 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403362932 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582659886 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407508717 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381150868 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302931997 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.662570181 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647315224 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351218832 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451081377 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840567359 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352581433 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.171589302 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.377165766 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.672452007 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560837558 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.919192558 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.762581936 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36961402 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373485775 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877609692 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369454458 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900542925 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000200568 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396258539 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.588313291 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310588445 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.382818645 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.385299363 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.370107819 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.652641816 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.378868359 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.626972534 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383640745 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310585854 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386281082 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903616781 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.242208686 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.381213135 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37541003 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118434322 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367676126 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68279749 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.376955824 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.126470826 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394439899 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306009274 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310339486 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.068098806 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385969559 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351781515 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871156287 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.372707809 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376695259 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384557301 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219940903 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632419972 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.38955955 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.957161279 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619432268 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389473496 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398765918 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.477661165 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386439786 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.359293289 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277337092 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614361079 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414615635 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599933536 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.258905145 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.297371522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.4155889 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587876317 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.278627101 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387948533 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633077721 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.104819999 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.380986776 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097203265 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413971857 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377711096 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389936731 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388115878 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397712519 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466678999 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387497158 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.387472544 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.388695749 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550570359 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381063986 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381028441 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.393280512 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472978533 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.846919063 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.136652669 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.151563252 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964356929 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152132223 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.976928403 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404218365 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378494814 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37928375 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315109977 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524581967 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.90416947 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655888269 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514096795 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.375331758 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405015334 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379742061 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388809169 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591700142 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654740328 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349036412 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39162192 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165057215 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.264041544 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38921123 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.592193247 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878383805 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939431977 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491349664 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38671505 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.846970668 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653544178 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.473775004 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381307001 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970462039 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.384611233 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.677397091 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.403094668 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381906089 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527379539 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390902688 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036809077 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.407375511 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.540306259 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.155222126 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.458929137 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632913238 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.846582115 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391940001 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967249785 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096416392 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646867703 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452842183 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392044774 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.500311016 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532840893 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.389457927 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.264077581 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381135968 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226976622 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.093051433 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.392434648 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967194624 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662876632 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.381479641 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.391135173 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406362425 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.391152134 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610702397 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081761322 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600330937 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391632855 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392327385 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.372504632 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967273795 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407476182 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320391783 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.382777066 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63586487 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634195868 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40744722 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.837763131 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.094528459 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938265661 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.346757979 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405171885 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391564703 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.082144435 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970671615 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.179047628 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878657467 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.034813241 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382740372 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66040776 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.385263508 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388954004 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659711437 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.387363575 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38322298 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412693156 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.969892632 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161693445 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.397206318 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.478682929 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.323216616 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.611026287 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431629363 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33577534 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376982197 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.564453657 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386371711 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516686422 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391307543 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.390263573 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396041121 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.139685617 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72352993 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.383880823 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.381375248 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.368704572 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39010751 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475564979 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664778489 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383091566 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.061660986 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.738076332 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642429774 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396687356 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.367076067 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.39137646 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388984842 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103849327 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393196188 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383041446 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955559181 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.387970106 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.400450963 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393062684 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.601322467 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598625121 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398241856 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400713963 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401920767 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402734771 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.286544478 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.155595391 seconds)
  done (took 1659.43462386 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.426552558 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.384142735 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.399747237 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.390025346 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.415326198 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.449325481 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.38949786 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.432864315 seconds)
  done (took 52.580849979 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.392228413 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.539046556 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.413812609 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.393677165 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.396336469 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.387259499 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.84794096 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.404316602 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.389347555 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.392551888 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.386834178 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.390632138 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.042689133 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.397390871 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.385350961 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.380170109 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.397783887 seconds)
  done (took 66.23377374 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.39811329 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.961673766 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.480792283 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.382439848 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.428224491 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.408371897 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.177635575 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.429117838 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.384486107 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.747314222 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.048664396 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.400567666 seconds)
  done (took 85.541801366 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.407816398 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.407134693 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.406940032 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.407926828 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.406804146 seconds)
  done (took 8.333602021 seconds)
done (took 2092.799554795 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.393681505 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.081184098 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.994247314 seconds)
  done (took 5.371069041 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.536948277 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.586670229 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.709564025 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.714643846 seconds)
  done (took 7.845171824 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.669521706 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.760134287 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.583831936 seconds)
  done (took 6.308273026 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.66986556 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.395727611 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.403911977 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.390061049 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.389974691 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.390915258 seconds)
  done (took 20.466358231 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.394912213 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.39959744 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.397062322 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.395876945 seconds)
  done (took 6.883612685 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.369401328 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.112673638 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.371152316 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.388316095 seconds)
  done (took 18.537209089 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.145129106 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.158943268 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.140542732 seconds)
  done (took 7.741314327 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.420784039 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.415458461 seconds)
  done (took 4.132459062 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.685129596 seconds)
  done (took 2.982068513 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.409458362 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.449625827 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.429493285 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.35595 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.57715501 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.71412704 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.997586416 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.593074128 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.338563397 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.556919477 seconds)
  done (took 30.720051233 seconds)
done (took 128.155429135 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.183573055 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.768560153 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.600875461 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.147465798 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.615247556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.597990959 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.592777914 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.116432612 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.660409818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.647404124 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.185963321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.615693011 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.749157054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.773929832 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.765475404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.394358643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.620765526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.236194185 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.831177701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.067570077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.59348569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.787915268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.018278013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.813151631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.614911087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.54970817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.366384741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.394153331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.007099553 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.393066606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.537560828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.243989043 seconds)
  done (took 191.789335324 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.393208733 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.387207319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.403634053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.391929605 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.388985391 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.389565717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.390662237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.404126967 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.387512055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.391869627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.387907565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.386058857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.406862381 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.402793997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.38822567 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.389134014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.404861785 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.395874894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.395956108 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.402828825 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.388728669 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.412866544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.397369538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.388035278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.411000743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.389665533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.389219009 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.388989623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410670661 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.397619872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.394949237 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.393814467 seconds)
  done (took 205.951649085 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405495029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.391321234 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.411061371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.395654412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.415059539 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.399478668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39749338 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.391840952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.401386432 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.393332113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.414197046 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.399085317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.399583093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.413680102 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.414260657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.418545887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.397762751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405001003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.395193149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.398440565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.406974791 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.397120233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.392468367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.401438595 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.396151033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.413711487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.413146387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.411244059 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400253741 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.397531213 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.399263104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.414476452 seconds)
  done (took 206.205337385 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.594219902 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406460849 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.407845981 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.339618321 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.408275723 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.408235568 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.402733272 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.603467358 seconds)
  done (took 14.875268614 seconds)
done (took 620.128258322 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.688940218 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.394294656 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.605564798 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.426833953 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.18990719 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.443739849 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.423042846 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.595676975 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.333484746 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.601516409 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.687379336 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.435825019 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.835785692 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.425889458 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.679529903 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.526752343 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.326318758 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.452165876 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.735225931 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.966246571 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.686182969 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.885245046 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.616520453 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.327272691 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.846486863 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.876283554 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.120733639 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.318274782 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.437248313 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.744463306 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.04298889 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.356125152 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.487977423 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.483476766 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.543491903 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.522976447 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.34850795 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.479417672 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.625060681 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.64477179 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.968548483 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.151596327 seconds)
  done (took 94.590839217 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.390389037 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.391821352 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.389347265 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.391112405 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.393520125 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.391288928 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.391551032 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.390562929 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.392104854 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.39150711 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.392052878 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.392211801 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.388878044 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.390587291 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.392080457 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.392751429 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.393915089 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.390115108 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.386912744 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.390983823 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.391756108 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.39033627 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.391813607 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.392984034 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.392944958 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.391899485 seconds)
  done (took 37.481783115 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.410329979 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.661089666 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.82272556 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.415799162 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.406064879 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.413612327 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.48461883 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.408627916 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.414014123 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.410290711 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.562948727 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.413352696 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.443030267 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.849387263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414606129 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.409012992 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.411071905 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.409419586 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.667547991 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.417771674 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.500179949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.407922545 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.485160271 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.418676463 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.424870566 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407625807 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.415492422 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.942390481 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.430017749 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.562246969 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.195532963 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.484180579 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.905490121 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.843366734 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.200608765 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.414137204 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.414596581 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.568045641 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.412775117 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412021052 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.486087103 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.413668704 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.827785629 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.049228042 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.430744772 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413906422 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.968983608 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.582023539 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.649291103 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.419847087 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.854464723 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.417644986 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.415213361 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413001199 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.653206473 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.443357686 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410628774 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.991055378 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.436527088 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.488314906 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.416384868 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.411501511 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.676195996 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.414390848 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.663869198 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.416600131 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.42282258 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433397837 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.828764191 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.417398088 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.072523183 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.432803777 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.416035087 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.565466684 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.666704423 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.996812807 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.434086387 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.678590966 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.920622971 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.507654788 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.419938432 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.93002276 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.510847212 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.41897987 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.416440485 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.419596684 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.416348331 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467994075 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.49098189 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.00030408 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.080782216 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.012573503 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.514377757 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.430215326 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.417443227 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.995123287 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.434475209 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.416837099 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.832270878 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.074800902 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.43500877 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423916529 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.072318002 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.436033938 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.494877369 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.423662159 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.836213947 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.417159275 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.468120774 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.417265449 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.422635138 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.432993377 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.495688257 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.419096752 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416169448 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.057523042 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.59208334 seconds)
  done (took 185.519457814 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.41210828 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.405113339 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.412387702 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.416481029 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.411465526 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.41841836 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.409460328 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.409965082 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415158258 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.410830679 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.413792245 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.412407963 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.406168356 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.420151435 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.416612585 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.415908822 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.025262323 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.409857626 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.42094864 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.405470457 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.202365248 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.412306258 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.415896977 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.405429793 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.412168127 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.412443218 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.413303149 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.406153984 seconds)
  done (took 154.263020706 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.420373933 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.975572415 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.429499904 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.54690987 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.432347428 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.418311805 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.546259398 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.47040186 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.438343644 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.414718 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.418555027 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.717176788 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.412564544 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.92807166 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.600543275 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.565929984 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.926806832 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.429004304 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.419767516 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.421024927 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.550842394 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.424609647 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.717541913 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.976718552 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.433490967 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.982610737 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.402532954 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.420844618 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417862743 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.983923844 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.431664388 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.723220347 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.497180039 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.479161973 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.001604957 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.946521446 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.952169038 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.568674975 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.416460286 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.420287124 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.420309525 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.405246736 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.982947461 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.435139467 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.419733296 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.973762515 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.439400215 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.421244816 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.427833754 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.423024809 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.477942399 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.4984562 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.742808377 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.991349502 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.514741532 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.433347776 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.548646384 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.78223056 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.426024049 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.933666502 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.403612311 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.990957127 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.439030818 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.402493775 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.421461154 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.421612098 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.573161133 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.550661996 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.931250458 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.439298012 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.937139791 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.584589234 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.42354065 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420558991 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.423876497 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.990060893 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.954704077 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.586006377 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.550884772 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.606898862 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.409018389 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.421345164 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.408289979 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.499856112 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.424273029 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.994362047 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.956568862 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.436789273 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.425994346 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.427073719 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.426238128 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.596486033 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.008230772 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.515017434 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.92924441 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.739993543 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.727549162 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.426317727 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.483981184 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.43932754 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.732563605 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.426898953 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.482200478 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.852389804 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.732712386 seconds)
  done (took 168.672533755 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.661660319 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.601410052 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.513156328 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.554732054 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.025899965 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.978473655 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.68037675 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.56828456 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.531598203 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.682623451 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.560268535 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.516535124 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.591114838 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.502403989 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.138897786 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.510154472 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.533343718 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575145046 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.536003733 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.418071968 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.054308672 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.719846878 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.594101431 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.2710328 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.519556027 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.181357754 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.973531851 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.99313032 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.608900931 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.696148079 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.970906736 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.530928599 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.383400985 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.112553185 seconds)
  done (took 67.6103835 seconds)
done (took 709.447694297 seconds)
SAVING RESULT...
DONE!
