cset: moving following pidspec: 30968
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.314790792 seconds)
loading group "string"... done (took 0.666743133 seconds)
loading group "linalg"... done (took 7.964664364 seconds)
loading group "parallel"... done (took 0.167167355 seconds)
loading group "find"... done (took 1.18323961 seconds)
loading group "tuple"... done (took 1.913849524 seconds)
loading group "dates"... done (took 1.302416562 seconds)
loading group "micro"... done (took 0.247176175 seconds)
loading group "io"... done (took 0.975605871 seconds)
loading group "scalar"... done (took 38.942119259 seconds)
loading group "sparse"... done (took 12.285821684 seconds)
loading group "broadcast"... done (took 0.989716324 seconds)
loading group "union"... done (took 12.598576679 seconds)
loading group "simd"... done (took 4.662549088 seconds)
loading group "random"... done (took 9.356913718 seconds)
loading group "problem"... done (took 1.84704998 seconds)
loading group "array"... done (took 21.521294876 seconds)
loading group "misc"... done (took 1.699841774 seconds)
loading group "sort"... done (took 3.433488562 seconds)
loading group "collection"... done (took 17.905667984 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526517929 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129648151 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132262162 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124316997 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151502306 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118053572 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130743992 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090260161 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.81508037 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153236214 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122110174 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439737654 seconds)
done (took 5.243001952 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176570206 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086794764 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087562955 seconds)
  done (took 1.3031848 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068943182 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128890734 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070767864 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069918639 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070033216 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069614227 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07021848 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06949282 seconds)
  done (took 1.678867479 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077373402 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072835621 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069343834 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071317811 seconds)
  done (took 1.422766112 seconds)
done (took 5.789033803 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.809589686 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.216027429 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192118538 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.427791752 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132355437 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164011062 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.635459686 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344446584 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19303303 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084347735 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113333203 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.352121569 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113167123 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644934816 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077986559 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097681034 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141288112 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412045887 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070743686 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085940794 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09263742 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132026445 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090019789 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077891132 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151827506 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071342537 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141335139 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083352029 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069927407 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226488678 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175459803 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664719271 seconds)
  done (took 10.457778741 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104761811 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104118918 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072116037 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129714044 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103672648 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073955678 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078618746 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070763202 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09444524 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135116711 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096391076 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10711195 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068956041 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072150628 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08916064 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20978987 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083932346 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087022997 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074443293 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083363968 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112435403 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081432907 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084737284 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084357326 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133058462 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184227144 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101445024 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101013286 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069703755 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086543603 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117966334 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131551788 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069690776 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069565805 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131087162 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097609311 seconds)
  done (took 4.758435911 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.046664476 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148768829 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093928276 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139492289 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0683197 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113563763 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069722193 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084719021 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.215903991 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.414466792 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.636009842 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115321736 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110575463 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070767224 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071690892 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070214827 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.582995665 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102662786 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112160533 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085691539 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07483187 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074500701 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359084745 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071297428 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067876522 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072576035 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088709039 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059885338 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128874423 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071196124 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.979174849 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168179208 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070838343 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104292881 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.297280888 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094100533 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148239622 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072829672 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068310078 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163864505 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074512472 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069615426 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088554179 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107976345 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123229259 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06936368 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070515465 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172238946 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068831873 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08361352 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.107425456 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155436801 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080553243 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069239092 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.263062781 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092838597 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073241613 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067878123 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.165408881 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132330276 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071938381 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070423138 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072172521 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.0724523 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374922959 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071154096 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.893924224 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097764758 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080099096 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071340972 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07317768 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073308575 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076307243 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07583274 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091885012 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069649474 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078988609 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069646039 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069784222 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070695022 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086909906 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.401625957 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070187117 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07229077 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068248822 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092735185 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099243056 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069537432 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.171332296 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102843509 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071936666 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069946723 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067970899 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.1122439 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070443791 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08633135 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072757848 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115853807 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070331745 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.094417374 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073391471 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067344734 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099628722 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073653428 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101559641 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083941507 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071498727 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.447548048 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069657943 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069395798 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072504595 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069319286 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071105045 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069971087 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082015486 seconds)
  done (took 22.201324561 seconds)
done (took 39.595661825 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.26735997 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076804657 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077084273 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077301141 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077096359 seconds)
  done (took 1.799016277 seconds)
done (took 3.001159906 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127462275 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104438014 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067586165 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102111819 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067524165 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106276348 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10513112 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081582935 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104401619 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06772845 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102425805 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067682899 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068691886 seconds)
  done (took 2.395733348 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087351289 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088370474 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074375927 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087702396 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066916082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087804729 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088312682 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093242651 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085738382 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076701959 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067318269 seconds)
  done (took 2.098377698 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087251843 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088334309 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073872321 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086422827 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066822676 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086853753 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085991861 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090065308 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086455395 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077468357 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06716591 seconds)
  done (took 2.087401537 seconds)
done (took 7.770195827 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081723714 seconds)
  done (took 1.264498719 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.605578599 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.182742785 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086500877 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115554734 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197587773 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122187924 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277685342 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090612026 seconds)
  done (took 9.048062516 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.108300911 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07137855 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075670834 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074692857 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074718436 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075506525 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072639274 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072171911 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074911858 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07300511 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074360068 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072460111 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073471059 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076223898 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072700503 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073261073 seconds)
  done (took 2.473663113 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097154653 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095971926 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077039856 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078569573 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075909867 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075858496 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077263082 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077097992 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074267617 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075675691 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07793869 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077310229 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074624108 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068372987 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077486922 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078560316 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074551696 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077663498 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078421758 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079637318 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078324677 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067646513 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075157577 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07761788 seconds)
  done (took 3.162837762 seconds)
done (took 17.139966775 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110555308 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071060124 seconds)
  done (took 1.373417654 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084918405 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087668528 seconds)
  done (took 1.370979609 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086402738 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069473327 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094792481 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081990839 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069669679 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06919464 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091401796 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069374555 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068969489 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069401725 seconds)
  done (took 1.970302809 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07181694 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080370582 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073723301 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08478729 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077226542 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06781832 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07533136 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070927939 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08034223 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066113749 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075070982 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086397234 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074614652 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088389259 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074902913 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072030807 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074205473 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071016872 seconds)
  done (took 2.566060757 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068572876 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070804331 seconds)
  done (took 1.344440764 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070539009 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066770425 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070265197 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069165462 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066800141 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065837355 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067034657 seconds)
  done (took 1.678485502 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390909502 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119559161 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324043025 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0745643 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086144923 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.268607605 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069328524 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074899348 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074352749 seconds)
  done (took 2.730575498 seconds)
done (took 14.241518268 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083755179 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091188322 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100788167 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.393851932 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095299481 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069844864 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11744008 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192924535 seconds)
done (took 2.360691621 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21780631 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.718141525 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.445763201 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218426671 seconds)
  done (took 2.591416578 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356873532 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092354099 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062317987 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07062834 seconds)
  done (took 1.801671268 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071199811 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073005299 seconds)
  done (took 1.357915725 seconds)
done (took 7.183595669 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070346155 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088379924 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069148611 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070589205 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069913978 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.067184389 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069444525 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.067068446 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067124417 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066667252 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069297925 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069670525 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.069178737 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.069344521 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069288547 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066819201 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067799786 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069909138 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066668995 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066884664 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06708131 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069435255 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067130097 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067208313 seconds)
  done (took 2.911721687 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088439409 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069218906 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075259674 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074370386 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072800953 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074472386 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074574615 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068739751 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074907886 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071913046 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072327519 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072332752 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071492316 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0728302 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071600478 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072391961 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075682132 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069393328 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071324515 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072701365 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.182467359 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069011485 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072228382 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074339688 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072528756 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072323166 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071365523 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06959909 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074216576 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072323657 seconds)
  done (took 3.51913762 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073308214 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066507899 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068255806 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074148621 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067373544 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067898052 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066520947 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067087266 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068219679 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066545333 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068290921 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066790212 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066603551 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067141822 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067528421 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071025851 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082745963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067718032 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066874132 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067239785 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070099911 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066406035 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067506349 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066646311 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066538566 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065981635 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067201607 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066490869 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067523458 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066743028 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069794218 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070427802 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067020602 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073982593 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070618993 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06626139 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070920459 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066597325 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067326295 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066840345 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06629965 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066548725 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067526678 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074557197 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066737006 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068296685 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067620536 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068105548 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067430885 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069511736 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066339837 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067339559 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068647496 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067845107 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070995854 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066667843 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067867702 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06631371 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068710571 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066584429 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066800267 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066668875 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069739398 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06758258 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082903432 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074165083 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06687845 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06911607 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068079708 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070229929 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068809346 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.0813801 seconds)
  done (took 6.173086479 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094332194 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090728556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068395185 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068920451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065423531 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067860173 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073036295 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068112328 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070169227 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086256996 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067835953 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068888618 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068679573 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070878993 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067397932 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068604374 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075426677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064938253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067241141 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071114824 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067981745 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075599715 seconds)
  done (took 2.821312989 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16054471 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073461547 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109699436 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078764249 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073535593 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079133038 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073326392 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07315541 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074042188 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070617355 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070711758 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073348055 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073292137 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071335065 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070530309 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07167331 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073160977 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070586323 seconds)
  done (took 2.668449027 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079494382 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069822264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091166983 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069372383 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069859841 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07172297 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073272429 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078078133 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072316911 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0690556 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077691448 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071988653 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071472999 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069107397 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071806874 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069033229 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071691511 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069200068 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077387811 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07355265 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07407521 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077435284 seconds)
  done (took 2.846969552 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083275285 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071960669 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084580133 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071175157 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065118969 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067520997 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073520886 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068916952 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073543635 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07145011 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068922117 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067684663 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072024073 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068789259 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072666947 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06953134 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071129085 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069283854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071004361 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064757235 seconds)
  done (took 2.657286392 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090190097 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071829813 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070793238 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078632753 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071164813 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071263493 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079017617 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073290527 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071272882 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092152438 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071069319 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07155812 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078763389 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075889357 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071555577 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079000168 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078464357 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079558262 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071049569 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071388415 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092065819 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071487282 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078524734 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071441603 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071987249 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071555684 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07138453 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076236643 seconds)
  done (took 3.354030057 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070446699 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07023869 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06753543 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067309632 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067418167 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067314313 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067276254 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066979331 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069409874 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067688977 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069524034 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069409021 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069388341 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069106398 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069363708 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069703849 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069744914 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06665446 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067027301 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067123192 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069607981 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069750676 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06973367 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067138375 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066827354 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069670374 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067221777 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067154459 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069516549 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066917422 seconds)
  done (took 3.287329533 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07858256 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076831939 seconds)
  done (took 1.39142542 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066069016 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083259938 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066939863 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074178958 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072494981 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070173635 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076694504 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073201108 seconds)
  done (took 1.814990111 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085310882 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081453231 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072034256 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083347342 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081576662 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087557452 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140771174 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070278005 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077268556 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06762712 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085958231 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068582006 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076816253 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070099634 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076019204 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076333646 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067971406 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075775859 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072208688 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068089674 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070876036 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079159879 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072930531 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06503849 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071271718 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093056237 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0808044 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069327006 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07274629 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077400439 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076106722 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064108146 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070621788 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070550573 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06815608 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079788073 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084641766 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072582605 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079417534 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071393022 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079373438 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066559127 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074469569 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076774529 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080338847 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070575333 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070387352 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064836271 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067996546 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072840816 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065342572 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07039764 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064575428 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077513161 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073961506 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08069892 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068882181 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07146466 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07281505 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073557432 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076769524 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071987066 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072953143 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069569677 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08007924 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075298769 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079133406 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064975038 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063761515 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068556938 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079530734 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093561661 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075954106 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070580042 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071132242 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067628906 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073594031 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070797797 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075263243 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07677492 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069933489 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076059141 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077230035 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070357804 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072292208 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078198565 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068520154 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072965595 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067865749 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086542224 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068870897 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067726119 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067955338 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080087168 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073215016 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06906216 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067376417 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077219565 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063331795 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069186712 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070115379 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070452885 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078782898 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073600964 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073786926 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077474169 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076518188 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069460736 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071911317 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065713447 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070114795 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068118871 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07718185 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062929506 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071593117 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.193459533 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071880418 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079196928 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069468295 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070133063 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078741728 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076707504 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06883088 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067298462 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074016084 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070694553 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073273826 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077979952 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069084665 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064515334 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064931268 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073139989 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069359687 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074544984 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074651997 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073593312 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064768694 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068226736 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076015704 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079531624 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07038117 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071044864 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076681196 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072297059 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06970897 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076225358 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072474511 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068910092 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077235219 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071525134 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06485098 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072732951 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07441118 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068510678 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073993003 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073220895 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072101889 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070703512 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069857485 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076981635 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071271248 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068601556 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07053932 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068768688 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079848155 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0728103 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065385667 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06718295 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078016791 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068441906 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069822881 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069290387 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071803004 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070501035 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067919408 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069407826 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072441144 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080491335 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073622758 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071439055 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075304933 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081452402 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069697451 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071845089 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069334408 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070434027 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070272069 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078617053 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075597472 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074015188 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072742571 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06676042 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075516613 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077513905 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068915659 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067658539 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068873497 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073739577 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076104052 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074204968 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070511996 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068918406 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070607926 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072864652 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072789002 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070368145 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069769986 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075687427 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068001504 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07663894 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070645914 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080668239 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072986531 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064450183 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07207829 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067442522 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076271246 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06460404 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067349298 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068286007 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069709488 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068065155 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071263625 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063181773 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075547523 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076771736 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069453742 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06817185 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068787481 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075552643 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070877149 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072453979 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07328407 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.201061178 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081656819 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070337407 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073835225 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081104373 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071449424 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064498281 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076028994 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069235182 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06857107 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069717562 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068865207 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074068436 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078713441 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076674842 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064359579 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073598582 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069241253 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070269541 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065358702 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074710835 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073160662 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07151638 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077617737 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072071256 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070187231 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073801361 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069069947 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070821002 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071355033 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075093444 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071160961 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072517581 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069604024 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073264277 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069291978 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068068685 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072606873 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070335963 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070163441 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075439646 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069667148 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070067253 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072118971 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070907849 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070685014 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070039607 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069432545 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073868418 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071158881 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070575227 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072515591 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065286815 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07810211 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069347041 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078390953 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070588101 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066515562 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076602585 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071971876 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076480092 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070310469 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070187892 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071665835 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068892272 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072448676 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076997953 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068294099 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080729635 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077445543 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070363131 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073227538 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070077054 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071958493 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069146343 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071174098 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071073122 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070787638 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070004781 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07472747 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072603341 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070324867 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071736471 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071147658 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071090688 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071628769 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064950594 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069202505 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069451333 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072289898 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080451349 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070711583 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069654642 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069498242 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071169093 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06944721 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066833205 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077790537 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078905307 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070578583 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076855219 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068673568 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07115289 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080038096 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063607148 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067868641 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067001342 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067895601 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076902052 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070001983 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078556573 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068932059 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068350736 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065993546 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070671105 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067647315 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063923422 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066668052 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072471496 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068609828 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068496308 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068725913 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.20149147 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071349629 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08087463 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070030867 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071474016 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070888775 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067500635 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070062968 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069799421 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073843965 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071275568 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069323309 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067532556 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070268827 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071997059 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071586298 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070542159 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071647706 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077632922 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070041752 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073257582 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073097652 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06462493 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073424595 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070251612 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070033632 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069229592 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073965174 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073233803 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070438234 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078571247 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070800613 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070997886 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070160618 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067584231 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069562006 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069444341 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069095447 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069183538 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071054477 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077217007 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068001727 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072956997 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069968611 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071124168 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076838455 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07152393 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073024218 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076352879 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070883289 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072131534 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078701881 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073621941 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073905958 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070839067 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071613114 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075265966 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069025347 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076845835 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070615069 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070730651 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07194058 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068915792 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069950869 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071349689 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069524716 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07652732 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071200427 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068701277 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068313111 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067920959 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071250982 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07295106 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077672788 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073209877 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073564294 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064493207 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067250217 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070484156 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068012808 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072243598 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072807723 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075628741 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072841386 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069989892 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069133498 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078869506 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075833943 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073777698 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068385611 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074182981 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070958012 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07246286 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071579906 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070204278 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071702491 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074322057 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071908491 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069601029 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077631279 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074174611 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070419802 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071676267 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070949184 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070255666 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064521216 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069990619 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071407203 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074398438 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071971869 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069614361 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07966888 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067220377 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069298151 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072576573 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067771506 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073284177 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063837608 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070280503 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069804921 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069759122 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06400221 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06829694 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066889603 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071378657 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06800259 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063612946 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079250397 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07815884 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071469118 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06788822 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067473971 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063609701 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063853806 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067927754 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069227309 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070672068 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079136977 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067951566 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067981116 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063624537 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068884871 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071802531 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07205055 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065966173 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063577525 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067986695 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072300507 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074824103 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067479779 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068378272 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071997436 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070869648 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066350988 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071780508 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065535832 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072430846 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081512353 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068732467 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069576712 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075348344 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076192059 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06912883 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064036181 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068565519 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071673283 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068345884 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068036955 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069111539 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08163701 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070209287 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067190996 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067183598 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070547234 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067096526 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074963879 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069446137 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068903504 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072276746 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069957232 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07431197 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070902057 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074380853 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070485415 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071066668 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066913853 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068411491 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066141616 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066941198 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068747922 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068172659 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071229014 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074559576 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067212511 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077712594 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076798357 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070068249 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064892979 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067702578 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067385975 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062714264 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068117368 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066211272 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065871212 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066136251 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067765114 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070579439 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072389561 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068802101 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067944692 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068182084 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062726894 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071340447 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069980852 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068984548 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064707221 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067954129 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068356895 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072480575 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070913353 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065555718 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069727231 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069615718 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069671773 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063163071 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074412899 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067814508 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069443136 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067218842 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068570028 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068002881 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071638543 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071399429 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07030771 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069787412 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071555162 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069065004 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06536182 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065706687 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073338473 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065342692 seconds)
  done (took 44.34798947 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113460804 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0686562 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067646838 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068483704 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079642033 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069186855 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068300717 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069130454 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069120641 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071340131 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067554222 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067868591 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075839141 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082955855 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07908777 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072041892 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067834998 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068841841 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067360474 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06844033 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076181558 seconds)
  done (took 3.031497964 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079576017 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084569812 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08083185 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088593267 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076227478 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075889892 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080612709 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076251697 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083994566 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077570367 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083504092 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075639494 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077871744 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07742852 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077495285 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076190732 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085689373 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075646454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.075668499 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080205599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075582914 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080026913 seconds)
  done (took 3.087974202 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07310331 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072193758 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073750964 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065769677 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071652686 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066269659 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074091584 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068850199 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073618801 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069608318 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069938613 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070219233 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073026641 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065372132 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070362703 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068419741 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112664951 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.0738769 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070627274 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.0713999 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065952958 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072314293 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065745447 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066080443 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069303728 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073776721 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071139411 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069389465 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070211997 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069631294 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070736979 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068174103 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072231371 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071001412 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069349436 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069604199 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07092611 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070410646 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06542289 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068375676 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070904223 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066497163 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071377802 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072424971 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068611029 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068897362 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072081178 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070647495 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066784706 seconds)
  done (took 4.818444503 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082839943 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115713466 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070957339 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093849947 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084016544 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076459427 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074092299 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095677695 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067115962 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068089509 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085105411 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082896577 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06978672 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074297121 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076831613 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069632834 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070711315 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068657159 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073388231 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069246849 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073463937 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076553717 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08413062 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082534982 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073557446 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068486413 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069392702 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074103641 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081892541 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07384317 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074680499 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074974514 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084441492 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074913234 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069675948 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072222848 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085922765 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069787944 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072385955 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067618855 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072099064 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074747145 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077261712 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085948355 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069770993 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074581152 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069664659 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067169422 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081444397 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072095611 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077595551 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083475405 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073154227 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069830832 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07397359 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084437045 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069263026 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067829616 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072963785 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081115039 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067564924 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073595815 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082813538 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071323024 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076439786 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082567896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074805248 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073777165 seconds)
  done (took 6.667678513 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080312828 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100574774 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088020673 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087157089 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079326348 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079521149 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079837327 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080284413 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07954566 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083942075 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079630696 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.12111374 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074998033 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081899047 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080078818 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080258391 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079577732 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080177183 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079873177 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079755379 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079697135 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087335373 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08024209 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086927241 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091733776 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075401753 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079594335 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079799723 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086811559 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079788412 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083287283 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079526087 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080183313 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087735604 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083536419 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079430026 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069380587 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079362738 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079562672 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079994034 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076003552 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086990144 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079701642 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075313447 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079880493 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079282456 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08755586 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083670008 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081986348 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084717962 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079682519 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087441622 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079851129 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079624796 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086743229 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089584831 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086699819 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087110052 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079505331 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086692211 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086679054 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089747454 seconds)
  done (took 6.509601916 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086984141 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077744242 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086049618 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06506383 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068048598 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075958708 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0679454 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068130197 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077955169 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077621454 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080231529 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07567484 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078029416 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080521454 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075342502 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078512508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076042997 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075341422 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077578093 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076428417 seconds)
  done (took 2.894523027 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078906855 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087905915 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071007381 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076356245 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073765078 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075505061 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072720129 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073032669 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071773817 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07323521 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0799193 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080468009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071382716 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075184443 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080203835 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074943375 seconds)
  done (took 2.579662629 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088708986 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07719252 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084338147 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070988824 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071194834 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066397472 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06958668 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065207038 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066093917 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082043868 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069675372 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080987338 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069689892 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068811118 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066058233 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075065479 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066374817 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066965482 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069550477 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082666808 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073702566 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068350192 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073434413 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069849574 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072267297 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074470177 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068812704 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070027745 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067362048 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070384941 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072990393 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072787501 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066638779 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067825061 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069181471 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066780446 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069976721 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070805306 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075467418 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070059373 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068017144 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071441767 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069584623 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070520093 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065729678 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070287568 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065710978 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071888167 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067138462 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07225266 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069918917 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072383125 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070162485 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076568636 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072505382 seconds)
  done (took 5.286970413 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084627334 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073304532 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065498371 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067799803 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073675163 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070927047 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072891198 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07089192 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071210759 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067764017 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070891969 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072455634 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071349675 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073533404 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070950023 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073570192 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065549926 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071000036 seconds)
  done (took 2.664535462 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075982953 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070126601 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078026324 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069541242 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07029804 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071934687 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065597238 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068284479 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068401556 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069559752 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06956222 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072120279 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070272437 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071839901 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069678328 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069295396 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072041207 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068652879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069570498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06605472 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071976516 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06808786 seconds)
  done (took 2.916945445 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098113629 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086267263 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145289752 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08232613 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089063736 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075562931 seconds)
  done (took 1.948074938 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096088176 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105003812 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070529917 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073932767 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080129699 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07393515 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073820701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073958482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081703591 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079389622 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073832759 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082041859 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081998935 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081294306 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079680779 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081364615 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073840284 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073919639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070185764 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087481456 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074179736 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082493236 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073707389 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073497785 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073780536 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081060282 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082081611 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079446583 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073484161 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082269367 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0802857 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073448885 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0824795 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080052875 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072841082 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08208123 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073777775 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087303322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079875251 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081611962 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073406322 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079660394 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08246461 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078132828 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082406674 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073935256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078821218 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07382277 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076061503 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089572532 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079862409 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081651076 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079759501 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082293101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082098028 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089170287 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079964604 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081433547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079762723 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079540032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081783157 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079753665 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081151025 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079625998 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079471689 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081590702 seconds)
  done (took 6.62532797 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109179203 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071496652 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074097874 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079772298 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080961372 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073751969 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074088202 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073872788 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073562732 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070970714 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112795618 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074149105 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081530584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081625051 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074856987 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073715552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074413328 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081266782 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07068427 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088939569 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073698892 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080955413 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081348178 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080949883 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080070457 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079832894 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074183285 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074716264 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073635864 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073777906 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07834536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074124295 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081649303 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070601957 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080838987 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074128931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073997953 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078037003 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073790876 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079374446 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081225213 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087650785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073691766 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073579587 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079738336 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073747807 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074448555 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070313843 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073768572 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071327183 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079146609 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079708364 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079207447 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081631724 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073863806 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07415409 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074057447 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073737597 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073696541 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079562651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081947872 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073757592 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089246349 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074212452 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074080649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081615026 seconds)
  done (took 6.526495495 seconds)
done (took 134.562932215 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.19191985 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17249764 seconds)
  done (took 1.733352343 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072420701 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102984194 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081745069 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132424735 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070377217 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103770014 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102879821 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082075844 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07042396 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069780067 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06982646 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071939237 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134349726 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069998003 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069732256 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072834087 seconds)
  done (took 2.757341537 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104222957 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169368938 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10734258 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069159203 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103570042 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076064921 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068425253 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078702916 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075068667 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069449166 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.0762257 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074178871 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069086232 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07386733 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07479832 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075905168 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068969303 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07673036 seconds)
  done (took 2.894058574 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102255902 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094590168 seconds)
  done (took 1.577851814 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164206501 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138981631 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209515557 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.359224809 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164784793 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154114923 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.150581648 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.149022627 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.127069532 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142917004 seconds)
  done (took 3.136533858 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104454324 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159875206 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278165743 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123414262 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077117227 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097040567 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124082303 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081666466 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084685443 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084032328 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084156066 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080246873 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104785249 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077009492 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078041192 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080140885 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10840884 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077452105 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078865833 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079239803 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105213655 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069614055 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076310575 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077140618 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081358035 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080932484 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069826575 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069583532 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079525333 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079121572 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07992883 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096344142 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081143116 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110645032 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075514783 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111565376 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081112952 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077203631 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07950203 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077409923 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08212597 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081652184 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078044322 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08050904 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069827855 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080772699 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070082938 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069716237 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081592573 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071506084 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08146028 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080748324 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110721433 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071569256 seconds)
  done (took 6.237975796 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109641039 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11247129 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074596534 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120011059 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109329065 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075565867 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109230481 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102626307 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111454111 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073804184 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071931333 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074208268 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086404566 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086620895 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121013757 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113536085 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077802521 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075421086 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112399272 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111751664 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072732556 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103760729 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098440023 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110489381 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071027277 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074551531 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07234747 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074293998 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080338384 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082163869 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074240458 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084687807 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088378374 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08205225 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071376602 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071926623 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072026638 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082860261 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083636496 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082765027 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081332083 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072058649 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072381682 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073871864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074422302 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072375913 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082620725 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083662527 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082813597 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073209017 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074454871 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074352202 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073858622 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0864175 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081197428 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08434949 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083951812 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073466032 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072124249 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07631925 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084284431 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0828355 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084253199 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073141228 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08306131 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072817148 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083841964 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087764202 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072385083 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073878359 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07254648 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073612093 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073403467 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081819192 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082211277 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073487696 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073675594 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073484613 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083027474 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082371465 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072949404 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08136762 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071103594 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072399582 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073982904 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074107623 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081840886 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08404082 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073727265 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072530286 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072873606 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072205407 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070685046 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079778119 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083239107 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082433779 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08202344 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073527748 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082771949 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08225271 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073495673 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083563933 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.201177027 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07523338 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075252022 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083145661 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082125199 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084884326 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073979597 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072424057 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.083575657 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085144255 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072633678 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082902629 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084632811 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083562673 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072906788 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08531261 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073597241 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08332898 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074128888 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084712253 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072954146 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083525361 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072913855 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072496092 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072696768 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083859869 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074454305 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072344293 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073882062 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074273421 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.0857746 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08599984 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075864059 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082712766 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083324812 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074739373 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083162644 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072924936 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083043123 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073602626 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073632461 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070750733 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084954125 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073166465 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07211514 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073196598 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084000119 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073172675 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0839072 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081941568 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072032961 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085308935 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084440118 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080970545 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083487519 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074388041 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072602657 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072488789 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073374404 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081737452 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083741292 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074111794 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07221206 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081697114 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083177233 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070530577 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082485959 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082346881 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082898228 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072100798 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073561445 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084199563 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084149849 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081919355 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081810461 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082392893 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072832459 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0812722 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081651639 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07211995 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087830979 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072634623 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086934493 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083181479 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081384659 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082783327 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084849936 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084756176 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084480263 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087119495 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072145841 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072140372 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082919024 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071926881 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072949571 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081957065 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07324269 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073279624 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086386195 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072793229 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082892124 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071456871 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082909239 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071210114 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074001215 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.218263952 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073648311 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074127491 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085218782 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074980096 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082188482 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086049499 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082604684 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072409251 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073876621 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083127078 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08330586 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071949028 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07223287 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074827708 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082225284 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081305025 seconds)
  done (took 19.636545512 seconds)
done (took 39.365479771 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21577463 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157538912 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178505761 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122236915 seconds)
  done (took 2.159381099 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119919672 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106014033 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09652846 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069036383 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103740695 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069588011 seconds)
  done (took 1.979661558 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315244685 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215511568 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.194435508 seconds)
  done (took 2.140414694 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215080658 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.198203229 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457481967 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280664174 seconds)
  done (took 2.679349642 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.15537604 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092758426 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071271507 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088546254 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137636123 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16435513 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103977238 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.133784214 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082859057 seconds)
  done (took 2.499369764 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153330977 seconds)
done (took 13.02677133 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.223186462 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.216631684 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.134031936 seconds)
    (4/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.158082352 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098509214 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105823176 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153251198 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105359168 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076310387 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087147565 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.23390259 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083010445 seconds)
    (13/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.078381468 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078145702 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108173843 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.184346165 seconds)
    (17/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.152316687 seconds)
    (18/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085758816 seconds)
    (19/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.15389623 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078108555 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117129427 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.207925073 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.153016363 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082007111 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.170876298 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093809638 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.206431299 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.1951566 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.191541129 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055408357 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117232548 seconds)
    (32/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093899401 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092698432 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093332371 seconds)
    (35/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.221376013 seconds)
    (36/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.074983574 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.190684463 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161011413 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.183733452 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075783589 seconds)
    (41/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.106000136 seconds)
    (42/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078265701 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076480189 seconds)
    (44/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084068826 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089439973 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073445777 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07771739 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069281246 seconds)
    (49/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077582913 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080090202 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.18904269 seconds)
    (52/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101486007 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077743451 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.222491883 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.10604298 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.094497795 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077340205 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076803307 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144015241 seconds)
    (60/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07914106 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117563371 seconds)
    (62/309) benchmarking ("sort", Int8, false)...
    done (took 0.362820733 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182136152 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076327721 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071224594 seconds)
    (66/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087507757 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068907565 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096616305 seconds)
    (69/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160985145 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076768313 seconds)
    (71/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073544932 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053929906 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.146890302 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053621292 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091225624 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.210550889 seconds)
    (77/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053747478 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.06987521 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093624057 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099228319 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.204177804 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066356568 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083164429 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.22406062 seconds)
    (85/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.222108854 seconds)
    (86/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085441585 seconds)
    (87/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081336177 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.077881076 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.155365291 seconds)
    (90/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076666782 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093306082 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06871837 seconds)
    (93/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081058689 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058156742 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080579298 seconds)
    (96/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119068509 seconds)
    (97/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17828389 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094242654 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079431539 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076859005 seconds)
    (101/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.121275739 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055920473 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.17133189 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.187451426 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070701634 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09941449 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07777267 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070143591 seconds)
    (109/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.077732244 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186585475 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067896296 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.167378583 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094729698 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151528876 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.191425916 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054520573 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072732506 seconds)
    (118/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067520596 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.212983492 seconds)
    (120/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056267588 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097982357 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156831846 seconds)
    (123/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054127295 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0551422 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055270175 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.200296512 seconds)
    (127/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084195305 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.144547475 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077761285 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077089795 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076756674 seconds)
    (132/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.120599127 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101511872 seconds)
    (134/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081631205 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07534364 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075819334 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055358138 seconds)
    (138/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077690649 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115663721 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074975905 seconds)
    (141/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084636517 seconds)
    (142/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08298807 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075826199 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068435548 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098522624 seconds)
    (146/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085803543 seconds)
    (147/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079399142 seconds)
    (148/309) benchmarking ("sort", BigInt, false)...
    done (took 0.200529197 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144459917 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053717627 seconds)
    (151/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.115225697 seconds)
    (152/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.106714371 seconds)
    (153/309) benchmarking ("sort", Float64, false)...
    done (took 0.135979675 seconds)
    (154/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080064145 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075034182 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068968429 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077294626 seconds)
    (158/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.188682957 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102617436 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077852808 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077458654 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11793839 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163017689 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121774627 seconds)
    (165/309) benchmarking ("sort", Float32, false)...
    done (took 0.137488187 seconds)
    (166/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.119010141 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054251594 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067647483 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07328153 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075359099 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066960043 seconds)
    (172/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078547443 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069225722 seconds)
    (174/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055197072 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07028908 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096446618 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068814021 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093952122 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095520561 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05423449 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068467486 seconds)
    (182/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.118076924 seconds)
    (183/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093421696 seconds)
    (184/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.115858099 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053869616 seconds)
    (186/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07735881 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075659334 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056238132 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136071894 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077900673 seconds)
    (191/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075967309 seconds)
    (192/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077314214 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069950745 seconds)
    (194/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054734874 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064521847 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093667245 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09114519 seconds)
    (198/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055139076 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142429814 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094766286 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070191503 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071108327 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096879322 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.198963305 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066448229 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117892911 seconds)
    (207/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068054769 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068683393 seconds)
    (209/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053400154 seconds)
    (210/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052952368 seconds)
    (211/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054167935 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076014491 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069621176 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131640965 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068221254 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067249055 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076723224 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075042851 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067068485 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056660934 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053330032 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05476949 seconds)
    (223/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055507584 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090509625 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054624745 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078431822 seconds)
    (227/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08176229 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073230517 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069934751 seconds)
    (230/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054019804 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.183754917 seconds)
    (232/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065978363 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186791222 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066147975 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141083144 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091537325 seconds)
    (237/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067817288 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184309371 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143218342 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053189503 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054787645 seconds)
    (242/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123234165 seconds)
    (243/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091967895 seconds)
    (244/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05459933 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06871876 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175679047 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068019845 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067463302 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089018397 seconds)
    (250/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054382186 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068014138 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074543033 seconds)
    (253/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077888352 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150269821 seconds)
    (255/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068992545 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066877714 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068064146 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068254635 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071895713 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067287093 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.117071098 seconds)
    (262/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053447532 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053063275 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133313958 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074834298 seconds)
    (266/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074773879 seconds)
    (267/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069268891 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068188061 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076378553 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187334914 seconds)
    (271/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053440537 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068693037 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069663073 seconds)
    (274/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05283567 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054440716 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067957309 seconds)
    (277/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053541509 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056114767 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067403176 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052986236 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053360437 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053214971 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070341321 seconds)
    (284/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053587883 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075653515 seconds)
    (286/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072028424 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066152775 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066102147 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053270803 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075687218 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067870441 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075412485 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053286278 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05305996 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074069017 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093351087 seconds)
    (297/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066193018 seconds)
    (298/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067263124 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150768007 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074214768 seconds)
    (301/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.067082312 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053145403 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054460938 seconds)
    (304/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053528495 seconds)
    (305/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155719226 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06952884 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052947228 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18798212 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073256182 seconds)
  done (took 32.068080956 seconds)
done (took 33.494853348 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095893705 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097343395 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080444071 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098436234 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08631368 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081746847 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078377687 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.085238226 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085971809 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087905187 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082844307 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.059822946 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080380601 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080327533 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080676803 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096650495 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084880233 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078584166 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078356822 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069474127 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078489324 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071066407 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072781579 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058778706 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084004864 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077302184 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077154621 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079564829 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07047572 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070588743 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073942796 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078759577 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069650123 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083385791 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077230833 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078214341 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080171696 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082079741 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071912372 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069982665 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079997459 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070284059 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07809991 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079182947 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076631899 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076137583 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07815317 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082091176 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096022689 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071562171 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07941292 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080951079 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079915654 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077383297 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073942898 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077945361 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076929476 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095139699 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078080695 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072344595 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07829993 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078937407 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074853629 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07714782 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077109762 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079592521 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079999405 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075295571 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078838998 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076314404 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069777713 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077309758 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073694781 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06890433 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080185304 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081815457 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068470773 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075652171 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077497995 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075119283 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068782147 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070969924 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073316144 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076586475 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071416323 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057860969 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073418369 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076068331 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068392776 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077111896 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076097171 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076245636 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070851606 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080710195 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068626241 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074769636 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069394748 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.07028052 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.07052181 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073313431 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069578052 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070904004 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078944015 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071232129 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076214061 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083086803 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068871967 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07601299 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06796661 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068313156 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083224045 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079186999 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069455427 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071779664 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067943694 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076319169 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068189749 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.0684735 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068697945 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068888704 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074965256 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068911579 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070835774 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075909297 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082420653 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068466774 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073076693 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070323842 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068794992 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07517025 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.201262913 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069973344 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071270683 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066579802 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071240156 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06950728 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076647554 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070992512 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077589278 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070274462 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077480732 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074684018 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075388409 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074910487 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068134783 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062026332 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071577218 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070469931 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070857595 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069879418 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070704881 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068882698 seconds)
done (took 13.321053047 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069781606 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144875468 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100068875 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099183285 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08892219 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070040068 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079059273 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103218273 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071785656 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104728491 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091713124 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090458949 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118126812 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068211774 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069327906 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073697141 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071195282 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084301095 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102969005 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091264032 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118490792 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068379294 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096329939 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092832368 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091911671 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097402179 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070369248 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07377783 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073088307 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105908223 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092134785 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073813281 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070237466 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103193424 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097995017 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087336357 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069885598 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087579047 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070092622 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068979515 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071166623 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102910671 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084423195 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084797536 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074017437 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.079950782 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071273597 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087768102 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093849945 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082868414 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089343892 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105390366 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072580863 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087784192 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0676727 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089819501 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080328511 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072154426 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070315483 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077909048 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069455291 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07323149 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084356499 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083999924 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073605638 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089395408 seconds)
  done (took 7.151805225 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087948998 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095926927 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087418659 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087522225 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069796307 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069847206 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069486829 seconds)
  done (took 2.12293663 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070791738 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092376429 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092676033 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093307461 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086441194 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092178832 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079914031 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069996565 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092130249 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071258838 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091956531 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105029294 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073533139 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077558076 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09525631 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069783454 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095095394 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069696476 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073301828 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095138847 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072325873 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100264386 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073435056 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070191931 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084630264 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070106319 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11844804 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074546323 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071736811 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072898387 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068354156 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11125227 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084671148 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077893604 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069790446 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086292663 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085247199 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068238901 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087002412 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078965788 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084566662 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071487538 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071143 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068185934 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075014854 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080493191 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071224564 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071473975 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072721536 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090405311 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070686895 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084804899 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072914109 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075876503 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071695011 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076505159 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081116345 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070871835 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090678013 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071538081 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08724451 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086720257 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083960615 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086547054 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07210775 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083741536 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084224766 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072598727 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071557643 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073754737 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086097667 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068337523 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071746571 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081232305 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072081834 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093923402 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093649818 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072790028 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084613839 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070562705 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070421547 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070648679 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093863683 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075947326 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070449359 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074456768 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07357952 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068440996 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069471915 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074006999 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068093355 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071848737 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0732295 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073414351 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072975468 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08752224 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072886544 seconds)
  done (took 9.240635127 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072106888 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071703562 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072815372 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071272209 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071337864 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071358597 seconds)
  done (took 2.010267448 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096165222 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072643758 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084390061 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074742003 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10914133 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090288564 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091262197 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081565208 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087601461 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08204901 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090287069 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091881811 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096420239 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075895462 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090630955 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074738368 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091177613 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077813072 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081651326 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07597651 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08940798 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075602362 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075900124 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08503864 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079375854 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07479421 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081561726 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082030525 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081857412 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081707139 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075720084 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079211705 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073768655 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081186336 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090924397 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073717833 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07500557 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080484012 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075280762 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079283061 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091683851 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076183613 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078166957 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080779398 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081830664 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074024799 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081112314 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083737358 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090469663 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080337189 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08117204 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074295828 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078954455 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080582731 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074281241 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080876311 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080628112 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090799145 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075536585 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073831962 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073082175 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079015979 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081073788 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079566984 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084083018 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080516211 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073868028 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075544001 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076545185 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075236841 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080508356 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071972178 seconds)
  done (took 7.407170741 seconds)
done (took 29.479261964 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538417836 seconds)
  done (took 2.087104617 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.629924354 seconds)
  done (took 2.201288794 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.570843396 seconds)
  done (took 8.140207757 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401409378 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.508784494 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.752223857 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138528645 seconds)
  done (took 3.411696065 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.729815908 seconds)
  done (took 2.309760925 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231387723 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.218905169 seconds)
  done (took 2.039405722 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.384957153 seconds)
  done (took 1.9568528 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.155817435 seconds)
  done (took 2.730685675 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265203213 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183168267 seconds)
  done (took 2.027228671 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.490173344 seconds)
  done (took 2.067942066 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.879140333 seconds)
  done (took 6.457753296 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219978833 seconds)
  done (took 1.845940357 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245670023 seconds)
  done (took 1.82347444 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.774498544 seconds)
  done (took 3.355027902 seconds)
done (took 44.030544851 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086319122 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08878832 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088361486 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085107622 seconds)
  done (took 1.916277111 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080141904 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076818138 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07979288 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075983852 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080347163 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076098564 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078112797 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078363891 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075602982 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076031864 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.0759339 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076058192 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077840139 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077562337 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074829108 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078596914 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079482742 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076219568 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079019822 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075546179 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073910699 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078290573 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07876065 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075385816 seconds)
  done (took 3.437664524 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081350389 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077223 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078000082 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074820804 seconds)
  done (took 1.899380718 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081641581 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096496514 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092564884 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081278138 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096146069 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090110224 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072622798 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072207322 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073902857 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081127939 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071394078 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099915669 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092570995 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080390489 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083335008 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069677869 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071246664 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091353721 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081918124 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08194234 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073673854 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08139347 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071592712 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092338808 seconds)
  done (took 3.566583772 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089223329 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.108548383 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084754826 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09222443 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094545018 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069640906 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09089895 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094586088 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129828358 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068902878 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074261917 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068686325 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077424865 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068403041 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084427643 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111912333 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115718997 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072339525 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101064278 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069437257 seconds)
  done (took 3.360560068 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075792756 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072094914 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071258715 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068897031 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081137319 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076216796 seconds)
  done (took 2.042641879 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071621956 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070704457 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071197615 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069605502 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075457438 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070352413 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070682192 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071121389 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071663046 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070221772 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069932051 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068878338 seconds)
  done (took 2.443176659 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205579119 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070905296 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071646581 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069460996 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074129886 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069648246 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084564634 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070898049 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096009787 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06961341 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069968578 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072040232 seconds)
  done (took 2.617743575 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211431487 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079456012 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242431857 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155027026 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114193307 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119417108 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117154998 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117173625 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145863686 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10394466 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17097889 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171024909 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111512275 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140937554 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092773029 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102462164 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158465464 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167421111 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110130505 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169236843 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151744492 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130647235 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150743616 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105713933 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109613248 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125849698 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075008506 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083802103 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174338559 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136972063 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149091943 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115787722 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095871766 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180105711 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175675095 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148804367 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152688068 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089007343 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105520237 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.137265558 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204084526 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092734524 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1678448 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250564882 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085832205 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136759509 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121912042 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.1233325 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108500142 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093529707 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149147764 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188690652 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141511715 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090820076 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127666188 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117255483 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117526783 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117398245 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186255358 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166815197 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132157363 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074928741 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113094483 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157223929 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135926351 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112096237 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128660938 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094401494 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138084213 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157605871 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126841562 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147438922 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.120337259 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092423789 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122211225 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142893996 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130551623 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164129199 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127710593 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076089437 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127240232 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104611763 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083908612 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152016075 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079107297 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179031056 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103162467 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109765008 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129526064 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112961105 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113214971 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163049148 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148047438 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246180104 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069299387 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108884402 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12317696 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150583909 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090306663 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112432156 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119758438 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.0806531 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14076278 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078758169 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126357044 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077561443 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126942131 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1317521 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080808159 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125557473 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107975515 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103507798 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135662927 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16235642 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09191843 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085795317 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171074459 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125189385 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107687275 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147808456 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159687948 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101923101 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105249893 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15486565 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182630071 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092876417 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165175315 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110670842 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086522108 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091096567 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126065222 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11572832 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.128084233 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084579263 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12138128 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170962003 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078297979 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098929494 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136903973 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08214137 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084038778 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109707183 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108652707 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099035743 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103203153 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105740302 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140097268 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126786165 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108462697 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127065845 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243885479 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175795338 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091263697 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104753952 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107874857 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073031937 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137876424 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159303865 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082896629 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166419622 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125290508 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121729367 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120884949 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086874241 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142559139 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083540273 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073431512 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15008961 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113085749 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113069218 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153123502 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119856878 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130073091 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124147143 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137105593 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134204546 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132000586 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109090553 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090898842 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114348848 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130739731 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076635144 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093627108 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083007564 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107937175 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099576061 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086189896 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144390164 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126978631 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113086139 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114641811 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10024606 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149698401 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079321995 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132327511 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122040784 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099216299 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155630735 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157024254 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134676477 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102351683 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140851213 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073369819 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077061854 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09115068 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267446834 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08646487 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088385532 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120169014 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150372172 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132561201 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139882314 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127078244 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12387028 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158190157 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073479137 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123036588 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149758621 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124505996 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107354992 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094202078 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101851735 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145073052 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110200687 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186349348 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116191764 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125246131 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155686757 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104762341 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083062668 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106040124 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138213173 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107271214 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146429552 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102279319 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091218384 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111568536 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078057576 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102080085 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130358899 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12142631 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13692952 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118437579 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135741363 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081035722 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118528921 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124518318 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125148477 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06732949 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123892943 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164523344 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098051302 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120687695 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155597637 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082339458 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.1385502 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17807378 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290938264 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089349173 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112392123 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122259975 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132510974 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123363506 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1431586 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111282849 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13928279 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112728839 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089468794 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090752637 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101066985 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108398769 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098424727 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108458822 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118369109 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099043645 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135586579 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10711928 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113495718 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119290871 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10263287 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094293656 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101280992 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180015083 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12215694 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174388643 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102466529 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14640642 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166863844 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077495013 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08191076 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081393611 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142921858 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087747569 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133268674 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111663791 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121035699 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126291216 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14516264 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098864018 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071443743 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113867881 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136959498 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129248249 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102095065 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107167885 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16672245 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103647346 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08331981 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116799139 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11960037 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106767543 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1737798 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064937877 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108877408 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219807233 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085473519 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131139729 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156901992 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083549704 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106179205 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121831984 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116461389 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12993528 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103991575 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112863789 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130854431 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153879179 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130571843 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093197918 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115768541 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13092289 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159203001 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108246733 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101410118 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175491768 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153990445 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162065884 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091412367 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115264742 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116138656 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110768601 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140044852 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086473312 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165534183 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084937831 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139861556 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106773962 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092058539 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132234801 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111594224 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0917967 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150395166 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120577426 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086472411 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080664246 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121463468 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12338863 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109319295 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078982212 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142466634 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076387673 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134993656 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162718374 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083711487 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109179696 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098632236 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083424406 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251716439 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105151156 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091051209 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101855226 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174061552 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09011306 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15147688 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137287943 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116175329 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137760219 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105068861 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642870741 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080966139 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154506226 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120112161 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177543796 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104686302 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119948072 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111165134 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12587576 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149771259 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10697848 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.186259834 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135312503 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118655445 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082692561 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104856435 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107763265 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091286218 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109823663 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115966403 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117652047 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095456559 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118679975 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126993267 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085525799 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098996917 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15851022 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120030415 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147774545 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14531657 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088995553 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120514056 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140649388 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083369233 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124056836 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156086593 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10959399 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103334536 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083913547 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103270295 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305177963 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077407247 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163828599 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124531804 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111629208 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115078952 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115098568 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134103117 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111387337 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123948791 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095743085 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111889119 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117229714 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084840168 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080529205 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110724911 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116040018 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100594809 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100277621 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.101232951 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153482173 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074971459 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101890783 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118145181 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146345074 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179712867 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091472851 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085822137 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121175035 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11799231 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115887162 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124219479 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082339614 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085014611 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082430084 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08126509 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111880305 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11548935 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117848671 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113311106 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166440903 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08690536 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.240980873 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099079292 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107883207 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07303816 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081687629 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099560688 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102354444 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110982161 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11378978 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162862803 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09843885 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093480549 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09426271 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077016545 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086148417 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130659318 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112764662 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121199448 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103868148 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065794519 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11062285 seconds)
  done (took 60.545570056 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111667406 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086040785 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099663343 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147430275 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126174516 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204446601 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155703201 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192840232 seconds)
  done (took 2.83515818 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070922938 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098529815 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105784529 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087554833 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069599881 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071976018 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234020447 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085168442 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070273713 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099932095 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082584963 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071997398 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.437553595 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069178332 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070988751 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065081096 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069914031 seconds)
  done (took 3.543695662 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.406369762 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.623042236 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358599656 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078930436 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.882153402 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094193632 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.124407606 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138276413 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080860894 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538323186 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.40886722 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130950432 seconds)
  done (took 18.557339703 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083533722 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076656454 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09177519 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094872691 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080398682 seconds)
  done (took 2.118299553 seconds)
done (took 110.500672177 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08381346 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.61473275 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055638949 seconds)
  done (took 2.388454023 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085784512 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088152249 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088043975 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085737405 seconds)
  done (took 2.044457382 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077582495 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079790286 seconds)
  done (took 1.849038925 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238064605 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169317259 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099197412 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086404638 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082869664 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083023575 seconds)
  done (took 1.948751225 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075514485 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078379103 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075611063 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079200709 seconds)
  done (took 1.999843787 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079624556 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054719545 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057430412 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06168877 seconds)
  done (took 1.945476818 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089617171 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082325607 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081547691 seconds)
  done (took 1.946360372 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104674478 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090343856 seconds)
  done (took 1.887459385 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085293066 seconds)
  done (took 1.777489607 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098562232 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104694453 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135411662 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114672733 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142616489 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112389804 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087792798 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089026387 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079749672 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090004662 seconds)
  done (took 2.746395333 seconds)
done (took 22.811427428 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0822492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370536824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36337081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093267004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670743448 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360403039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.973101747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096651706 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11905874 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070175883 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087361488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650799224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.962986657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323568704 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.952153764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328255184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651112363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07133463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070822977 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071032369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957650782 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070717608 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070344625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071337399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650665272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376190256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071290187 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327261058 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070590196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072897952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357816758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071751806 seconds)
  done (took 16.217203018 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073459538 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124541787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076052031 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087472648 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073073685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072367779 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074154316 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07278056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139141531 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070488994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08849706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070408658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074721406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071331758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090468233 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070919907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072022647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072205135 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071211169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071502587 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090235594 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070487919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071785219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071565565 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071662941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083379391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072394761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071765189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071644807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073099895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074430226 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07253795 seconds)
  done (took 4.216004275 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117672855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128103003 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076342566 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107390811 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114031846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07274629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146919075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097379255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130638846 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070394267 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08834513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071046397 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105797752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071609218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091406401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07146926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07174958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071400087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07150186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071478895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091243849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071037354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071495695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071873492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07222523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085155171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071694774 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072103273 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071253879 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0730515 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075055094 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071621286 seconds)
  done (took 4.450444135 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076003601 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078888119 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086457009 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088124544 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072510598 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074658763 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076334634 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072515255 seconds)
  done (took 2.335591694 seconds)
done (took 28.916428451 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082521932 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072788938 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075657753 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.0852407 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076450005 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08110847 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069591189 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079385984 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075950573 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07607517 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078220656 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07007616 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074336338 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06948605 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076951959 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070648639 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082675198 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074986122 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081849074 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083014372 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073460556 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076654585 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078102256 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082049072 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082119348 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082401151 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081041976 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076210833 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071901557 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073774932 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080834624 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087647652 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071391361 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082552761 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07098702 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070553391 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075405475 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070880986 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082410081 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079606886 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073082419 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079214413 seconds)
  done (took 4.929265195 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091628733 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096687964 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088124549 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064679358 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069326848 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06898631 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092599225 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062954727 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062869047 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091725038 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058477037 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062560723 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066196268 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056451781 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063465568 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059481594 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065039492 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058266845 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063082257 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062798662 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092670211 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056492929 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080705211 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066537882 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058994036 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064871393 seconds)
  done (took 3.543139428 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077295717 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087731454 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094480063 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134472677 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108723822 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082236483 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082263714 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099056373 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091994151 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069494603 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073866382 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096474952 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094687742 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077763497 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070459439 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08980975 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087631662 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072559767 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076309481 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097763122 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090913438 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089491368 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098768983 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086743066 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069752947 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072505749 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074161 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084750408 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073917565 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079693634 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07365926 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074412361 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072468416 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082422661 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073891682 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072316368 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09864825 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082137212 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082902896 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071378282 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078994482 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072242682 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096867974 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130687863 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070417193 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077315621 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.085403195 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08110606 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070035963 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092050289 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082178961 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070064681 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073635234 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069881298 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070436323 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073768138 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072374301 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072998545 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079709499 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076792279 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095418583 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076076983 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087937049 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070359357 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079183155 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069723316 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071608806 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070511835 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099703606 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072122697 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114860954 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071172858 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071628945 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080498137 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07905561 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077506078 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070356069 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08683614 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08247797 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073888953 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079264174 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073888143 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073381026 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094538292 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073516239 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072471848 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071601905 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076536518 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073436923 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071883109 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084942183 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070383611 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073363895 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087335317 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07035116 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071794246 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076987213 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075410111 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070464212 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081795939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074962575 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072038726 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080802091 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070726463 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073726977 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083640237 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077602537 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070108438 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075768276 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076504999 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071939379 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072404191 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073553906 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072525702 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079709903 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077367968 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074826374 seconds)
  done (took 11.090038959 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169012936 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161803643 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073062459 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153161692 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080175678 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083056345 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155526557 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097953125 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070767728 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071989373 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072576796 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113833703 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110149922 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119706769 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082375565 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071044933 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088256355 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118557296 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15719384 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.15098557 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088087728 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080809862 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072791456 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072189161 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073613545 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081760545 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088769593 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.08191515 seconds)
  done (took 4.588291646 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08291211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10888587 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077516307 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094908575 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094717599 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071002308 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073102681 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072546562 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085212869 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081521967 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070740243 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076459202 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077708457 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074189944 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071693738 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078131587 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078152438 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072827568 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074221405 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076440839 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082224806 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095484372 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074741891 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070413066 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07590102 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070164403 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066470636 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087390288 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071593431 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098898409 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069296789 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076623156 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085978328 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072685627 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07090594 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070936079 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071125718 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071162789 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072653327 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069651563 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069959452 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060402849 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070353801 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082608588 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078365113 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059259092 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075586555 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077093824 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076715474 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068360778 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073742567 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073958265 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074309989 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078917864 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075564744 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076260249 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071984827 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.077608805 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080626337 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071220246 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067931576 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069075661 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075687707 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068425867 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080025768 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075852582 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070006875 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07070601 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073306311 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077806182 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070894203 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075765649 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068238898 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073384821 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07612624 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073275964 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072184198 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069250304 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070797007 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071220085 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058034168 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071564096 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055970058 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074170648 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069172936 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069481287 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070753672 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076672404 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082700755 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071907883 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076891925 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071815216 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070121953 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074530031 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063133748 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073663989 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082634944 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085700593 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071010159 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069124102 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084936137 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076525376 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069859442 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058976928 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076108887 seconds)
  done (took 9.587526937 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093989888 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073749823 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087412103 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093678678 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091312303 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078662574 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081884597 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072570605 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086564304 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077293761 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081090485 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070682255 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081260292 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080509358 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073283876 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080814052 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075075186 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088071723 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086282627 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071121421 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079491997 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083691439 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094479605 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08514659 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083929666 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086177781 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09506852 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080993928 seconds)
  done (took 4.071964801 seconds)
done (took 39.514115566 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.806150299 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.959793031 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.789189106 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.098422896 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.907076273 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.8085872 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.997488002 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.790801153 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.870156397 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.826656282 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.024615759 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.010580367 seconds)
done (took 65.615243482 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.801021449 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.93315139 seconds)
    (2/2) benchmarking "String"...
    done (took 2.018483411 seconds)
  done (took 5.682951306 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.080769825 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.360141912 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.038093464 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.789258951 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.796507389 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.108732562 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.587927941 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.296648305 seconds)
  done (took 30.707460348 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.923562074 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.009812762 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.497006942 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.519230888 seconds)
  done (took 15.729613132 seconds)
done (took 63.826354868 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.800987199 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.842411438 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.789167712 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.774341905 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.852253631 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.807817234 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.07891257 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.839494242 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.78602357 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.774947891 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.789017053 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.27270753 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.797265314 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.147759808 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.787267222 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.792169904 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.792575003 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.277775368 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.946716703 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.80007619 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.805759655 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.846297529 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.790072873 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.801572645 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.812912045 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.790167297 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.1817541 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.799826423 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.627395574 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.791387145 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.846336315 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.850435414 seconds)
  done (took 204.423090064 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.787572864 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.644937283 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.774496606 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.823299367 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.155321011 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.971907714 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.898076614 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.238525587 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.793971882 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.792699502 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.995423678 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.789232922 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.023879973 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.735193408 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.817534941 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.795818978 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.968790658 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.047812404 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.821061143 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.939838158 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.812006074 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.814597784 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.768958273 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.983244393 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.834003531 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.793401643 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.811529863 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.793182919 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.982314992 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.932597063 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.835075928 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.795950613 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.982028938 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.661801403 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.799697878 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.812740994 seconds)
  done (took 169.957259768 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.963327203 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.790218584 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.789003246 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.789205754 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.797617511 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.78942572 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.909759777 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.912775498 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.395842733 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.29520928 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.844047835 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.58260739 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.790105953 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.858384073 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.804349983 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.791622005 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.806052039 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.818586042 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.794810394 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.791042329 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.913168981 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.804372131 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.373646201 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.798233547 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.792261724 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79589391 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.790226574 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.160849412 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.791149185 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798695138 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.030877189 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.791745555 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.791627214 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.635821435 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.863866247 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.880898774 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.792919741 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796741325 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.792173815 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.008498451 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.791423973 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.792918371 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.794790001 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.92754891 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.792223544 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.914270474 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.791181875 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.276466948 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.792271563 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.791365459 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.698725498 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.382549943 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.792681137 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.791738346 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.794716107 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.792068302 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.791495319 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.797829481 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.619397556 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.865550815 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.793657142 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.796154174 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.798453216 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.793480107 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.907596133 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.792219709 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.166734656 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.792972807 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.00867374 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.856603006 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.913252162 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.796955972 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.858652305 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.886487181 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.793105973 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.792762063 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.793741196 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.7926454 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.875557749 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.793482327 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.918135161 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.800726829 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.79433029 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.84608658 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.86354496 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.793877187 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639928945 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.794725501 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.794261998 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.054284774 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.860353431 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.794187787 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.793977058 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.793585499 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.793764454 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.919055477 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.915946019 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505382668 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.798331684 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.692266523 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.797473888 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.794796134 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.928474181 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.796064256 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.924921041 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.794699735 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.876643829 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.799516128 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.796932878 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.79470206 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.826303912 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.795929057 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.854909069 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.794738068 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.16939932 seconds)
  done (took 405.402865609 seconds)
done (took 783.53007512 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.44058889 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.405209828 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.50158915 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.429068219 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.397577003 seconds)
  done (took 13.909645028 seconds)
done (took 15.642674107 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.883977237 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.893880749 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.81976022 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.887276385 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.817245188 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.886487657 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.869485449 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.822247001 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.85534081 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.820449668 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.857300847 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.82056221 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.810020742 seconds)
  done (took 25.778423248 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.027503331 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.036775536 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.868692281 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.027050758 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.845350583 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.023952973 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.963607788 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.949216309 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.949865035 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.814458788 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.810474897 seconds)
  done (took 23.053050206 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.028245363 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.03653363 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.878384009 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.023323977 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.848967823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.034176343 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.962918022 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.951676698 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.951927735 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.81381097 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.81015053 seconds)
  done (took 23.076491708 seconds)
done (took 73.640451354 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.807076338 seconds)
  done (took 3.54303458 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.832505309 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.000603163 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.81335193 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.811904463 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.807210679 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.80829104 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.809508272 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.806236458 seconds)
  done (took 16.427037001 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.806092247 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.803408163 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.805557183 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.805989428 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.804773909 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.807431085 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.803397235 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.80295914 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.806265541 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.803080119 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.807006251 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.804372008 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.803245867 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.805853712 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.803552746 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.804322317 seconds)
  done (took 30.615334702 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.806561393 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.803414486 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.803997435 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.804587327 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.804250805 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.804894272 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.80534298 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.803789886 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.80413385 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.804051589 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.805976997 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.804755092 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.804077093 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.804094071 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.804894732 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.806295102 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.80568067 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.804363118 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.809784876 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.804531926 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.805202091 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.804521224 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.804626185 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.805525302 seconds)
  done (took 45.059626134 seconds)
done (took 97.380052486 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.56695148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.437469766 seconds)
  done (took 9.742939381 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.809460586 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.807766049 seconds)
  done (took 5.410544772 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.808155878 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.807620153 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.807847437 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.807934859 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.807770716 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.808537818 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.808864251 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.809814385 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.807583152 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.809693771 seconds)
  done (took 19.822741821 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.808279588 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.808701264 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.805647009 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.809111914 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.809435036 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.80604357 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.808515098 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.808341096 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.809205697 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.807105982 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.808280175 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.805611527 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.808140932 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.806356264 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.808628332 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.806886356 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.807127301 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.805693505 seconds)
  done (took 34.277725762 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.809248861 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.810204122 seconds)
  done (took 5.359969638 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.806704986 seconds)
    (2/7) benchmarking "second"...
    done (took 1.80644961 seconds)
    (3/7) benchmarking "month"...
    done (took 1.806765119 seconds)
    (4/7) benchmarking "year"...
    done (took 1.80783348 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.807384344 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.806782489 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.807002979 seconds)
  done (took 14.389727011 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.810243183 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.972781104 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.038807441 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.463150092 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.812019348 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.812820047 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.762332747 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.813348141 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.814573992 seconds)
  done (took 20.041601595 seconds)
done (took 110.782770887 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.606908137 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.806548605 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.030785873 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.89656412 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.822614133 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.146613935 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.829451436 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.114642358 seconds)
done (took 42.994524666 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.882376543 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.179866549 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.436944108 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.83620787 seconds)
  done (took 17.194060755 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.795359427 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.365555125 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.849627154 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.47256707 seconds)
  done (took 20.258756661 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.175839344 seconds)
    (2/2) benchmarking "read"...
    done (took 2.155328997 seconds)
  done (took 6.078722058 seconds)
done (took 52.155634785 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811021305 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.809658405 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.810914147 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.812107344 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.811682855 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.809858692 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.812715132 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.809029479 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.80844965 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.808990571 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.811375379 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.812525559 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.81215765 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.812759332 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813595699 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809967209 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809666402 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812535347 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.809611169 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809913353 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810455315 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813127905 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.81053257 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.810243705 seconds)
  done (took 45.206739205 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.813500062 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.811053591 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.813582035 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.813718276 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.81087084 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.813945741 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.814865197 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.811533442 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.813500898 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.813793964 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811420637 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.811462923 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.814237424 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.811956481 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813191174 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.811706887 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.814050366 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811967601 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813900982 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.811096286 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.814198596 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812098234 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.811114425 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815100832 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.811114123 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811277511 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.814123371 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.811931129 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.814633056 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.812431556 seconds)
  done (took 56.128112624 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.818929813 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.821207759 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.81553538 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.814725022 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.814689736 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.815196406 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.814967551 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.81549916 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.815777825 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.81546622 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.815541416 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.815783362 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.815286413 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.816168338 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.815221471 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.815742378 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.816102464 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.815398196 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.815182759 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.815775311 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.815909239 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.815474001 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.815812715 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.816135219 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.816335781 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.816805679 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.816642979 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.816394715 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.815552534 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.816182434 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.816885576 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.816410729 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.817348317 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.817222873 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.815969427 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.81724582 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.821214022 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.823597526 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.81717169 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.818067978 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.816290054 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.817543836 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.816974986 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.816472289 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.81769326 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.818100114 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.817280489 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.81763063 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.818528939 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.816991339 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.818487758 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.817033201 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.817734347 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.817480939 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.817380194 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.817404052 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.817777716 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.817362727 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.817255566 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.816811989 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.81790875 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.818526511 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.817738206 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.819031258 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.818648978 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.817755918 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.817901053 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.817750408 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.817977044 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.819655895 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.817618792 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.81882479 seconds)
  done (took 132.576621054 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.817862987 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816191885 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.816377077 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.815362416 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816134314 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.819227515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.814883997 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819204686 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816818037 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.819158696 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818747542 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.817185963 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81662876 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82013675 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819029725 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.81622821 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.82020637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81645376 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.820220846 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.819639331 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819731396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817232262 seconds)
  done (took 41.742124074 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820421936 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819490447 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.817791339 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.819714377 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.817040205 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.819890823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.821089612 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.819711194 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819331611 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817047089 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81690423 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82061858 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.817577987 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817559277 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818722933 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.81728398 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820445041 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.818219369 seconds)
  done (took 34.489477189 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.818221473 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.817968048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.820277179 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.818279809 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.817674246 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.82057461 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818001624 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.82168649 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.820612959 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.819739793 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.821204348 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820494385 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.821575136 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817989138 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822670573 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.818723842 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.822133513 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818841287 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822177142 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81829668 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.819136734 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820967684 seconds)
  done (took 41.788919804 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822011858 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82101152 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.818895277 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.818807273 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.818516193 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.821568664 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.821705619 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.818840858 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.822570067 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.821912977 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819281228 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.822931167 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.819329314 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.821114628 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.820900884 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820592785 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822300698 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.821085956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823768918 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.82020913 seconds)
  done (took 38.169855351 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.822807159 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823919346 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823693272 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823267896 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822893363 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.823448521 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823059542 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.823282872 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.823197839 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823958488 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.824173608 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823899367 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825028059 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824316299 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825005257 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823801855 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824469329 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823946761 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825740507 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823506979 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.825145117 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825073596 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.825475622 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824293747 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824829205 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825091372 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824616731 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.824475235 seconds)
  done (took 52.830611992 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.823558038 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.823538324 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.821943528 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.821427584 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.821057789 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.821516887 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.821617318 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.822645678 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.824063869 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.822168258 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.82465515 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.824163764 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.824348826 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.825431715 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.825073327 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.825826206 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825081244 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.822985156 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824097403 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823005676 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.825084083 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825315027 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.825110128 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.822756958 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823468646 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.825571254 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823044865 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.82345767 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825919122 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.822774623 seconds)
  done (took 56.466090724 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.844787339 seconds)
    (2/2) benchmarking "in"...
    done (took 1.842935534 seconds)
  done (took 5.443534514 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.822984331 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.826839548 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.825566261 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.823134569 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.82243981 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.825574604 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.827085485 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82297724 seconds)
  done (took 16.352710638 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.825592809 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.826529945 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.825534845 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.827296063 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.826400411 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.826639012 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.831598462 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.826051164 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.827490112 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.827060805 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.832321472 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.833741719 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.828573847 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826991828 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.825727125 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.828150325 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.82718072 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.827484279 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.828612728 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.827946968 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828562153 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.828813859 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829649925 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.824093889 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.829213668 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.836755368 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.831346328 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.826994261 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826542873 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.830114445 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.827727565 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.825407196 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.828450728 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.827706506 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.828656242 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.828066013 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.835577505 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.827915253 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.83409656 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.82879606 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.828056659 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.827996399 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.829060525 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.829061615 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828474402 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.829192359 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.829713948 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.825758824 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.827309028 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.830919656 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.833250176 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.827879898 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.826096017 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.830831552 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.830513052 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.834108484 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.829502865 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.832392804 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.837678003 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.83806828 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.84138484 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.835762694 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.830468558 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.829907508 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.838463457 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.851612011 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.834605284 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.826802807 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.827356272 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.831121906 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.835560365 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.8424698 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.838635144 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.82961089 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.831109314 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.829821837 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.829300893 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.830637464 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.835241519 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.832166966 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.83060903 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.831593293 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840663082 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.850957504 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.830303748 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.830594032 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.830439087 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.831265122 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.83179924 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.840027997 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.832659428 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.831544511 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.831334114 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.831145686 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.832472576 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.832330679 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.830471545 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.831926971 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.829183602 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.831080186 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.831861468 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83478927 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.840509439 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.832126544 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.832704645 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.837103799 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.831174748 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.832006868 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.836447141 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.8317773 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.83215919 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.831777799 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.836964607 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.828730908 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.834408962 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.839310094 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.832379483 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.83267144 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.832541585 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.832584544 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.840273097 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.856755312 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.833652091 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.833762596 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.837322807 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.842921656 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.832944694 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.835096996 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.832984515 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.829622145 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.830402208 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.834431143 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.83442808 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.833845083 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.83405196 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.833538955 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.83084044 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.833182314 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.833909727 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.836796555 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.834996285 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.833854997 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.834925272 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.835511589 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.835733833 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.8343005 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.84027664 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.834102881 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.835074945 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.834818933 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.832457228 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.835170754 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.834792053 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.835020798 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.833482725 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.834683287 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.833075163 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.834618077 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.834032693 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.83431696 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.834039332 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.835084259 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.837037744 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.835300313 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.838333501 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.833299712 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.8320641 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.834646887 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.835287186 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.834656025 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.836389134 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.832989254 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.837597414 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.841981012 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.834812609 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.834946859 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.836575466 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836172227 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.83535114 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.836452909 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.837901051 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.842097175 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.8357444 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.841013534 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.835853828 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.836587583 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.836255832 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.835225616 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.835790238 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.836470534 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.838924706 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.843558243 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84842169 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843860896 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.837614059 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.840546167 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.837393876 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.841159836 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.839711854 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.837255514 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.836758809 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.837139921 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836775725 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.837270737 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.838793571 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.837524935 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.835745356 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.836901371 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.837162786 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.836829979 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.837714306 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.83749447 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.838328775 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.834205733 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.836520149 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.836288829 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.836859128 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.834290627 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.835791079 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.836824292 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.837201631 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.839233308 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.843368122 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.83429847 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.837656752 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.838068518 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.837255002 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.836851524 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.837687015 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840431604 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.837733302 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.842588818 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.839015664 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.838047939 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.844188039 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.838056382 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.837187079 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.840538682 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.839402264 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.835467933 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.841213886 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.84664701 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.837989439 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.839990589 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.839076369 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838674838 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.840229409 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.845069979 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.836964439 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.83925804 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.839114972 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.840044736 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.837275239 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.84083613 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.839376988 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.840569939 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.841841751 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.840691414 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.839047964 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.841236373 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.840109342 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.840185423 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.83963827 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.841902088 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.847613572 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.843835496 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.838872328 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.842120254 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.840991546 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.843173137 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.840335536 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.84096466 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.839673781 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.853298035 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.848470196 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.844189359 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.841606125 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.840419405 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.845105493 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.841422189 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.844709801 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.839504618 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840672225 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.84003598 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.840563959 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.838046057 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841878186 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.841256918 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841580577 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.842231921 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.844922308 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.841154033 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.840856369 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.842325236 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.842870872 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.842123295 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.840876352 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.842495189 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.844435134 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.842726979 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.840608688 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.840704419 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.84683257 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.841142251 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.841856124 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.841191795 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.841703476 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.84121323 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.842995572 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.843105844 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.844599141 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.851528094 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.845327299 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.850913129 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.843796968 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.851175022 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.843192336 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.844914853 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.850832214 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.839131316 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.841231338 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.841999595 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.842998518 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.847429681 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.844615823 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.84337649 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.847400119 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.84300405 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.844936239 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.842951083 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.843952038 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.842969025 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.843219674 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.850035544 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.845389189 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.846713983 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.845232461 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.841974101 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.844864042 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.844093622 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.843172877 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.84722197 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.844674275 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.845004662 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.844063738 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.843075044 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.845189221 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.844423112 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.844302033 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.840663165 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.844747515 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850200815 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.845240021 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849097499 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.844782445 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.851328454 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.84590824 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.850541368 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.845348902 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.845260963 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.845878816 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.844476192 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.846703347 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.844331115 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.845448689 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.845548581 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.846159716 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.849370929 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.845887816 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.846972353 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.846426694 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.84539097 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.845079939 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.854958509 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.868097517 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.846322082 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.850564608 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.843053409 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.846799303 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.849709471 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.845669491 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.844617498 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.848246561 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.855238675 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.853124162 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.845575939 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.846383106 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.846354856 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.847007632 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.846164504 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.847206563 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.846465085 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.847085482 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.847176003 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.847360266 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.848924338 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.846556009 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.846540091 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.847346484 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.847670962 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.856447281 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.848172579 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.847845929 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.846891393 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.846635367 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.847994824 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.847843773 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.848892812 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.848991402 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.848755196 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.849290479 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.853757474 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.853606777 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.85044907 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.847630156 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.848029097 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.85034149 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.847190231 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84825205 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.847938494 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849216546 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.8495606 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.848443064 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.84929445 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.846420728 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.849105553 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.848817006 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.84869929 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.850783551 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.854889641 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.84816848 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.845656084 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.849314887 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.849503557 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.850646515 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.849473895 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.855901196 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851367646 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.860353206 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.856502737 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.853968383 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.848910891 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851030134 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.856883586 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.847951017 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.849830289 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.849782861 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.851207357 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.850707419 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.853167125 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.850973822 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.855776887 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.849018431 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.849756335 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.856937044 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.85166231 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.850655058 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.851811031 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.85366653 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.850113917 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.847290504 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.850380234 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.849370055 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.856223144 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.851896712 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.851648578 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852140844 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.849458618 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.851888797 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.854245496 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.852037237 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.852188592 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.848444598 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.851724452 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.851555367 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.852440134 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.848762252 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.849735713 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.850734524 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.853628521 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.856902642 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.84904053 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852850637 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.85131108 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.852630473 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.851839114 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.852313515 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.848942931 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.848503647 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.850995302 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.852660947 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.851435382 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.854547257 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.850998592 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.852126735 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.853073681 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.852478156 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.855162635 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.862075463 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.859111803 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.849445796 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.85140135 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.853140541 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.853845482 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.852655943 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.852448762 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.852226374 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.854122219 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.853158825 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.852860411 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.852872817 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.855423546 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.866950853 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.855199496 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.852991977 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.853209425 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.856625091 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.853477122 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.850740049 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.852821602 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.85607978 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.855855164 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.860696683 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.855566188 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.860530668 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.854249468 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.853762536 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.857934065 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.85689991 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.862142255 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.856640872 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.85366564 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.854812897 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.857963161 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.868485745 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.854257162 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.86314822 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.880956951 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.855017034 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.855398125 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.856361391 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.853844254 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.854347713 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.855710722 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.854982091 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.854293672 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.855612852 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.855432114 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.854567863 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.860563378 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.856168374 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.854496611 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.855290835 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.854636265 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.856400449 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.852035699 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.855677277 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.854043173 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.85637374 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.855071239 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.856674592 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.854796225 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.867794728 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.864871742 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.855208286 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.856594897 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.853423557 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.859546659 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.858065726 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.866253506 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.86289417 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.856092725 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.856892636 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.857277253 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.856111352 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.853563448 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.8553989 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.855575226 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.856127582 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.853265374 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.869368226 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.865059137 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.861403352 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.856010517 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.856886804 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.857559889 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.85722975 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.857460403 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.856846743 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.85875008 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.856587278 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.860412035 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.856872625 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.857812212 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.859561254 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.86511086 seconds)
  done (took 1100.427277945 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.854119378 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854141152 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.855258763 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.853898737 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854484182 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854453524 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855003825 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855119735 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.85496835 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.854380315 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856320971 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854702111 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.854801975 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855259146 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854563639 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.854606499 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854987681 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.854390734 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.85572995 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855307239 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.855281244 seconds)
  done (took 40.738506522 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.858820051 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.855531744 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.856959362 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.858665611 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856213504 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.858435245 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.856229924 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859030692 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.859322872 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856406715 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.858680342 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858907595 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.856160579 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.856422537 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856881655 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.859566692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.860003298 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.855622846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.860658712 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.856706432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.859097198 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.857081157 seconds)
  done (took 42.659632374 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.860677485 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.861017428 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.858149942 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.856910686 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.859181892 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.857657677 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.860488497 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.859478987 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.860251136 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.859639451 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.859091998 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.860871898 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.866029656 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.864510035 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.862531575 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.85986207 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.003080399 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.861788846 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.8614373 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.86138181 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.857642166 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.864815555 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.858190945 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.857792911 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.859689383 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.861169722 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.861227582 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.862178796 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.861592793 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.86232117 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.864888235 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.860859539 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.862737165 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.862307529 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.861420706 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.861829362 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.866279334 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.86300055 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.859228909 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.860679635 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.871131271 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.880614472 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.861950623 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.866739488 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.861598789 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.860932944 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.864249259 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.869103439 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.8592281 seconds)
  done (took 93.169716932 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.861282403 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.862134424 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.860300236 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.862178222 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.861941854 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.862007095 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.862129844 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.862260778 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.859101113 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.859190124 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.86432983 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.859541377 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.859622338 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.862014142 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.863444805 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.859845157 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.85923756 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.859595128 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.860002786 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.860527589 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.86052285 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.862698505 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.863655994 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.86078528 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.863488689 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.859572328 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.860727456 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.863656412 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.860235752 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.860496528 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.863337637 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.863114297 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.864191338 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.860558096 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.861344068 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.863093432 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.86341434 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.861055269 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.863391741 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.861079792 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.863914542 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.863408013 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.864573717 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.865218598 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.861027983 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.862322326 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.862054213 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.861588174 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.862260741 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.865048999 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.866185821 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.862240875 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.865556154 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.862113314 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.865193547 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.86606526 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.862150715 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.861345695 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.864567222 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.861788463 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.862102538 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.864883621 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.861871242 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.864399549 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.86449372 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.862668249 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.862421883 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.864722749 seconds)
  done (took 128.430595179 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865372465 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.866329835 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866697499 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.865917198 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.866293662 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.866267238 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.866120805 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.866375378 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.866363858 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.866537949 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.866200742 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.865927425 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.86699162 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.866163423 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.866344404 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.866661717 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.867091352 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.866744372 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.868128899 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.867934884 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.867153428 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.866688083 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.867319806 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.867126328 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.86804895 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.867836249 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.868576349 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.867391929 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.867375385 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.869062269 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.868409012 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.866936076 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.868009189 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.868293528 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.869163812 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.868470248 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.868332431 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868869622 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.868331752 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.868308967 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.868742481 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.868327212 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.86758046 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.867922404 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.868282027 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.867963927 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.868525114 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.867991531 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.867657464 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.868346369 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.869272354 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.868856384 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.868962623 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.869488747 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.869506526 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.868345851 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868953334 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.869013626 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86993922 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.869146596 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.869534851 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.868644832 seconds)
  done (took 117.59718861 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.867757526 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.867692699 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.86637842 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.865822347 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.868998215 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.865995438 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.869130177 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.869724881 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.868665057 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.869266051 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868975885 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.866421736 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867375488 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869550737 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.866546149 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868127687 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.866568685 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.867982812 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870276444 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.866808736 seconds)
  done (took 39.156500038 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.866479812 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.869170972 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.868832489 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.86764363 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.870275626 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.868405952 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.870478338 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869908433 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867460427 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869790799 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.871702626 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.869859677 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867626504 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.867868141 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.8709298 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.867929985 seconds)
  done (took 31.70339416 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.86893001 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.871394513 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.871405154 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.870545876 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.869104423 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.867513276 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.871217132 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.868369377 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.867759283 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.871713731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.871075039 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.870394097 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.871222018 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.871357718 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.868171628 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.872077686 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.868053294 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.869314417 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.871932155 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.872020263 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.869158585 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.868760384 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.871330454 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.871783943 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.869375643 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.869563455 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.869170215 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.868893563 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.869546541 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.871974774 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.869217635 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.870126358 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.869682819 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.872793205 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.873053965 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.869795009 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.873642014 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.873553803 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.873011753 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.873081636 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.87274114 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.870156222 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.8736133 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.87280678 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.870498406 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.873629305 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.870670673 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.870597224 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.868794887 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.872606524 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.872474771 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.874507776 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.873160333 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.873898274 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.873426775 seconds)
  done (took 104.705940969 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.873724299 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.873137889 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.871320991 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.873291283 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.874984873 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.870731389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.873499425 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.871046314 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.87124868 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.875711501 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.873751109 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.87514041 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.871683374 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.874439837 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.872072379 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.874628967 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.871339798 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.871763469 seconds)
  done (took 35.516385254 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.871539078 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.873038819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.874441575 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.87137361 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.872030631 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.875173745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.872023513 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.873985716 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874151122 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.871889011 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872674492 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.875689423 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87448252 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.875608131 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.872496999 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872939301 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.876539495 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.875034486 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.872320798 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.872311367 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.876033799 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.874934382 seconds)
  done (took 43.025163907 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.873816286 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.874395916 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.890742797 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.895849172 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.896288001 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.909808606 seconds)
  done (took 13.145028601 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873862759 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875645459 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.873839248 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875845444 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876788957 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873493132 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874104382 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872892126 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87671637 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873962219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873528986 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876299809 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876238316 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873623056 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875991961 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876227051 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873683468 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873458172 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874136237 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877493802 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873886292 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877159132 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874043441 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874239109 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875393845 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876820096 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877287119 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875701777 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873884925 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877879138 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878252516 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875401238 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877223569 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875635328 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878009608 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878409099 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876336071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87868187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877905398 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875978046 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.877531128 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878844425 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878657007 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875782885 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878448179 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875962464 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87673567 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876306592 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87642277 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879850884 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878601102 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876151347 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878323399 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879007714 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879541461 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879135459 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876072163 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876228074 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8786898 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876286171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876336362 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878836928 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876098259 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876788662 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879483457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876366411 seconds)
  done (took 125.648443936 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876550688 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.876656289 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877065741 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877376336 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877326867 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877396791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876987977 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876394793 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877493878 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876623818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880550796 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87773161 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877794205 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877736031 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877210571 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87679019 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877424604 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877126143 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877932329 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881241019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876990117 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879006414 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878865148 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87808163 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879090775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880404396 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878842749 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878492521 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878692268 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87920701 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878883381 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87882925 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877868251 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.878847837 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879426454 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878316279 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878549733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878474878 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878871861 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880478005 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878112969 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88109991 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878821038 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879253691 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878901024 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878830556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878803274 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879924819 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878803329 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878776384 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87931518 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879684212 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87972326 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880433331 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881618022 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879530721 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8799463 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878795855 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879870598 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882459184 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880253465 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879951837 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883100228 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88000074 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879999968 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880314132 seconds)
  done (took 125.814908571 seconds)
done (took 2564.675654279 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.887229833 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.983066312 seconds)
  done (took 15.681648692 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.045670639 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.997674655 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.880855007 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.905830337 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.881259624 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.877419309 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.899288344 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.880856143 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.881288413 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.881269446 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.881871 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.070601066 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.931886582 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.881557323 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.881304216 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.974536008 seconds)
  done (took 52.570869697 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.884630093 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.885965421 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.895265292 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.887887185 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.885111244 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.897530483 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.920329843 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.88753101 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.926666236 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.89977213 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.96161412 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.896490099 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.884431858 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.936389089 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.89869546 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.900324248 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.978726119 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.964009745 seconds)
  done (took 36.203299087 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.963472348 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.892225577 seconds)
  done (took 10.676278268 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.916343703 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.916005986 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.918556104 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.907240738 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.880543 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.889466157 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.889554975 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.894478027 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.920142565 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.90901705 seconds)
  done (took 70.857461472 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.891206176 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.887703735 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.886306256 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.885273868 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.878588981 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.885758926 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.885884126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.877982657 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.554458251 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.923636784 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.893637261 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.892388122 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.88587686 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.887972495 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.88407964 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.908367462 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979462836 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.883578691 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.883662661 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.891288223 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.885255942 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.939510799 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.901010388 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.890583866 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.917325528 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.553847496 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.894755598 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.892790178 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.977240161 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.884310729 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.88577433 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.887522113 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.888010013 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.270769676 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.162997929 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.887871515 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.901071632 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.895084942 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.884859162 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.982234278 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.885963205 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.892892934 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.524355379 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.143710847 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.000316631 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.931300859 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.200694297 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.905711811 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.88891288 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.915417624 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.891611298 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.888975781 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.900520571 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.371234852 seconds)
  done (took 133.090572101 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.881866097 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.244490417 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055337722 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.884206233 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174517857 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09785904 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.885437804 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935270144 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.887545274 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.119361331 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.143595768 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.996879834 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.887163739 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.880965848 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.886636843 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.881819551 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044851821 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.959463683 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.88822037 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.882740916 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917380701 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.133232719 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.015285089 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.888114456 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.915723667 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.10110233 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.013898362 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.996710946 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.682118583 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.883297824 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.951445306 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.887336327 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.883531288 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.882751705 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.044886914 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.985189865 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.975526052 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.886524344 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883686636 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.881887168 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.558483955 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088956838 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.986122475 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.031491974 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087835563 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.098741413 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.672375381 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.883743912 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.627360646 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.052007971 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.119164293 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.12191133 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.012093118 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.888775472 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.2189517 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.884361535 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.883285833 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.140001385 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032563748 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.993636429 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.890183528 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.883496812 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.883356842 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.138541691 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.888570442 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.985375043 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.889675069 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.883573153 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.987201658 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.993364532 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.029260158 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106979711 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.920858976 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.774562858 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.421509391 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.140500035 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.958449505 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.141826032 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.88851325 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.885214358 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970748529 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.740267975 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.145514342 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.145860945 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.145001243 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.927651568 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.611707192 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.884623707 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.118181757 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.113163349 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.142769772 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095378756 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.132746151 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.221909266 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.885434747 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.885821642 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.128594255 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.027296369 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.88970595 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.233651045 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125040093 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.460055084 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.910550714 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.199852639 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024467825 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.891991137 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.531408368 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.887834657 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.114381012 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.932376795 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.88869028 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.887998255 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.112744205 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.866252064 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.887211487 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.544139169 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.953590749 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.889757464 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126913464 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.889478074 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.153059889 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.889834697 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.130930007 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.485234676 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.924363271 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.071297598 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.095344112 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.892528055 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138456756 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.138746953 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.00867293 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116192372 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.518881684 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.890870873 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.18180035 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.891696345 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.888242655 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.063519207 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.889857246 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.040180532 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.892960762 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.178150912 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.916346477 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13339562 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.891606034 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.149679092 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.928148829 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943970329 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.894231939 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020583962 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.892118373 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.818420834 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.051765654 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.893285006 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.890908667 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.451222874 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.891265248 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049330436 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.127435581 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917832417 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967247609 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.563375845 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.890212229 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.981582838 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.918951967 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.291178303 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.889766272 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.146170084 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.895454305 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.889834589 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.889501711 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.135664074 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.07931073 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.894895832 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.890567035 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.788401747 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.890031576 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.890502173 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.076486223 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.213306813 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.889932643 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102407297 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.894079023 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.023650826 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.893499345 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.977984152 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.230224219 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.890345015 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.891477691 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.890127376 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.891225001 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.891377814 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.106943615 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.923130256 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.430365943 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03425452 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.164876421 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.208002345 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.144886128 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.940871733 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.894891713 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.158072852 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.897090499 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.960675479 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.896368682 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.91713579 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130519868 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.895093194 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.162783007 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.175918319 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.935031535 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944867443 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.895817235 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.892486072 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.89199221 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.043670018 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.986782663 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.895582027 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.892822608 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.013357369 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.021232852 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.110877619 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.894389336 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.928475956 seconds)
  done (took 907.281582557 seconds)
done (took 1228.172968057 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.892728099 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.894457655 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.882647037 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.896555235 seconds)
  done (took 29.394894526 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.902758114 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.899688004 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.900967698 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.899977441 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.901482282 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.899660524 seconds)
  done (took 13.232973522 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.919221498 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.893381267 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.896870601 seconds)
  done (took 21.538125269 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.968058478 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.285529791 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.014264109 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.327449672 seconds)
  done (took 10.424860311 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.906938843 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.901213953 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.901636614 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.904027744 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.902918505 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.904639536 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.90451522 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.904322681 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.905628479 seconds)
  done (took 18.966330098 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.348328806 seconds)
done (took 99.733196847 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.086672551 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.523293771 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.148069002 seconds)
    (4/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.134835117 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.929596035 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.223880436 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.883820448 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.630044468 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.042109176 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.028935971 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.205731487 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.943438917 seconds)
    (13/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.98629681 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.924648787 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.732740133 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.99816335 seconds)
    (17/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.997051707 seconds)
    (18/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.037583067 seconds)
    (19/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.023725904 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.901892699 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.230048612 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.20807523 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.1910157 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.918833567 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.987239448 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.147182425 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.900792143 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.387412394 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.097659302 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.344391737 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.987784508 seconds)
    (32/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.90794775 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.862155177 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.838891142 seconds)
    (35/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.887651494 seconds)
    (36/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.999521236 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.015575738 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.131337813 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.810864464 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.994177269 seconds)
    (41/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.966418583 seconds)
    (42/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.246633192 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.286206429 seconds)
    (44/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.001671278 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.741212795 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.969116482 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.923788339 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.284364551 seconds)
    (49/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.928188113 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.030347578 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.882644137 seconds)
    (52/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.972441013 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.025844834 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.883320333 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.321581253 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.197189793 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.053715667 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.128977089 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.899651131 seconds)
    (60/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.928834828 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.885586561 seconds)
    (62/309) benchmarking ("sort", Int8, false)...
    done (took 4.95707533 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.809292384 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.999157029 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.958079147 seconds)
    (66/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.301392129 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.212351449 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.7024815 seconds)
    (69/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.082331868 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.236207582 seconds)
    (71/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.986948499 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.003291035 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.080414954 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.082317416 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.851941366 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.463376418 seconds)
    (77/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.999441518 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.593011737 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.016798028 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.960727932 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.885284841 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.444363574 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.58875395 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.409462568 seconds)
    (85/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.990892387 seconds)
    (86/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.585544344 seconds)
    (87/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.018574984 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.127702422 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.002411139 seconds)
    (90/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.926658188 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.916093242 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.983879188 seconds)
    (93/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.056422475 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.885111495 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.189993142 seconds)
    (96/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.183565488 seconds)
    (97/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.000108397 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.229973294 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.989936441 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.151567084 seconds)
    (101/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.890166948 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.596643448 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.352801949 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.222296891 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.128529913 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.024253582 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.116235682 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.981688042 seconds)
    (109/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.017033768 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.907770803 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.985169858 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.098026296 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.834853899 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.906564538 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.201284631 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.824430134 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.066076209 seconds)
    (118/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.029553028 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.892877593 seconds)
    (120/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.90148644 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.123181216 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.944867256 seconds)
    (123/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.977076035 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.891808442 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.270138487 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.892693497 seconds)
    (127/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.487143163 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.137531939 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.927611292 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.929297073 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.156050919 seconds)
    (132/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.06660237 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.910777229 seconds)
    (134/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.001823347 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.123160382 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.157435886 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.888393888 seconds)
    (138/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.005372491 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.890697508 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.021305356 seconds)
    (141/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.805003873 seconds)
    (142/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.909276394 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.089766721 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.176129613 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.283526918 seconds)
    (146/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.478419869 seconds)
    (147/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.917254022 seconds)
    (148/309) benchmarking ("sort", BigInt, false)...
    done (took 7.005028533 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.93756811 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.081327951 seconds)
    (151/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.040728088 seconds)
    (152/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.984003984 seconds)
    (153/309) benchmarking ("sort", Float64, false)...
    done (took 5.659294937 seconds)
    (154/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.910629119 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.023518227 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.133204679 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.934315806 seconds)
    (158/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.090370828 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.059167663 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.920011361 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.410317559 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.979189457 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.131842246 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.998305129 seconds)
    (165/309) benchmarking ("sort", Float32, false)...
    done (took 5.607284824 seconds)
    (166/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.157556226 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.921819903 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.948019155 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.972897141 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.999007698 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.432862279 seconds)
    (172/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.957342102 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.288661761 seconds)
    (174/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.290573118 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.998748708 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.520121627 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.228289241 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.065068742 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.61007533 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.27186868 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.183054436 seconds)
    (182/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.143622209 seconds)
    (183/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.912408204 seconds)
    (184/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.466751221 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.148789929 seconds)
    (186/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.921804658 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.932861925 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.891364573 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.017286564 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.93962872 seconds)
    (191/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.992463426 seconds)
    (192/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.007387445 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.78420216 seconds)
    (194/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.085069558 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.373149326 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.039553796 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.93615561 seconds)
    (198/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.371091478 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.913479455 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.559790009 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.916021604 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.11601005 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.917043438 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.347518145 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.971194206 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.979858174 seconds)
    (207/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.90716937 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.115162447 seconds)
    (209/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.148606744 seconds)
    (210/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.148072399 seconds)
    (211/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.995157371 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.942857525 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.253144885 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.096515136 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.910620241 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.670663941 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.727118202 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.105104657 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.284539356 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.3123892 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.255922532 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.895882795 seconds)
    (223/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.462297816 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.001684876 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.402166807 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.053257448 seconds)
    (227/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.514616109 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.940978444 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.994119224 seconds)
    (230/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.231936655 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.883643344 seconds)
    (232/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.067787976 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.265354874 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.958314955 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.90986071 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.963123167 seconds)
    (237/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.923824349 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.020968102 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.764445045 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.222801592 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.218943033 seconds)
    (242/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.913625623 seconds)
    (243/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.93974717 seconds)
    (244/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.323399478 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.153378199 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.913795487 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.215334612 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.303782782 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.857136683 seconds)
    (250/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.205299035 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.91298668 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.271391613 seconds)
    (253/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.13622759 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.151359892 seconds)
    (255/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.021602048 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.005336274 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.209604832 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.588823362 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.932769947 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.085995713 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.992278701 seconds)
    (262/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.980585178 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.024660578 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.008248771 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.937212725 seconds)
    (266/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.011955234 seconds)
    (267/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.083495876 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.912167481 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.364125977 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.912311121 seconds)
    (271/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.102566401 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.019057505 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.940500935 seconds)
    (274/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.2648214 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.888215987 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.916586838 seconds)
    (277/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.074609257 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.900228451 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.316411855 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.492419391 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.283827265 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.273695185 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.982704562 seconds)
    (284/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.012814885 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.025480442 seconds)
    (286/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.010632753 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.995192159 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.050495231 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.212889953 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.620666229 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.243847269 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.943145789 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.052174385 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.050480732 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.953051117 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.558119424 seconds)
    (297/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.154570503 seconds)
    (298/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.066181326 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.916250383 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.017855781 seconds)
    (301/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.837869458 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.224014125 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.388457094 seconds)
    (304/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.904443734 seconds)
    (305/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.128654273 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.019338676 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.088645926 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.920287878 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.937914287 seconds)
  done (took 1019.11486637 seconds)
done (took 1021.000379786 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.948657125 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.942926649 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.925676343 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.947666579 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.037320873 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.95380036 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.936015183 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.926943459 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.973179114 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.975523085 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.924653891 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.953058281 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.927570491 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.927371847 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.926361164 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.94092695 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.241703437 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.957845171 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.943537448 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.935029097 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.943601713 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.925859095 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.975741877 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.953821809 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.92940484 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.92878661 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.930269155 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.947183359 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.038413514 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.929915109 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.928688131 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.938583688 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.241476023 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.955713764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.922842507 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.947114619 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.939438142 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.936749838 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.930928321 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.960177795 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.335934362 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.96825655 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.929811593 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.92881049 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.928935411 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.931992066 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.93054306 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.933946448 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.942102143 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943344284 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.331504959 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.984004265 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.931729441 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.928125061 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.938423279 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.928962125 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.931245542 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.945278739 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.948461074 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.945278426 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.234001155 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.963167845 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.930006588 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.944969714 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.937465648 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.369461753 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.962971858 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.933129139 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.336194951 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.972119526 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.370767186 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.977281675 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.931390838 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.943478484 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.961640224 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.242283584 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.954757424 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.928453789 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.937700636 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.929874308 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.939463169 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.94386896 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.935364737 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.930292757 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.943605016 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.956836471 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.939619248 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.93192194 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.938748589 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.950033492 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.937662827 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.941957614 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.934492198 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.925100505 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.940376945 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.934488914 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.933870872 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.934792696 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.935337514 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.940535781 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.334839407 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.988483004 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.927984862 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.928260454 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.930110019 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.944967766 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.337234827 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.972024633 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.95250381 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.979578665 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.93341513 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.236967066 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.964986014 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.948039779 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.940679994 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.935102462 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.927009736 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.235333073 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.365743354 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.986222235 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.933948489 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.930726233 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.948054428 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.933163804 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.929376458 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.246384063 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.964069392 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.945431042 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.053405979 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.94324045 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.964506649 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.932009445 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.935732633 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.961499238 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949145435 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.965047456 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.936030684 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949374159 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.948780402 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.929166055 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.944513006 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.942926336 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.934641209 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.939173183 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.928104025 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.961941394 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.946345958 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947140381 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.954857267 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.055205188 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.931184506 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.23694282 seconds)
done (took 303.213266544 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.003171672 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.930325765 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.026971814 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.929497377 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.011600818 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.016596649 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.927238595 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.927674905 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.926776502 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.301017699 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.926735853 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.927388333 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.927116302 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.927524318 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.012214464 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.930691856 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.926362053 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.2648574 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.930778659 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.002351974 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.922989997 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.927420774 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.930215491 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.303304524 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.922515515 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.924872048 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.002893134 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.931231437 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.267243679 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.92381654 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.924243898 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.268511159 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.021477394 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.958976471 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.942214852 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.93001581 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.014506339 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.944941889 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.012948186 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.012864431 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.028047631 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.963487152 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.926709952 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.932509189 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.934379154 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.933401689 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.928962565 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.960531273 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.930000463 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.929139177 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.266521704 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.942130466 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.939948791 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.929968911 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.929797845 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.953504913 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.929788573 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.933324621 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.022887094 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.933444998 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.994521262 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.335395153 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.303393608 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.932737151 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.924659154 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.931196852 seconds)
  done (took 188.392867978 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.000660723 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.005459405 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.997965294 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.937144609 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.981607296 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.001271168 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.93783232 seconds)
  done (took 15.721128189 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.939630896 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.93410128 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.985003564 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.985795024 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.933345176 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.081131421 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93454066 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.945078837 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.931283107 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.98674065 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.934995385 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.934385659 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.940777457 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.930261766 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.983610661 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.945603021 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.051595571 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.934767714 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.935625518 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.088323263 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.931832195 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.942459003 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.988368842 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.945457093 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.935381369 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.940621029 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.527195879 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.935744995 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.933709379 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.934643059 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.932773545 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.976596914 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.935778895 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.93117542 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.93267102 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.050346715 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.936451174 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.933126578 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.936134389 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.929410979 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.93468251 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.935347474 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.935997828 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.933526726 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.935747953 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.959148433 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.935352538 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.936322242 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.936009594 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.936095906 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.986524507 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.936626835 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.932837235 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.933122465 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.99168578 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.943281341 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.937135073 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.93357583 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.936601336 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.933942643 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.090179001 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.986161084 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.936967851 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.986806882 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.936696699 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.937290944 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.937716733 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.937334159 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.033693995 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.936498056 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.987179537 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.934543762 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.096205459 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.961092701 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.940081816 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.939843908 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.93992054 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.937283475 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.93847151 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.944637824 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.93444686 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.939266568 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.944196071 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.935491761 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.935688673 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.050667276 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.046390225 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.936662982 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.951023178 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.946247154 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.93674808 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.992027204 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.93883852 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.936196332 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.995409681 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.057244936 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.99453073 seconds)
  done (took 212.362986657 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.943637531 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.946746446 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.939909775 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.955700676 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.938754318 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.93840146 seconds)
  done (took 13.527331027 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.940920435 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.93999226 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.938934907 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.939079601 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.938774377 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.939720588 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.940165643 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.939643839 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.943631082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.938505211 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.940343118 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.940777497 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.940390049 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.938694249 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.939795217 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.939127438 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.939821428 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.937223702 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.939651802 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.940478826 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.088230487 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.939487823 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.939824849 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.941511162 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.945782643 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.940335414 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.948626895 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.940750232 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.939384586 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.948129769 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.943970758 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.941862013 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.941391914 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.947033738 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.946238464 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.94299615 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.944991372 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.942061335 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.939203042 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.942259602 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.942213781 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.940477639 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.941310252 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.9437336 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.942999216 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.945915731 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.946915379 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.948813063 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.940901003 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.94267486 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.942594783 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.941459573 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.942087794 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.942061214 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.943223043 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.946562916 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.947009158 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.941687308 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.941939785 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.942243377 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.94250615 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.942419542 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.943211149 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.946057473 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.9483927 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.943429446 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.942750825 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.946918693 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.942109222 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.942496409 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.943764404 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.938479221 seconds)
  done (took 142.856676664 seconds)
done (took 574.73325995 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.068028787 seconds)
  done (took 8.936524786 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.992770938 seconds)
  done (took 9.145156923 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.836322402 seconds)
  done (took 10.705658377 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.963967738 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.960669374 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.955676416 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.941776012 seconds)
  done (took 29.714756158 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.002756636 seconds)
  done (took 8.869465592 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.95754958 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.934113184 seconds)
  done (took 15.786356198 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.946972317 seconds)
  done (took 8.815132533 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.099650658 seconds)
  done (took 9.008882022 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.936692332 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.964668339 seconds)
  done (took 15.781213827 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.920048821 seconds)
  done (took 8.787152328 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.533334243 seconds)
  done (took 11.488112277 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.951438153 seconds)
  done (took 8.917007903 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.002932853 seconds)
  done (took 8.870591222 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.052998141 seconds)
  done (took 8.920453397 seconds)
done (took 165.61435196 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.938102414 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.935873593 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.936105982 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.933995399 seconds)
  done (took 29.611795048 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.976097606 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.976310279 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.976856445 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.986772907 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.979322442 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.977038325 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.968202091 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.969152945 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.988106154 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.97886024 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.977792582 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.978291669 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.976322531 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.967944061 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.979388392 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.97778942 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.986938445 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.977864404 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.969123399 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.979534755 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.943265315 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.987733915 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.979128026 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.94342061 seconds)
  done (took 49.270192202 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.142790866 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.013324501 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.096925832 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.994363904 seconds)
  done (took 10.115927461 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.994766806 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.996555852 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.007819725 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.047349704 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.070923012 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.005863725 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.969872001 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.964729609 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.9512701 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.996881661 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.071964047 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.994201137 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.088498774 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.943994794 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.130753547 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.944673068 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.943757848 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.996083464 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.047725112 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.060980807 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.944161554 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.995873567 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.999899261 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.990577119 seconds)
  done (took 50.028498545 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.942255937 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.950921821 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.950120429 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.943697848 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.943904572 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.94437663 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.949681968 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.944761754 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.9654495 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.944896483 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.942982256 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.944026537 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.943347048 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.945206081 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.944148919 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.956767429 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.957849085 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.944042636 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.94793115 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.949669458 seconds)
  done (took 40.826260903 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.938631853 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.79199252 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.28981323 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.193401449 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.939906486 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.939739438 seconds)
  done (took 31.964179684 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.959482775 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.951110261 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.945168291 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.003473639 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.087468235 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.95424887 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.945247466 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.957751375 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.994665747 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.012903261 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.973200422 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.976538799 seconds)
  done (took 25.633853771 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.942173085 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.966674565 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.942267822 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.981903304 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.958264739 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.955664266 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.952780252 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.938786069 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.958987018 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.96556667 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.954167426 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.958645746 seconds)
  done (took 45.351834908 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030788502 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.829732148 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.970339123 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.650899707 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.477969972 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153085426 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.463324287 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282093605 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.944928839 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213894436 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.844927727 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176666422 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195879358 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941294416 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.032689794 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.376731828 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235434243 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161911024 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96483715 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640553924 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055043866 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.579537677 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.679748798 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.061077847 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155380216 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.078138774 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.201884771 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.904081092 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073484086 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976045968 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952719203 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941948898 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216593266 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311381653 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05590136 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952730265 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596407435 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.65966466 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.933142163 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.622326671 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.728455133 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.064423269 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951756778 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943441728 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.877387268 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.583920241 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287576121 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.949692976 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.646951684 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.945406831 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955670647 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045956591 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.948234319 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.75913653 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898212916 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.224449261 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.941886559 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950192581 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.510946494 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.971654949 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.686754725 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.885344665 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.036721346 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.64344269 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398011444 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.087988488 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.948218547 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947328593 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879084312 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.562183258 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06078309 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090641402 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.964164058 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596330912 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241045391 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.924841429 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.017450337 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225962616 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.853361736 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.885130513 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173994881 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897570556 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880662117 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.802597592 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.880236372 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198065912 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978049346 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.556228905 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980195156 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282907229 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.96249211 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968118156 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954424305 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.171297988 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.830105851 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948217956 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.627118635 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221189279 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969793346 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.283552224 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882365487 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.951717676 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203459459 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.160165584 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319603599 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.382949458 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101745587 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949183776 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.034809178 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.002364159 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958485432 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.214951861 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003144476 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.977165992 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069615712 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.905103644 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236974474 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971773485 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.120571513 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.857065559 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202339468 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.25640628 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.195622563 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031072997 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.952413683 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.949365063 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.596325911 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.565656616 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.173006105 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.949253862 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.565721415 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961587632 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.950811554 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884696516 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.576590049 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.857637446 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.047669157 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.173537819 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.00921045 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224340308 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884468138 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.095873112 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.065433557 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.173208871 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.59176265 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.020514414 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209658234 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.575552281 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.320071876 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961116012 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969521641 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043059367 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972709734 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.385593727 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348105326 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.954379513 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.95446264 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.659623504 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.006677629 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954940481 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.955866806 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775361942 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227044239 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971410162 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.96093075 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.84157757 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.964986138 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018266996 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956767608 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961093024 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.457205202 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.70279241 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.963306393 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.644643208 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187290601 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962039664 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.652446836 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137005152 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.034033025 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219582871 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007373143 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.886534906 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.655159993 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.655323741 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952911967 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888871014 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.952582735 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962322132 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964111479 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.151686051 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225910907 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992713612 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.658344935 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.061448914 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965279255 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.957984302 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953128827 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.447425965 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993962209 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.553378683 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084605754 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090022786 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.968501467 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.887837107 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.957173431 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958065852 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.953370331 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.918881495 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006676795 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.575075773 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404891132 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21576654 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.600081707 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972810748 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.680646106 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.076408853 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.980476035 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.633020175 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.029632247 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.061121141 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036669209 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.965809997 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.653029981 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.71801648 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.518662621 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264268306 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.25025359 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386152414 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.44751611 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.298681503 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293396238 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190674446 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.484752409 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016028272 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300419462 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900034023 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041346293 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.598474527 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.3062722 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97236218 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184342605 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338716854 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.689844627 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108017325 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167579884 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99136998 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.871987068 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006275151 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.195744068 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110872224 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.621862694 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176070713 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292103869 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.631284668 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.051290888 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.955764952 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.634560244 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034933183 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.667710898 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.318506012 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.609145765 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.863594007 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440168883 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.967202561 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.402636554 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30479078 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405013411 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.047375135 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893750685 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.969397245 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.968599571 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.956956939 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.938844162 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.879999084 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.235013883 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969761012 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193905747 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35969364 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212894311 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.855033709 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.964106288 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958144473 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244713779 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.723415928 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208050545 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.40680176 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.550596655 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969932951 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.892994218 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892668522 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.661385682 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.960824115 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.932710502 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17238238 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.064668305 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.914316705 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44217193 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290600361 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214849208 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.972798317 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.22592789 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23161259 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.695881146 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989969292 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.060285842 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.651046405 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.653095985 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.18177967 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.196142975 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785664347 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190698771 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.99829388 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.919054602 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.959006569 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174930266 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.183221359 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858627775 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198682612 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.68169926 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.966466788 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334890605 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01415479 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.887899635 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.164956388 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.052438852 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970707322 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042335846 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970283556 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.971476252 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.972474387 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011791017 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882680887 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.085827872 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.975682005 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063744907 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001546191 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.539050692 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.972318842 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231586844 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311267999 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276307315 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016280987 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.960843867 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961667852 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.895422317 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099810093 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.407819842 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234632321 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.090682963 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.103033446 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98760214 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.64320867 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34057607 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292137204 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237462126 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.858545825 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962421384 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.077257264 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.188061565 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974261328 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.173128759 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183540007 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268347666 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428877432 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.201544665 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419294528 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236961112 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.331943914 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.963613383 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556027404 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.97841143 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.714304842 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.999474979 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.880678322 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240426286 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974326857 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33492427 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.983779001 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.163716564 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.480802045 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.667391186 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320185052 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.947802228 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016991763 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234431178 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338509176 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27341073 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031778877 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974621263 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.665061459 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103049855 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.912546997 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.22277739 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.964927394 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175692963 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.676856006 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97393102 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23768463 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270811955 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.961456518 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.941223113 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011120717 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.975166993 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.18860439 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218798062 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213467116 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974455441 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.96763003 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.780502864 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236055743 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01791907 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899545939 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.968935515 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061253354 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.211594458 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985678236 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.483912417 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.668111311 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25725047 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.881656315 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989496439 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466083115 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417503568 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282498486 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.492380163 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187181622 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.520255245 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.914265414 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.357551756 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.970743172 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.462910903 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.3611727 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.970018031 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.564567599 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096672311 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.233549235 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.287063622 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.977502087 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65734121 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.003517447 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190151716 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560320321 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910371334 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.970520155 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.027111966 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.966807656 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.099770587 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979028817 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.951167789 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946775601 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.82119692 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460594466 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.972428021 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.958382897 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.700675801 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.607289792 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094782358 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123789581 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977536337 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.680056052 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.259878714 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.222810639 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.562616353 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.050398193 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.971134105 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968937987 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.897247404 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.168806259 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.16727227 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261343587 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.424177275 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.097486763 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973316727 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.185212213 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181098036 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.873097757 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117646306 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459297407 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097316117 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.889214294 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.68311724 seconds)
  done (took 1727.906113943 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.994660769 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.012281927 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.983783325 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.07249054 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.033047928 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.027734005 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.078385065 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.040102761 seconds)
  done (took 58.142604947 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.96785444 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.213096791 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.977418116 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.969303577 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.005096863 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.984843903 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.199039643 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.981870458 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.990638092 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.979243656 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.969890914 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.993581549 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.302907662 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.996197748 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.970310038 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.476108229 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.014909334 seconds)
  done (took 76.96957393 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.97283144 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.396112922 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.008579056 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.988593479 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.988432092 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.98615468 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.156265882 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.004689763 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.97697768 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.151049757 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.308299276 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.985583061 seconds)
  done (took 91.826225839 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.987427411 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.977561836 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.977763872 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.978135234 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.978679945 seconds)
  done (took 11.811477447 seconds)
done (took 2251.340216397 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.22627229 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.196065133 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.207104189 seconds)
  done (took 6.30584314 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.122190146 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.170348877 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.289871278 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.30986485 seconds)
  done (took 10.799328001 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.261282434 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.343989926 seconds)
  done (took 6.508674055 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.309154441 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.994858469 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.354831987 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.973224718 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.97366096 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.975783113 seconds)
  done (took 22.831109279 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.976229562 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.979670507 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.976505667 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.979759617 seconds)
  done (took 9.816079761 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.957316031 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.689763297 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.958040507 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.969892623 seconds)
  done (took 21.478728478 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.724707768 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.374603451 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.720698251 seconds)
  done (took 9.724870424 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.439860709 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.168548564 seconds)
  done (took 9.512566801 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.231270407 seconds)
  done (took 4.135813401 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.005901485 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.247916486 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.490365809 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.498089736 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.584538335 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.799840015 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.306677067 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.21912364 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.423461548 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.435943128 seconds)
  done (took 25.917556165 seconds)
done (took 142.81720589 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.420992239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.003858691 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.177476222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.354337476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.215472494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.176343116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.193114935 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.34651684 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.873794319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.857310281 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.343601185 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.216431014 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.14355889 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.994645584 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.141031877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.995069342 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.218513004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.428359065 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.064109974 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.265027595 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.181374356 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.986382901 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.185049176 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.004821133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.221185972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.138141487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.533631456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.999851821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.204768667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.546424054 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.141858823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.406491739 seconds)
  done (took 171.885614158 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.976567946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.977083421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.977330596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.976884182 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.302108809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.978138979 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.976938855 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.977096664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.051136369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.036311179 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.977712083 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.276376072 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.977798677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.976647124 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.977707406 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.978064544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.190858008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.97879416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.97740632 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.976467908 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.977619417 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.12097972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.979313514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.130760966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.14987479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.981789496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.978104013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.978442754 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.977343285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.978321204 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.979346934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.977854869 seconds)
  done (took 210.637131418 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.976895636 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.979492749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.979690652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.978779211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.980238152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.977682977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.979862515 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.978607063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.467730584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.471160175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.980302342 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.980020656 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.977965271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.979553482 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.980416232 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.978850831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.979641538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.978326513 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.980129119 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.980209251 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.982541069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.661234332 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.980855022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.676917678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.981760964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.979834852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.980479058 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.98310099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.985224776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.988116372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.992553984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.980670628 seconds)
  done (took 223.649010752 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.169091182 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.985920083 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.986417749 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.985963115 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.987161309 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.986113454 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.993911363 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.171047633 seconds)
  done (took 20.191754452 seconds)
done (took 628.275008489 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.452466381 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.300268194 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.169424818 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.014032357 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.258057477 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.045825239 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.009981679 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.076300567 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.738760024 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.078197128 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.705257105 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.032598678 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.792304403 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.038881058 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.130815328 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.068301748 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.598666737 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.692756335 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.186232422 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.066999169 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.181506233 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.976823081 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.093679894 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.773548189 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.814480423 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.032674877 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.193516967 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.60736102 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.020741434 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.16890961 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.79807656 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.44086477 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.023199078 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.005297029 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.064368889 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.040339917 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.360151492 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.022213262 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.130911341 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.77766047 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.082645955 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.619580697 seconds)
  done (took 108.596309429 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.976647697 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.976345003 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.974791771 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.975803124 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.976267227 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.975290174 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.975171759 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.975050956 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.978111627 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.976246649 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.975008455 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.976654564 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.975821684 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.976235928 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.975525312 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.975334174 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.976387793 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.977946826 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.976160675 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.975886999 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.976656407 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.975439529 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.992574113 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.976090542 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.976728572 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.976603392 seconds)
  done (took 53.318463656 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.990881781 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.142091811 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.229554149 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.012582665 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.990211531 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.994876663 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.008478076 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.995976391 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.993049352 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.992670829 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.097909568 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.998167427 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.01043917 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.227939032 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.009331518 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.991408043 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.990653987 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.991137941 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.149023366 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.0078059 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.011629232 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.996630862 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.010735706 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.004062162 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.992478031 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.990424844 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.994552042 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.490290009 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.000591741 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.096077029 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.039030317 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.01538326 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.410942179 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.237948875 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.04934967 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.001901407 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.992081576 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.10262529 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.997681444 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.991710226 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.011297719 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.997692173 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.227696056 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.4808881 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.007575084 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.994115852 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.509531684 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.111754989 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.033376481 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.004161933 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.228188626 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.010575274 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.993475926 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.992778312 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.028544877 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.999616425 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.991539906 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.342397118 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.005153583 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.010154508 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.998253444 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.992846464 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.155017835 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.001842443 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.140873116 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.002367541 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.000038126 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.993582878 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.228135843 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011939548 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.483731608 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.00880804 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.994729904 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.099053817 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.148405274 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.529501117 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.00737767 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.155791917 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.429643525 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.01910271 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.00172936 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.48291641 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.024719522 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.001710922 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.996034473 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.996230493 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.994351462 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.040727485 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.010346026 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.416064897 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.495788336 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.363806407 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.023969442 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.010512366 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.995146092 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.344003911 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.004994174 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.996997719 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.224322362 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.502487493 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.010965485 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.0019863 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.469889509 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.01192078 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.014959768 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.004339049 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.23311777 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.013757185 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.042089783 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.996413926 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.001860967 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.998046683 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.015028436 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.00356575 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.996761729 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.464023097 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.124832961 seconds)
  done (took 246.880936004 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.990662125 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.005089087 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.990687362 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.994240606 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.990020672 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.995876689 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.989389067 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.989417942 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.995514854 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.989963315 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.98986907 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.988517492 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.993352125 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.989946794 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.110398332 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.997708581 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.59963568 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.991767536 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.98976869 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.990227116 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.739729916 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.997765303 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.990867262 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.991889971 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.990914884 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.99037871 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.995796397 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.102235373 seconds)
  done (took 171.295650724 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.99771773 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.114442819 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.017156328 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.026396598 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.006536306 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.995187406 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.022324197 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.014882223 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.002924505 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.996486297 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.996197035 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.058713791 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.010221885 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.099825687 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.030580036 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.029857694 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.104450073 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.006604981 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.996287648 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.996628843 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.026321108 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.994004493 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.060349827 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.128729109 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.018945402 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.117791559 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.005158446 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.999765897 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.999558842 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.118327573 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.016184886 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.061456632 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.028735331 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.017249231 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.121179312 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.120317386 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.109803451 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.031042668 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.003154024 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.997369324 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.997786058 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.986937118 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.11882752 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.020977602 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.99931058 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.10713237 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.020057811 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.001126176 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.009324201 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.998483769 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.013635775 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.017371513 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.067048466 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.135937352 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.0352444 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.025131022 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.025018888 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.27426244 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.008292966 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.101799349 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.995280095 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.12097904 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.022306531 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.986807236 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.000083319 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.006520529 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.028618548 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.031461951 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.106981453 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.010127452 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.10272244 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.037742632 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.00697814 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.998982376 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.001858014 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.118767199 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.123516098 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.038274711 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.037760038 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.032113894 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.996565119 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.001841824 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.98908992 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.017938083 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.005288495 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.118801871 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.123290491 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.013268934 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.003189345 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.002640972 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.003246391 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.026445683 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.127115937 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.039121266 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.099320028 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.073352045 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.07792155 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.01757182 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.014171891 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.005270695 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.065825848 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.01780226 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.013093593 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.320581475 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.071245664 seconds)
  done (took 216.440096926 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.450638602 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.059499039 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.059430528 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.338472544 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.426056968 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.854250518 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.049624141 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.051377645 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.07457919 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.24235393 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.125467008 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.068768782 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.038105705 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.025439897 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.050385082 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.073920324 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.062667731 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.392830769 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.186351455 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.168188589 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.033697208 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.34595334 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.372816381 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.444152621 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.085962764 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.39681365 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.739214979 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.192971369 seconds)
  done (took 65.343730131 seconds)
done (took 863.784842524 seconds)
SAVING RESULT...
DONE!
