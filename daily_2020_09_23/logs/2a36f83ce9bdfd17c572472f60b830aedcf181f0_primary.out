cset: moving following pidspec: 22167
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.636012811 seconds)
loading group "shootout"... done (took 1.126838279 seconds)
loading group "string"... done (took 0.408309858 seconds)
loading group "linalg"... done (took 7.603475447 seconds)
loading group "parallel"... done (took 0.156536731 seconds)
loading group "find"... done (took 1.252129895 seconds)
loading group "tuple"... done (took 1.868742072 seconds)
loading group "union"... done (took 12.235422455 seconds)
loading group "dates"... done (took 1.293419777 seconds)
loading group "micro"... done (took 0.200386985 seconds)
loading group "simd"... done (took 4.257966695 seconds)
loading group "io"... done (took 0.995917518 seconds)
loading group "random"... done (took 8.518161315 seconds)
loading group "problem"... done (took 1.438733763 seconds)
loading group "array"... done (took 19.012840403 seconds)
loading group "misc"... done (took 1.448346641 seconds)
loading group "scalar"... done (took 38.521337133 seconds)
loading group "sort"... done (took 3.034863091 seconds)
loading group "sparse"... done (took 11.455339909 seconds)
loading group "collection"... done (took 16.54259293 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.494093331 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.115066156 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119357004 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.112553631 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190406866 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112600789 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.117281941 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.079730423 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.793939803 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.131927003 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.105848109 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408221454 seconds)
done (took 5.114112129 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161175669 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088112641 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077467063 seconds)
  done (took 1.273102843 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06045894 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130014277 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061440618 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062368105 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.061809159 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.061758489 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.061122598 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.060932294 seconds)
  done (took 1.608818601 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068984674 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.062664739 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.060390808 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.062339811 seconds)
  done (took 1.365311922 seconds)
done (took 5.597801309 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.228542618 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.093970214 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.273670726 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.429517812 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.583134873 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.088770301 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.069477296 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.064941401 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125098851 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313054419 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.095841315 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.171124218 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.083699738 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.166419561 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.969776764 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.111759557 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080506318 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.115943424 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08845256 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126030025 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.366201194 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.071929076 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.068304626 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065156495 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06315463 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.63086298 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.648335049 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12270458 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078526304 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.156300829 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.111756811 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.638315733 seconds)
  done (took 10.443329427 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089122289 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.083945124 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063417445 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.117914375 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.086556232 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.064980516 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069320364 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06255236 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08192078 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.116482046 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085630717 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.091366285 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06134219 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064031283 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.068220915 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.189114177 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.073660636 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.074664093 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06248774 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074849379 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.099550144 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075932385 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.072810114 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.072150277 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12245109 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164193452 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091576825 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093180067 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061050015 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.073285544 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.109681537 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.119160228 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061400602 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064045844 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.112702874 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090423103 seconds)
  done (took 4.325027371 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.927208178 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087722047 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.093528794 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.58013152 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061116609 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.141187287 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.226321638 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067403754 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288210572 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.105427972 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.139386103 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.104675907 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.138178941 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.111973425 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063904148 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.154077717 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.109564471 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.439044135 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062572006 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.061723251 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06028053 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.062991268 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062327631 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.05866689 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064475482 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091714161 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.081570227 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.148910078 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.99855113 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.064284116 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.271050519 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060324633 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.078416915 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.348067259 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.064523894 seconds)
    (35/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062400792 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077084376 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.399219408 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.116731481 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060544877 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.060341727 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157551377 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110217097 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060253714 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.112946622 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073169909 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.063816008 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.064163491 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.063378777 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068365001 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073138506 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095696005 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062568569 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060395677 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159882364 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.059935661 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061469991 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062574867 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145423906 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060102068 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.132442118 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.05981238 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063931881 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095042111 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063631345 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.080785257 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.08865877 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.345524837 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.033897303 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062562525 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.910626833 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07292964 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.061746516 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065301888 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061472192 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.062901015 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06207452 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067459053 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065159225 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.063694251 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103410533 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061790661 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064801113 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062176068 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067255457 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092274902 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060419521 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.461585816 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062123543 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.091981633 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.0614208 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.070249998 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099379401 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062076397 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.065770138 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062678228 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061813883 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061101851 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.061988737 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064267197 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090076316 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064760861 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108099453 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.131087252 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064246018 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06264746 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066678348 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064343583 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064532987 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061720026 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.063963974 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063888224 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.060802211 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.101331557 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062034908 seconds)
  done (took 20.685847983 seconds)
done (took 37.492563138 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234487849 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.072447813 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074172263 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.072957132 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.072691345 seconds)
  done (took 1.732371832 seconds)
done (took 2.930447726 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.101808388 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.058977479 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.0930864 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092807941 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.059081139 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.0593217 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094056894 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.059400859 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.091507325 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.092604821 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.094719057 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.093465072 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.0594616 seconds)
  done (took 2.250042911 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066725784 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07573713 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077154967 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05719207 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.0672655 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076424416 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.05694161 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075313933 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080873145 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076246377 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076226732 seconds)
  done (took 1.975248883 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065778122 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.075742092 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077464963 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05734313 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067839749 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076198604 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.056916608 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075650225 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.078397182 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076320464 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.075910957 seconds)
  done (took 1.960763422 seconds)
done (took 7.37070548 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.062440634 seconds)
  done (took 1.23018738 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.482221199 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.057924901 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.062673264 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.079687365 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.177786838 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.086211581 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.187505437 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.065463978 seconds)
  done (took 7.532365947 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093704689 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.064753267 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.062518498 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.062638678 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.063962797 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.063429122 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.062671821 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.063411784 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.062715861 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.063725279 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.063488538 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.062988264 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.064322067 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.064439895 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.062302388 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.062365972 seconds)
  done (took 2.308399074 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091217413 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090474271 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.06704345 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.067826865 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.066224579 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.065181348 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.067358798 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.06697674 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.064351955 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.066339445 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.067189995 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.066067462 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.065702784 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.057486317 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.067739081 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.067900746 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.063998964 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.067101965 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.06753716 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.068544976 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.066914347 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.057471978 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.066004844 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.066790602 seconds)
  done (took 2.919880496 seconds)
done (took 15.177839216 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170259821 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068976132 seconds)
  done (took 1.416351534 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.064963862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.063559319 seconds)
  done (took 1.320296162 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.069542042 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.056038601 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.072360521 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.064518716 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.056793102 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.056431312 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.071337304 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.056575406 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.056695263 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.056593164 seconds)
  done (took 1.805527701 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.05999632 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.063594873 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.061413102 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.063336603 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.061748725 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.057539675 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.059650019 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.057736827 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.063633276 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.056735985 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.060238319 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.075501299 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.059900084 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.07696268 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.059995345 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.060435401 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.062094141 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.060005857 seconds)
  done (took 2.313362915 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058284509 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.056891908 seconds)
  done (took 1.312816689 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061106255 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0577145 seconds)
    (3/7) benchmarking "month"...
    done (took 0.059314006 seconds)
    (4/7) benchmarking "year"...
    done (took 0.058915996 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.056974637 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.056165876 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.05711638 seconds)
  done (took 1.594150051 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38876065 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114107845 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316222535 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.063456028 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.070543139 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.237001018 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0586723 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.063002932 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.063337745 seconds)
  done (took 2.60586547 seconds)
done (took 13.574419211 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077257776 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.167206619 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.082055887 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.390339887 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.085585568 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.061459114 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.107490586 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.156844886 seconds)
done (took 2.344260775 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.224920008 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.252210249 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.844516591 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064595506 seconds)
  done (took 3.362896381 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312434595 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.073239682 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072847608 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062625002 seconds)
  done (took 1.734827236 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061660143 seconds)
    (2/2) benchmarking "read"...
    done (took 0.066113942 seconds)
  done (took 1.33370275 seconds)
done (took 7.875410692 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0612274 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085942467 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.058722064 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.058903199 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.059008123 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.059029333 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.058727729 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.05928808 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.058629971 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.058650832 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.058732761 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.058253108 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.058550272 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058666421 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059323799 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058943455 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058388902 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.059059362 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059802372 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059212193 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.05850474 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.05908756 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.058990226 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.058694835 seconds)
  done (took 2.676507253 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.07562168 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.060419405 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.061702758 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06132577 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.062091111 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.061479195 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06141526 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.060696344 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.061862958 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.05996191 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061833417 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.061672887 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.060346053 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06204781 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060192217 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.061854049 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.061815143 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061011876 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060177721 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.062172283 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.061314428 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060484848 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.061666887 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061387236 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.061921814 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061797887 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.060440995 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06081625 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061526235 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.062250267 seconds)
  done (took 3.068994154 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.061552604 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055139819 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.056953408 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.064551266 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.055789156 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.056103271 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.055901298 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.055394254 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.055715835 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.056690598 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.055958989 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.055408938 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.056282998 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.055120267 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.055322475 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.056025986 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.05958189 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07258736 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.055496383 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.055577133 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.059173988 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.055704963 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.055366918 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.055563633 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.056056668 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056035339 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.055158805 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.055831713 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.055521654 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.056297671 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.055644487 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.059196724 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.059935684 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.063983588 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06471168 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.059686197 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.055369112 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.05940829 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.056476175 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.055342944 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.054971949 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.055400087 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.054992441 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.055577016 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.064657255 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.055448303 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.056574083 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.055948913 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.055782572 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.055026519 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.055778473 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.057142803 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.060326388 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.057144855 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.055365714 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.056489366 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05507058 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.056095674 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.055947176 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.055246864 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.054857071 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.058506724 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.056981132 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.05586579 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.072732493 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.056448196 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.064415621 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057664111 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.056144008 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.058529736 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.056029014 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.071213504 seconds)
  done (took 5.368118805 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078169909 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079184009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.059908587 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060182035 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.055722595 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.055519071 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.062543268 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.055437586 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059923702 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073700956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.055890881 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.059739113 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060092157 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.059414394 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.055792432 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060318051 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.063085822 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.055989998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.055703772 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.05937332 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056030937 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.062340542 seconds)
  done (took 2.574500234 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.131177633 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061428388 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.096720307 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069862054 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06294643 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068672694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.060513509 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060556618 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060936391 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061446271 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061450453 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061302479 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063697712 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061632419 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061335628 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061649886 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061152243 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061586165 seconds)
  done (took 2.453532446 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07255464 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06077285 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.079754037 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06132741 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06106801 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060561456 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064099057 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.064677534 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.060503131 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.060686686 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.064268336 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060691396 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.060530621 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060757629 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06029652 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.060714546 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.060332402 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060975498 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064296798 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063878834 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.063963924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064308608 seconds)
  done (took 2.613849194 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072598467 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060091351 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073925659 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06114833 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.055989323 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056061685 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.060874699 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.060303481 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.060498713 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.059740841 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060196528 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05586278 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.061292908 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.060317096 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.061933966 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06058534 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.059715141 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.060233083 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059732965 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056151272 seconds)
  done (took 2.439510318 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08288751 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058267476 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058060265 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076331341 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058498747 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.057810666 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076226569 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.058132749 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.058897319 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078198379 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058175807 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.058285086 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076377142 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075792991 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.057954247 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076588227 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075894126 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075662766 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.05827004 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057988564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078524302 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.058026685 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076002474 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058238538 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058040904 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.058354433 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058145197 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0765172 seconds)
  done (took 3.079947295 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06074048 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.058557945 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059099558 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059286686 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.058984553 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059143481 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059264882 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059166723 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058934852 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.058870659 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.058711056 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.058452879 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058782981 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.058906503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.058593775 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.058987438 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058561005 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061172192 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.058887628 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058883926 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.05879974 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058923635 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.058484247 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.059185593 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058625228 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.058951031 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.058788043 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.058922731 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.058623973 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.058843458 seconds)
  done (took 3.000549269 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.06945273 seconds)
    (2/2) benchmarking "in"...
    done (took 0.066225411 seconds)
  done (took 1.36499281 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.05922183 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071190513 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.055729347 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066969976 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.063704878 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.05907482 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.063534485 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063252531 seconds)
  done (took 1.725053735 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.063427645 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083255569 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.057362368 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.057865357 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.060143987 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112051193 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.068337574 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069471281 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069352949 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.059706141 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.057819117 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.068251147 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.056771958 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068749044 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.058410321 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065192968 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063644677 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068628035 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068709567 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.055890767 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068371023 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.057476573 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.056035118 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.05773081 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.056874126 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063411709 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07117922 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068125156 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.064588048 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.055141749 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07420343 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.056115268 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.056897965 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064732063 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.059775511 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.055863923 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.089703199 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.056292469 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.060871438 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.05562062 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067014168 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075157736 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069369982 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.072503221 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.057526121 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.057622532 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.055701243 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.05777561 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060164432 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.064498734 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.056058509 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062778381 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.055502031 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.057363357 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.065517946 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.056199499 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.060620568 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.064641779 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068811321 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.065593742 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.063973575 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070060478 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064243898 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.062921983 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.05702577 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074446789 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.05760819 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.067513834 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069376557 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.05709237 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068005948 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.055688792 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.054753106 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.055927572 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086740233 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.057913423 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.057266837 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058860935 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.056010776 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.05728696 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.064956706 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061525173 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062994919 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059700512 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070584765 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064628733 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056153818 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.062116148 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.072612832 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059664697 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.056086862 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.07140985 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.05920009 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.055792321 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07201605 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065023975 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.057360161 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.056694155 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059431922 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.068428277 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.056906575 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.054704148 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063602456 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.057107985 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.057949503 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.059859841 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063267364 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.055550402 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.064927762 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.059846579 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.056755029 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.054637546 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.059073631 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.055723159 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054015812 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063546227 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055040067 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068035178 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.060737355 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.067811466 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068370739 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064338906 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069512778 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.054839117 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.053940618 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.070982349 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.063318776 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.055835892 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.070751861 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.054730841 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.064142993 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.186220457 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.058748999 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066374643 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056676061 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.058985073 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.056953907 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.061732332 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.058509727 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058394634 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061061078 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064734693 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.067818648 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.057987581 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064733519 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.057677181 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070479373 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066026603 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061019632 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059942737 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.05685888 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.067553183 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.062816195 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065330056 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.055908612 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.057449466 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.056531593 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066446601 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065725937 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.058010798 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.063636682 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.060429406 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.056728147 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.056399536 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.057301439 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.059684712 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059791084 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.057198116 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064294555 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06462075 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071914371 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06404523 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06470067 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056537116 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.055852732 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.057898755 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.055917218 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061145689 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.064815345 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070572906 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067049808 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07526935 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.056249804 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065267075 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.057367904 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071145124 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068301735 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.057420532 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060755794 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.055565788 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.057991408 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.064823477 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.066773984 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.068745923 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070059865 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060997714 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.060830585 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.055950915 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070145479 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.056795031 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064721168 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.065468484 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.060370722 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.056165783 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.057856634 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.064863249 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061041568 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.056324395 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.070722619 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.061655552 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.055665207 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069348914 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.056273431 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.066141367 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.055898517 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.059497671 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061819467 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.058169029 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065518596 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07066695 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.055272871 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.05707503 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070387907 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.058193286 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.057674681 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063732689 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.069665463 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.060695653 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063215423 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065881949 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065114881 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060329485 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06481645 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057033561 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.064973477 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.058846681 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.066535906 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058639858 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072122281 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.054871586 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069019237 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.056219872 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.065635484 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.056039631 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064312026 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.056199939 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.070504683 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.056995869 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.056147275 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.065626791 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054104069 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.063893005 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.054762457 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.05928472 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.060840714 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.063459564 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.056210576 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.063345774 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.056450543 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.063148473 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.059143642 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.062447819 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.063289184 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.059031233 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.054810438 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.062227207 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064531517 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.198206303 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.058882077 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.058958667 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.057598595 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.065868309 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.058323629 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.05776295 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064169997 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.060981119 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062033264 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.057867844 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.058075098 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.058287217 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06396327 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065020652 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073163163 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064440207 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063949412 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065247954 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.056375457 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070966439 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.056465928 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06345516 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.055252471 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.061742874 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.064600577 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.056175664 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074071873 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.057345017 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.063697745 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067732262 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064281495 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060011899 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.072953184 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.059824106 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064327955 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064066324 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.060828592 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062598571 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059030798 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064359679 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065388483 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066492703 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.05700193 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063767372 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064820857 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.058240186 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.063229807 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.058128821 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064728788 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.057506642 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.055140942 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.060335917 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.066561761 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.060530978 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.060570112 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.056491002 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.05520512 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.056593888 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06209794 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060357661 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064189987 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070307743 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05518058 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.057120843 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.056083493 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061746807 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.072618338 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065016277 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06350421 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.060572439 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.055773974 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.057826814 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.057884672 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.056138022 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.059423956 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.055586962 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.055945847 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066357441 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.057982366 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060962519 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.056556438 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.057352348 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065092272 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.060594872 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.056847505 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062140431 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056077589 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060907968 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.055646682 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.05769145 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060216227 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056103792 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059647744 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.065607711 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071213001 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062935607 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064532789 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.057009613 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063749008 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070525281 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062809347 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.056940528 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064622687 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05564253 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072622969 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064822492 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06412757 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065005054 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.056804588 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.0712176 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061020178 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065489094 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070354742 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057047372 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.061729971 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055669665 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070192447 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060021366 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056062544 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063298464 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063007708 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.060847813 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.066130241 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.055757447 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.062494021 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059722786 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.05849009 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.05676015 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.05656996 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065902968 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.069724276 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.055915213 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.058693863 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.061996114 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.062934139 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.199533669 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069821598 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065300197 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058747095 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.05885867 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061348427 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.058173327 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.067866461 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057829351 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061173699 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061224082 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.056814565 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.062847157 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071726886 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065375485 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065383797 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05687092 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.055529168 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.072508231 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060035096 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.059672698 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064013946 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065319423 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06778728 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06504999 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.071893063 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.057441493 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.061531421 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067938458 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.057293992 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.056525919 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060503903 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.058153096 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.064906993 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06531622 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063896713 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058665977 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.062508591 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068824187 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.057657315 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061029402 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.060928949 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.05731761 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066548596 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064024274 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064309316 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.057780707 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.05666346 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060061489 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064656355 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063601114 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.064781188 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.057041603 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.062151313 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069316014 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06322506 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059279228 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.055706132 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059185143 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064672579 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.060719569 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.056257415 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.060543867 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.059657372 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062429747 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.064821399 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060819162 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05588119 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072020236 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06437871 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.064755357 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.058049066 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.058007683 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.056852545 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.055887298 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066625785 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.056209079 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.057844771 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061112728 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.057841391 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.072378839 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.064131288 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070832789 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057032155 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060794474 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.056149909 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065370592 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060950575 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.05648118 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066169393 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.055830076 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070360439 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.067364077 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.063622178 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056250224 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061065398 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064365386 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069860449 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065469901 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.064543967 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.059390934 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065423637 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.057805721 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.066608992 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056082112 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055186729 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065570911 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063897393 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.067747978 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.055661994 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.065119878 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.058121578 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063823702 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.063808155 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057629078 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057201606 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057028512 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064209972 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.060027181 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.064742993 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.060006809 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07082023 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.056249137 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.065466762 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.063753204 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.065043749 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06740079 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066195773 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.062278427 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.055571514 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.061819341 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.062604927 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.056044437 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.060189578 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.058295834 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074547893 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.194345932 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059188158 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071478892 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.063277607 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057816034 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.064934131 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061614545 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.066100769 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.057660585 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.06658164 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.060418053 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.057996913 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061121656 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061455652 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.055782118 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.056623354 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.056248067 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.065927778 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.060864509 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.056547198 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073549936 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.057739773 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064684439 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.066731376 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.062684064 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.05823722 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.055499625 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.057431645 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069424829 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07094844 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060201684 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064918995 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.05791594 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065677196 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.055792333 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064861067 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064279752 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065088567 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.073391548 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.056813015 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069913902 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07027468 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.060771431 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.065293525 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.0653813 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.057924654 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076579066 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06469608 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.057394449 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.066707173 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058322546 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056119702 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.055741846 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.057857647 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.066929244 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.056164686 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.058373252 seconds)
  done (took 38.782946429 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093977609 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.057091242 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.056057153 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05629303 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066226205 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.056986206 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.056377715 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.057047036 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.057107356 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.058778295 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.056113301 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.056376746 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.065857583 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.068273263 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06571624 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059477781 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.056635461 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.057108976 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.056035945 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.056743873 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.065535399 seconds)
  done (took 2.627313462 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064269247 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070864082 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066558347 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071157916 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063406471 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060096806 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066160264 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060471852 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066733028 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065038141 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.066759666 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059677766 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.064891863 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.064880472 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064600226 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060151714 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066865405 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064168001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.059960995 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066447023 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060065752 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066028875 seconds)
  done (took 2.747154643 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059078767 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.056838565 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064361839 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05617044 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.055512982 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.059183517 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.05582176 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060209038 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.06006278 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.059972944 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064864641 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059567213 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.055690012 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.061498787 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.05559156 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.056692263 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.095121127 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.057040581 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.056808788 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.055748087 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06055279 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064697193 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.055958457 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.056067545 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.059716907 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.059176505 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.055664314 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.058244669 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.056408568 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060305794 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.057037071 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.055530999 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064454882 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.063881291 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060512798 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060246159 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.057430564 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.056877957 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.055860939 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.056207157 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.063735733 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.057259036 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.056158866 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.057510941 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06405058 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.055845886 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.055658673 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064614645 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.055903132 seconds)
  done (took 4.244370721 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.068367272 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10294948 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.061759172 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085593467 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.067592153 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.061784803 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.061570203 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086183974 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.056832037 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.057788471 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.068541528 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.068816734 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.058497032 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.060220831 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.061700797 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.058769557 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059280696 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.05777522 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.061252603 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.058032182 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06138749 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.062516333 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.067237445 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.067587708 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.059171365 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.05808694 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.058294962 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.059969631 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.067642816 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.061434265 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.059889257 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.060450038 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.068451913 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.061877242 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.058560667 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.058492289 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.068582799 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.058766313 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.058648763 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.057393813 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.058612788 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.059681376 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06261882 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.06906297 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.05879321 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.063537903 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059198001 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.056906842 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.06830111 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.058613567 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.061952087 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.069296505 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.059717616 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.059358882 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060462267 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.068352766 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.058625438 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.05752497 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.05887742 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.06813004 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.057185817 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.059810897 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.068652171 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.058134209 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.061630748 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.068561385 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.063297142 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.059569328 seconds)
  done (took 5.729167917 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068197263 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088187855 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067275753 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066463494 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06583661 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.066185617 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066425732 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.066123826 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.065882415 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067732094 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065880292 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102612072 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.062509728 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.069544318 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.065527502 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065723021 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.065565835 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065943834 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065561493 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065325924 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.065973847 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.066128331 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066096469 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066480956 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.067972809 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062215145 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065392718 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.065734627 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066108426 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.065735934 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.068355488 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.065462578 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.065511943 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.066737637 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.068491676 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.065215883 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.056879328 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065600416 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.066243981 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066150431 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062165676 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066682917 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065622277 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.062394068 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066086 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.065520048 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.06617398 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.068462599 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0721622 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.066296822 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.065916922 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066473116 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065840987 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06619144 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.066661627 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.072014407 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066365972 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066668372 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066075274 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.066469679 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066089811 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07203285 seconds)
  done (took 5.530693858 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071836787 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062997067 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.073646234 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058704178 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05591835 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064531028 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.056082674 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.056197953 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062357689 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.062403787 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064037886 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064842406 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066475555 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064019718 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064671598 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066372483 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064522354 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065178438 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062287056 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06439611 seconds)
  done (took 2.622760088 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072631237 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073748182 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06123676 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06489422 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.061110524 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06448248 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.061195345 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061527125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062269139 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061835371 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065963157 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066308812 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062228805 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064838249 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066024324 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065127161 seconds)
  done (took 2.374418988 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064445222 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.063159832 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.064904471 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.057259036 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.060689384 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.056959255 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.057377149 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.055827088 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.056268496 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.069476826 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.057023886 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068067753 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.057090112 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.056545473 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.056966414 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.062249752 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.056897752 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.057049286 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.057011508 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.061660829 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06350048 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.05786804 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.060879723 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.057060128 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.061850535 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.063991325 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.058624064 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.060270105 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.056893944 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.057191341 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.062130164 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.063010877 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.056650626 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.057409382 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.056731844 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.056907803 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.056863033 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.057434131 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062257896 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.057564524 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.055904108 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061633825 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.057197554 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.057947257 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.056270483 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.058209197 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.056404881 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.062092976 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.057186875 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.061761023 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.05685058 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.058988542 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.057535968 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.063594913 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.058900593 seconds)
  done (took 4.603393819 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073390843 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060966549 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056361722 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056249464 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.060662126 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062009835 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061312171 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.061281781 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061418907 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05795124 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061660155 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.060528693 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061217831 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06084604 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061367537 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060900383 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.055955473 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.060862729 seconds)
  done (took 2.448648478 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068582743 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061398321 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.065581836 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061119549 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.061289188 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060795619 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056236372 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.05671591 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056515438 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.060614161 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060486329 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06046092 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056543788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.060195855 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.060691158 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060566018 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.060262975 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057038666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06118634 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.056351811 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.060424243 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05651437 seconds)
  done (took 2.667254267 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084000063 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078123781 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.118387751 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074086652 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08178949 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068587171 seconds)
  done (took 1.855463929 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088697444 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09498916 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061120794 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.060569799 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068544896 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063914837 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063426007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063731182 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068477386 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067196797 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06353925 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068105428 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068339815 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065230351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068442508 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070334797 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063510749 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063472435 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.060461347 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070669883 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063773282 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068646645 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063461118 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063079292 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063439109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065007263 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071177251 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066923029 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065745673 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068340372 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070653722 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063563684 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068526108 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067098513 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06110221 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068394717 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063788429 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071276411 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068866679 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065531248 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061037365 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068647358 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068387232 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065387763 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070878317 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064001001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065651604 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063645048 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063731735 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072935147 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068577147 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065446462 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069080218 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07111038 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07104397 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073096371 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067663713 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065393718 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068942911 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067581996 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065503099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06907075 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065410921 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067717291 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071114754 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065057111 seconds)
  done (took 5.80870666 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094620068 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06185971 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063693864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067474153 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06560439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063887956 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063764891 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063634254 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063962431 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.061327573 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096386045 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064432925 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06513636 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065461083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063559629 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06356206 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063849809 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065140886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.061260347 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072692969 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063775427 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065054304 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065357519 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06533626 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067687132 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070853488 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06381564 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063551143 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063291318 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063303384 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065382222 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063671891 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065049718 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061041557 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065017502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063540437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063295026 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064896878 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063530027 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068554742 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065469103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072972097 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063805091 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063628158 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067438455 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063292367 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063388784 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.060955456 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063690402 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061133851 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067455828 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067324295 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067271673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065244915 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063980957 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063934203 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063825673 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063846613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063845966 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070990087 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065291045 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063746195 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072799862 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063688617 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063250777 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065177946 seconds)
  done (took 5.728934495 seconds)
done (took 119.352918876 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204261999 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179199996 seconds)
  done (took 1.724663758 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071040266 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.089617144 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.06996654 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128064726 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066341815 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099927528 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098552525 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.069863278 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06615057 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066003306 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066312943 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067794058 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130774812 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066380706 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065651393 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068238712 seconds)
  done (took 2.654246284 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101885156 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170032809 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104959765 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064624364 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098441635 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070463465 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064289505 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074225724 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067256718 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065942445 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.070549728 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069160443 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066163048 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.068934429 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067459317 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072019425 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06593818 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.06988197 seconds)
  done (took 2.799742798 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089643503 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.080357976 seconds)
  done (took 1.538938178 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.149257595 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099900108 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.135932928 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.303795056 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.123206225 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.119947339 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.123025581 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.118545404 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.103927957 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.115600099 seconds)
  done (took 2.758509323 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101076538 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.165524415 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291273388 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.111601761 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070382368 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091729732 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.113578553 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076219351 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07351081 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.073721043 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.075186006 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.070587308 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093670586 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.069968787 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.069572517 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.070649305 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096701837 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.068701217 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.069025171 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.06980166 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097771057 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064790863 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.070296595 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.068870592 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.071678791 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.071643192 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066431674 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064832964 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.069675982 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.069227491 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07173027 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088999482 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07139717 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.091380804 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.06865474 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.092373653 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.06957636 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068444673 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.069618898 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068371454 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.070569929 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.070819158 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073301212 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.070567838 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066041547 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.068969407 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066161479 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064816421 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.072424562 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065450203 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.072338005 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074658349 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.090934441 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06562099 seconds)
  done (took 5.768345609 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102021959 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.097966573 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064561417 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105097562 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097196491 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064371368 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.09620186 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092213131 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.100098668 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064376975 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063839732 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063526799 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070136536 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.073037555 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107337454 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099460109 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06586194 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064229502 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099137554 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099713235 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063213643 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093163062 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092130214 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.098087031 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.062796754 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06410817 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063104326 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.063551844 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.068082963 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.069158583 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0632899 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.069920253 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.074833981 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.06918675 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062952763 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063653992 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063161738 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.070176873 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.070609446 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.070502937 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.068912862 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062413982 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.062916938 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063317534 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06405045 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06271817 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.068901137 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.069954515 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.068758724 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063460651 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.063512729 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.062998499 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.063359536 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.069362869 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.068578904 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.070338886 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.069972073 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063045575 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062971039 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064773476 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.070561281 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.071052047 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070470474 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063862265 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.070983013 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063043145 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.071459649 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074349963 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063268452 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063804743 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063083537 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063197656 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063759811 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.06849794 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.068594981 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063861976 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063326484 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062876076 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.070647239 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.06909312 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063344927 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.068422568 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06275712 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063086063 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063687681 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063420941 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.068207993 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.0698948 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.063497261 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063043984 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063168187 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063471695 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062399453 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.068451095 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069178423 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.069844565 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.068886442 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063330013 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.06922465 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.068735532 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063576992 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.067967386 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.062785701 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.062456358 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062638375 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.067882178 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.066675604 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.069564306 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062728221 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.061987698 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.067090329 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.070044242 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06207982 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.066888684 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.069658966 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.201774888 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.064549973 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077996725 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064346678 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.071797326 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064239579 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071751318 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064006504 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070013295 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063572862 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.063371082 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063588421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.069806141 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06396069 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063349669 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063845314 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063645673 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.069681955 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072985683 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064403425 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070567662 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.069424508 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064315719 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.06984148 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063332308 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.070335611 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063770774 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064135579 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062773531 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072427395 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063485394 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063725448 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06332084 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.071359606 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0636095 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.071780116 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.068485034 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062757705 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072728836 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.071188866 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.068728861 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.071693301 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064372239 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063832047 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063149744 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06380446 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.06825304 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.069837312 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063865712 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063596871 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.068456077 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.071564914 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.062838951 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.06876366 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.069036198 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.069236053 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063861797 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063205751 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.071865316 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071139999 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.069550236 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.068692808 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.069707343 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063459368 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.068760405 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.069298899 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063226856 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074719195 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063514705 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.072684627 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069826295 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069082741 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070131782 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.070723354 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.071260717 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.071637355 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.073175489 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063033203 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063031946 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.069200143 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063258985 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063347164 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.069352549 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063660449 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063664636 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.07339937 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063529288 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.071342419 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063352517 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.070506185 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06296194 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063781173 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074171567 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063822115 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063797784 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.069407359 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063146837 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.06860253 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07145089 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.068894953 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063749546 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063861435 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070087647 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070400534 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06282546 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.062998481 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062875893 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.068166334 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.066743027 seconds)
  done (took 16.918526 seconds)
done (took 35.548164371 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.194835072 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151792905 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184785685 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.108480511 seconds)
  done (took 2.104065013 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.088447323 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.092772747 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.070534277 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060123448 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.074522705 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060758248 seconds)
  done (took 1.853685536 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255676848 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177573296 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.162493847 seconds)
  done (took 1.995260643 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201157914 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.178590475 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.45429006 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.276213071 seconds)
  done (took 2.605409814 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.120249158 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.071836777 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.058382668 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.067868328 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.096767417 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.124175424 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.079122776 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.099776382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.068848588 seconds)
  done (took 2.247735971 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.121183812 seconds)
done (took 12.358762848 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.247681285 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197881146 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.188465624 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092123478 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063185604 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.187855097 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.149896616 seconds)
    (8/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.15384296 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.241128116 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074246358 seconds)
    (11/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.164649513 seconds)
    (12/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067897891 seconds)
    (13/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.178783382 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116894732 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070431799 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113335659 seconds)
    (17/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.337937443 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068280397 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.06827075 seconds)
    (20/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.176017168 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.160252455 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098211749 seconds)
    (23/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.173207581 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068028144 seconds)
    (25/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.20133227 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145410163 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.224422816 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070685446 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156128983 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.081317703 seconds)
    (31/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.181313294 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.08558567 seconds)
    (33/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065928532 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070680393 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.067718746 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.180238292 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.178658863 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059299029 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.081734887 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080945608 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.181204483 seconds)
    (42/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077054459 seconds)
    (43/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.059896966 seconds)
    (44/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071432573 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.153042423 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.07766637 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.135892589 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.06912459 seconds)
    (49/309) benchmarking ("sort", Int64, false)...
    done (took 0.061838391 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068572084 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15849741 seconds)
    (52/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.161406461 seconds)
    (53/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072584004 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.069467366 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.180300344 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084487535 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060223275 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069029734 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081364976 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059098445 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.081272195 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140680397 seconds)
    (63/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.16711533 seconds)
    (64/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078620476 seconds)
    (65/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.18482542 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071337519 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088269404 seconds)
    (68/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07069984 seconds)
    (69/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149184829 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.082355579 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06714277 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.172826505 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.081486834 seconds)
    (74/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.06670463 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.18320089 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163759653 seconds)
    (77/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132593568 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.16222319 seconds)
    (79/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.199117819 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.218347555 seconds)
    (81/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243805346 seconds)
    (82/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.073271522 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.061879342 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068259604 seconds)
    (85/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093726487 seconds)
    (86/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087750985 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109574268 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069621202 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.215557818 seconds)
    (90/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.081386415 seconds)
    (91/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.062914075 seconds)
    (92/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15381183 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125775124 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199129497 seconds)
    (95/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064253581 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060239979 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068247547 seconds)
    (98/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.187145008 seconds)
    (99/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.061543929 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.067711892 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140767082 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.060142953 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072424807 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.060601406 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.060029757 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.06797863 seconds)
    (107/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.132508118 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.060062626 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.063048682 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122194723 seconds)
    (111/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06089271 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073054747 seconds)
    (113/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.156167699 seconds)
    (114/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.064974302 seconds)
    (115/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.074570861 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.061991089 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.060880807 seconds)
    (118/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.061361851 seconds)
    (119/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.13355997 seconds)
    (120/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070048791 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10876306 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.060515958 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061191681 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114860682 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116904057 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.070009713 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.06838878 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.060421242 seconds)
    (129/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071989769 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.059778343 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.081938543 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.061622193 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.059883923 seconds)
    (134/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.060580013 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.059722619 seconds)
    (136/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.136105144 seconds)
    (137/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.060888514 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.186026579 seconds)
    (139/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068917221 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069564805 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.059022667 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.059948595 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.062468204 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062001586 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060511516 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.059583357 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.069498049 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067165361 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06060944 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.059447762 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070159657 seconds)
    (152/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.132713964 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.063712607 seconds)
    (154/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.201157017 seconds)
    (155/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061006762 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.060662592 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.067847357 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.084528406 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138040366 seconds)
    (160/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.061278427 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061341139 seconds)
    (162/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.153481078 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142804382 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.060563561 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088016069 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059173719 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113568817 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07034707 seconds)
    (169/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.061249065 seconds)
    (170/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069089385 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06108071 seconds)
    (172/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.06941387 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.079178273 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067784516 seconds)
    (175/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068082057 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138686661 seconds)
    (177/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060932515 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.059193875 seconds)
    (179/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172757955 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068168276 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12260661 seconds)
    (182/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.066935875 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.155807885 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.059370424 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.062342512 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.072655272 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0594889 seconds)
    (188/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.072980084 seconds)
    (189/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.179928956 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.083371151 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.082563261 seconds)
    (192/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.060220789 seconds)
    (193/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.084839823 seconds)
    (194/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.060266886 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.060461673 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.082558926 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.301784355 seconds)
    (198/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091022092 seconds)
    (199/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.063246847 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.135716282 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06427048 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.072670174 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.187888981 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070984234 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110501605 seconds)
    (206/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068571195 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.060734738 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.135203378 seconds)
    (209/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.138400613 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.062097685 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.0674696 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060651627 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06156601 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.0818045 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060629525 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.060188509 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.080076797 seconds)
    (218/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.06003427 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.060938731 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068162353 seconds)
    (221/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.061177731 seconds)
    (222/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061856264 seconds)
    (223/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.139736905 seconds)
    (224/309) benchmarking ("sort", Int8, false)...
    done (took 0.156938518 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.163026601 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.080061179 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061011118 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072126246 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.070870682 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.060827786 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.086775108 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135031595 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.082078889 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.061804229 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.210233534 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068551936 seconds)
    (237/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.068349589 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061792501 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169786454 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.060180945 seconds)
    (241/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.068813338 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06165736 seconds)
    (243/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069290835 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061478357 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.061399812 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069293243 seconds)
    (247/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.060651979 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.084170328 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.059832717 seconds)
    (250/309) benchmarking ("sort", Float32, false)...
    done (took 0.127689625 seconds)
    (251/309) benchmarking ("sort", Float64, false)...
    done (took 0.127163019 seconds)
    (252/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.065121486 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06041074 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060171397 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.059303466 seconds)
    (256/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.067409931 seconds)
    (257/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.060044057 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141753911 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060024533 seconds)
    (260/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.060435728 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061623197 seconds)
    (262/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119681054 seconds)
    (263/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06172117 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135526049 seconds)
    (265/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065078327 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.060576062 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.06845565 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.080023748 seconds)
    (269/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.062989177 seconds)
    (270/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.060114786 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068194913 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068504927 seconds)
    (273/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.060145155 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.060545149 seconds)
    (275/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061555906 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.062892428 seconds)
    (277/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.067805216 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.059476061 seconds)
    (279/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.06171236 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.060725205 seconds)
    (281/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.060346844 seconds)
    (282/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.061994272 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086143316 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062781105 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.063226875 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.060342909 seconds)
    (287/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.060238476 seconds)
    (288/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.060025111 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.061000295 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072030711 seconds)
    (291/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.061982653 seconds)
    (292/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.070649721 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.061731537 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.168556604 seconds)
    (295/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.062076702 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.0605874 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068948846 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123061467 seconds)
    (299/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061053596 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.084561788 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062016053 seconds)
    (302/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.065277141 seconds)
    (303/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.062539155 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.061353491 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060573761 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.059833681 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.059899861 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.060947074 seconds)
    (309/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.060321392 seconds)
  done (took 31.027636722 seconds)
done (took 32.453616998 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081488965 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084091604 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.068577328 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.079734305 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076395926 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094453152 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069294693 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.073129744 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075888782 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.074485214 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07369082 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068233673 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070042035 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.069914236 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.067890961 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082099758 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07560546 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.0686401 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.06869668 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060309522 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.068941751 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.060752856 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.059800066 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067218471 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.071652171 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.067441899 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069104658 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.06938995 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.060957537 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061171831 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065369243 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069117358 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.062704813 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.071524588 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.068502367 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.068437668 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070014298 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.073341345 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.059757605 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.0611566 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070862942 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061357935 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069175305 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.066778023 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.065497443 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.06800136 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.068706526 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.071374508 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.081634032 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064926909 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071327906 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.071325856 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.070856561 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.066139085 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065927509 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.068502979 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.06684182 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08152292 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.06956258 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064796164 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070768632 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.069500238 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067667325 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.068488581 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.068995054 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071870255 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07168367 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067725512 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070902319 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067882568 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.060290067 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.068465402 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065103633 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06070318 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.071912728 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.0740847 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.05959511 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.064810892 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.06830317 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.068485922 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.060252981 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064639481 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.059387911 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.065254574 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064442404 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.066781552 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.065467146 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.067523922 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.059769653 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.068746679 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.067930651 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068625614 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060135805 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.071792177 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.060912287 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067510544 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.060882101 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061110021 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.059709335 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066523528 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.060578732 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064977325 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.068574364 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.059614897 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065395221 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.073133544 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.060330717 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068139595 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.059546593 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060007809 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07101549 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071477555 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.060607671 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064889488 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.059956249 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066503103 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060040221 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.060412163 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.060666979 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.060612449 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065227604 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061155089 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064618776 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.065940751 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.071519816 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060602353 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065274504 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064465463 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06068044 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067304636 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060631522 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060721279 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.059398458 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073451371 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064580081 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060642725 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065502921 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063978036 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.067328842 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.05863236 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.068305709 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.065484236 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.063770101 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.066097273 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.05837916 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.070721003 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064120851 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063343612 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.199082489 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061962332 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060273005 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061461901 seconds)
done (took 11.868896915 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064529444 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.097723692 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.068138225 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.075821003 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.07224165 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.061927956 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.064330091 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.076029877 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.063843899 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.079221864 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08441972 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.080805121 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.085718348 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060005719 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06096791 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062337574 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.059768625 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.067816163 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.074681507 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082604709 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.087819957 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.060917457 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.06924578 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076363475 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.070691636 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.07623396 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.061947495 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06163361 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.063708509 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.077027349 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085053273 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.060990341 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06226288 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.073634425 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.073955533 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.067286756 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.061756808 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.064951248 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.061840726 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061284004 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.062695566 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.074234571 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.064988912 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.067171998 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.061976317 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063691976 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.061409423 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.064077989 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.073612048 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.063926077 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.067922105 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.072312063 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.062971765 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061177697 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.059387856 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.064513946 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061112237 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.061701138 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.061841071 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061014956 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06155393 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063728556 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.062436709 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.061936831 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06451529 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.063295817 seconds)
  done (took 5.973255722 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080170271 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.087317843 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.076909797 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.076931939 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061418056 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061820438 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062172256 seconds)
  done (took 2.035467568 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064406018 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072865788 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.076069847 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076125395 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.068997257 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.078423599 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062105723 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090404369 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06092011 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072712502 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.103760922 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076902753 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064631927 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072866805 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.061934562 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.068899661 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062054229 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069190654 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069075096 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.076898112 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065497232 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087821505 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074534786 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062423432 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.079648953 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.064983367 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.060963854 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06162588 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062512509 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.062393423 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062403678 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097989333 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.064881745 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.072254255 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062668109 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.061212931 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067175606 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064432159 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.063616729 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.069534619 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.065647597 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.062586046 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.060550531 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.062700901 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.063670747 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.0653202 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060220631 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06288638 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062522707 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072103365 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.060690918 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.06489991 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.064328867 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.065697429 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067512418 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065685882 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069588883 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.062794928 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072064434 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.068956539 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062521714 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.069577427 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.068931949 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.066258937 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.100541582 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.065428307 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.064776913 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.065983401 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062256451 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.063647094 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063206037 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.068670364 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061199219 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.063601436 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065632255 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06295436 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.065036941 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.077048996 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077174189 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.0731748 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063324528 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.062393259 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.064981845 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.076654331 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065464721 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062300693 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064636841 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0612024 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066061333 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.062765616 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068002898 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.062879809 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.069722481 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064088522 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.064908962 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.068890855 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061994646 seconds)
  done (took 8.110838626 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066666377 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.062626936 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.063741082 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.062191252 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062434706 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.063451297 seconds)
  done (took 1.937315582 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.084130715 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062332642 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076147931 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.062175971 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.095245357 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.067814218 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.068028873 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069184564 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.073792597 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.073377199 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.067624752 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.070171117 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.067779873 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.063536847 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.067361564 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.062798171 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.067576072 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.064619721 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.072714394 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06369903 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.073660882 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.063157935 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.063342411 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.072530161 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.064112025 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.062617745 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.062856061 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.073093704 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074674207 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.069081087 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.062931719 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.064398587 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.0696998 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.06853004 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.068328438 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069354598 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.061327244 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.066959838 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064231779 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.064313452 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.069770627 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.063233619 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.063959863 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.066774544 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.06879863 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069349583 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.066788673 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065073769 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.067485169 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.066543995 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.066667345 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.062334435 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.064304367 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.066871119 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069442498 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068852228 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.066833725 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.06766552 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.063195955 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069252804 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.061990873 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.064334828 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068719635 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.064401687 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.065985397 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.066886495 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069071587 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06383776 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063834787 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.061919093 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.066684491 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062015385 seconds)
  done (took 6.378440543 seconds)
done (took 25.952777102 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.515592935 seconds)
  done (took 2.020096117 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.552695182 seconds)
  done (took 2.095516382 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.702439505 seconds)
  done (took 8.244684691 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.287136521 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.301627461 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.691948777 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.123095458 seconds)
  done (took 2.984826592 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.718042137 seconds)
  done (took 2.269301094 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.22705891 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.213662708 seconds)
  done (took 2.003107648 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.339073588 seconds)
  done (took 1.884318544 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.082248944 seconds)
  done (took 2.622218226 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.218758148 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.150164131 seconds)
  done (took 1.919046568 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461120709 seconds)
  done (took 2.006462997 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.106553903 seconds)
  done (took 5.654723804 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22781032 seconds)
  done (took 1.814956017 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232703404 seconds)
  done (took 1.783421412 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.756309114 seconds)
  done (took 3.301976722 seconds)
done (took 42.161468004 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079579776 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080639702 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080088973 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075857334 seconds)
  done (took 1.838640145 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070663776 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.064517196 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.068170949 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.068086866 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.066930011 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.067189 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.067585913 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06501826 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066091686 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.064544409 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.063078686 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.064419119 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.067144804 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.064594937 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.066751141 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.067994435 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.064442521 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.064468086 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.067313992 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.064584946 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.06691514 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.064413043 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.063263497 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.064762176 seconds)
  done (took 3.128145659 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075329184 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068138683 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.069986511 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.066093657 seconds)
  done (took 1.833516431 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.073041049 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.078277233 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.079640981 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.083944319 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.071373254 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.070511442 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.076548699 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.078120757 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.060546963 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.079787378 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06305244 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.06184497 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062041946 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.079551449 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.077108596 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058206384 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.059573364 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.070831817 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.069776018 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.072903063 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063629091 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.060534393 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071262864 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.069918249 seconds)
  done (took 3.245164981 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077403474 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061283909 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.072898532 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.084914948 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.086690826 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061014769 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073010532 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.086278862 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.115906255 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06083264 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.066505183 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061038986 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097047529 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061092388 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074816354 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.098460738 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.101830308 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065094153 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.091024604 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061032516 seconds)
  done (took 3.120643155 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073336845 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065078501 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065599666 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061041146 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072186836 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.067971783 seconds)
  done (took 1.970672574 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065655836 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063653372 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063201511 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06187264 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067168605 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062924559 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.0617398 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.062983924 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.062712996 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.062283555 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.0618852 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061663717 seconds)
  done (took 2.31585118 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.159627111 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064189123 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065544096 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06364974 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06629409 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061720338 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.075738303 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.063942708 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.078518754 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062105206 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.061741352 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.063781541 seconds)
  done (took 2.446030313 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094786671 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093190949 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135608487 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109052115 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087515181 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.087834491 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.148226251 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.126984955 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109002558 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.064747475 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080649239 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09330974 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092633952 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124501891 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104677792 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.067667005 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.104195726 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075055792 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106220624 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113686688 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106730107 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113493122 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0857441 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091609402 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099328067 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109845449 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.066581189 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.065654779 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138670127 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.093916423 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.085930163 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092406971 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104026752 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.063921134 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080270096 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.098445249 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077149457 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.1079164 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08371509 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092743807 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074683124 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.122913816 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098717617 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096047346 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123850806 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086199162 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103192849 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099014061 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07657649 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.110586749 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091661836 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085510446 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07426139 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.148492165 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082936425 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102714282 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104443192 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.07509734 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.081734237 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093460801 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.119391567 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097812641 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104581419 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.247642538 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.085204656 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085967634 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.1238181 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080054917 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094011537 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122108589 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.086395385 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.070764663 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.089698105 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.065073802 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.090079154 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100396684 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085624708 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10507961 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071763682 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118768871 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101746062 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.067615393 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109588597 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092113903 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145757026 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089023543 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.094513644 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085001098 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.140241867 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079045397 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074767109 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091193704 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120378436 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087535952 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089702863 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119467176 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089574038 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081235558 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070294399 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082767333 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094157569 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099986511 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094536702 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083123396 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080816376 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089086701 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.069158473 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.074746613 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.093847119 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081492397 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116516084 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102052293 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115522435 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073398893 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098169136 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089761291 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120678537 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.110299237 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.078025803 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100671825 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130929371 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.105817973 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079154689 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093952812 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10349201 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098975136 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.088825461 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126961806 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108174093 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082335998 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085954442 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.237721653 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.105619262 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145105572 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084512362 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.097831329 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130276695 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.106355361 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086459805 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07765218 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088803455 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098328771 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131693388 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.088833002 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.065536133 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085616536 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12269744 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070840948 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092511633 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086557308 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.078018801 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07612813 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.063232304 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097328571 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129093928 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.10660737 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092791907 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.096815166 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065161069 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093636052 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097974571 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132870958 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108934057 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091659949 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.091777276 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097324747 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073804862 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.124064512 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.124265919 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085387127 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084229987 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11561582 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089064247 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.097682709 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10685059 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096494695 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.094914566 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133031249 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112288369 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.115711426 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098025554 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115697792 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075934147 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108561633 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.069285396 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09690266 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.071225087 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098550073 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.073226066 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.103336882 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072772092 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.092459632 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.063532276 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.068343385 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.255139273 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084349084 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081135516 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.126649828 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.122638406 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076079884 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094568806 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093841499 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094889246 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101609741 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084159366 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085489254 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073343093 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.075242113 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091373678 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08694812 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101707266 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073545125 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070616158 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130009666 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096306109 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084306408 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087731668 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.111754936 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082519069 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081555817 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096527962 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129682657 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.110107063 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074482243 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.085137332 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.064586975 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.07888399 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.070835764 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101302214 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.069366275 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104291732 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.063890998 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.120993756 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080384797 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094682249 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090596189 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12002838 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08393513 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119860029 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080960095 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100345062 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087022137 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088345165 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102010741 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.088908612 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09846082 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104086716 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08688429 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084029786 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112733901 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098616514 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109521182 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099875003 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127200338 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104237896 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069995916 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097218526 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09435362 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14437842 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092517717 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082746932 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088350906 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095906694 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075124553 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.283860161 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081181238 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.080589809 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106421883 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.083542669 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090689695 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071121092 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.093998817 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087627961 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105872136 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.093028499 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.087282103 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102402258 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102737953 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080462833 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080747975 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116544878 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.120543849 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.09516316 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087566035 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082288725 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093974344 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087310247 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.10171436 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074955848 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.070351381 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.063480672 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067502328 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.109462441 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100452786 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091615574 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091860149 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095255944 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.067043874 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080959636 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084124673 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.077646749 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083654814 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.106829092 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096744872 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.120681776 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.09544325 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085921364 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132696844 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121316006 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083852707 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085809087 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094037771 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.071690137 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138043585 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111165393 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07260588 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076986612 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.071688268 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079767759 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.066689157 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097068574 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096773697 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070722491 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095949876 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090922583 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.115365418 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090594638 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07111356 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.07391599 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.069165424 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.069814467 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.095109339 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.071623173 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070778741 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120082002 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095077404 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098284496 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076707621 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.222025215 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124636809 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065754035 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124314489 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07756494 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103131171 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.075508484 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074349293 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083791445 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099765911 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098918957 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105922573 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066046189 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096286685 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145701765 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070905478 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.06978255 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070056643 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103966408 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081149143 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134170126 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083871617 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086168508 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071815369 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119816247 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097239722 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077086038 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12000429 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074228327 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.066349033 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08016676 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103800887 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.067396694 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.069644377 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106704194 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.625779771 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084539015 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.070371933 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082726856 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119849122 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077543527 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101244067 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.110145276 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099904852 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.173306499 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069203222 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084869983 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.097326904 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090977929 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085349897 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074110549 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.082850433 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081568729 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.078537846 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099574751 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.075126362 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084726573 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.074147897 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.096485477 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.121321997 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079929143 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.094934778 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081682324 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083892078 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09182999 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103848426 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.098353074 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.080876359 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081763054 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100410527 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07709844 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.226996784 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094336939 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.072388633 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073678189 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111565691 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.078857472 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.087525874 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09709834 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.083548434 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106210912 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110374215 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104001534 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09078133 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073993641 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0798297 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.082061063 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069554484 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073393873 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.06997067 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.065851191 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100435759 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079413232 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076275248 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.093068365 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102732402 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093815695 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099177403 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084086155 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091390886 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093850461 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.118502966 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144976897 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093285765 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.11534556 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123300331 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.071357699 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.070179043 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.074771107 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122953763 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.075395788 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086491 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.224606173 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072625131 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076254159 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085417914 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100803547 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077890259 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074886053 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092603398 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104017067 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079352345 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075675921 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087235356 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.100027582 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.120979395 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083297288 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.071641048 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102458099 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095480318 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116062351 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.068640274 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07578605 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.120632192 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081632998 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097740993 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074681798 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117677589 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122623492 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068326706 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082346345 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065242494 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080503115 seconds)
  done (took 47.990780517 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.145150004 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.136411953 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078144108 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.093186804 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.181035618 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.190043701 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.113038771 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.08982179 seconds)
  done (took 2.745416132 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065292377 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077187132 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09416899 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.077017699 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.061925562 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063112635 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.187191189 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.075679754 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061779139 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099934195 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.070115416 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063624239 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.338145683 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061673663 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062364444 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069676733 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06282234 seconds)
  done (took 3.258837539 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.352872375 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600492717 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.310075085 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.069909023 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.672744159 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085504483 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.079626897 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130661513 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076433162 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.511486364 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.363754567 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123473547 seconds)
  done (took 18.053956898 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072771188 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069884867 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.072578148 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07277736 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069185515 seconds)
  done (took 2.028756943 seconds)
done (took 95.550250935 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07852836 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.159326993 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063275481 seconds)
  done (took 1.928208505 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.079102695 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.075476734 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.075765843 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.072731996 seconds)
  done (took 1.98276178 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.0717745 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071263234 seconds)
  done (took 1.815741825 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221736527 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.15536549 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085138522 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079596117 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074168819 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075011116 seconds)
  done (took 1.911240237 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069036458 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.066574258 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.066950193 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.066838918 seconds)
  done (took 1.940126149 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065141667 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062641999 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.063757664 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066233344 seconds)
  done (took 1.929981609 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.080073623 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077835566 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073136078 seconds)
  done (took 1.904350962 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106103529 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090689385 seconds)
  done (took 1.869872988 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.07713742 seconds)
  done (took 1.753644017 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086791465 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.090837054 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133179697 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.099816865 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.132206715 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118430292 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.071168303 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.072344608 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.068434767 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.06780788 seconds)
  done (took 2.614225829 seconds)
done (took 21.865157653 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076095039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.357124237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.354822492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0803302 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66315662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35176755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96048923 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.084594457 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.09294728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063670508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079279444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.643718008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.953993217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320987673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.941124088 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320453052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.644349241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063672215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06261911 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063554583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948115056 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062765163 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063540014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063587035 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645035214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.36774474 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064169344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320178816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063340475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065278622 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.350630535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06454774 seconds)
  done (took 15.908035197 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068088711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114285238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.067890414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.077979047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065713798 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064824598 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.066771896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.063916081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.102182546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06354655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079432138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063006379 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067103608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065413824 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.082867514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064177291 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065927965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065185088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067866175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065026307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081418212 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064287598 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064655464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064743272 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064814965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076282619 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065166969 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064016341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064659039 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066410119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067750226 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065361969 seconds)
  done (took 3.941602341 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116764383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118004581 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068885297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102034932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110714504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065437972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141531832 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08507493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105790288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063835496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079889695 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06486375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098298188 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065301316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083462157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064404796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06575312 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064862567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064036298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065364285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081867711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063843624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064586494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065182767 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065417715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078142365 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065099655 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064420936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064530092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066686927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068552163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065358238 seconds)
  done (took 4.204697269 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066880467 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067196067 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.074479824 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.075177246 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062648947 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064590461 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.065892756 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.062632342 seconds)
  done (took 2.237166691 seconds)
done (took 27.987993619 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075661261 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063883738 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066887502 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081929133 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.068959607 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.065770174 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060495295 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.06924973 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.066598447 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.066495161 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068432708 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062738229 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.0654379 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060200729 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068072971 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062580742 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068404677 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.065722619 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.066427635 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.067513314 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064208911 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.067070048 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070019785 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.066349801 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.066501047 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.066226781 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07061466 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068005006 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062300693 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065175842 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.06423041 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075535817 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068067081 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.068088948 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062557074 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.061914298 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.06646379 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064224475 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068690607 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.070225401 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064548251 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073254368 seconds)
  done (took 4.478691137 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084963683 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088255787 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080648548 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077367654 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097866182 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.076937895 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084344944 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074456099 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.072485845 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083249139 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069029425 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.073686653 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.074692572 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067478456 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073680406 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070552912 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075110536 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06891215 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074130477 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073734037 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085438102 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067719706 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074637158 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075488207 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069435019 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075013103 seconds)
  done (took 3.693136373 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069852921 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08235686 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.085684207 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132302155 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102790946 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07684219 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076948505 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09609323 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093918079 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064087017 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067564827 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.088501062 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090588012 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070081707 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.100136025 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.080260266 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.074006482 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.064973802 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069811268 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096324084 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084900468 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080849231 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094348575 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082164518 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063036213 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072323484 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069545244 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.077136738 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069941821 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074787935 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.0668502 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.066792004 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063487276 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.074493077 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.066602229 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.061070877 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.083196739 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075073958 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076259924 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.101620869 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071965285 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064490125 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090235541 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122878963 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.062687076 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.065764222 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.066530867 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074470923 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064205718 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090132604 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080157832 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062534315 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.080370056 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063980099 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064041489 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078003517 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064582879 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.064819896 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074163766 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068572441 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082330757 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.06739379 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081162312 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063183526 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07332867 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064256225 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064691802 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.061940614 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09589156 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069536695 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110961781 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.063714194 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061081365 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074269234 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073227429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068929578 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.062823552 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079687085 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0736533 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066689806 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073849381 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065839579 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066429275 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096036282 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.061771553 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061605576 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061245841 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065480975 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065987477 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063551532 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.075737351 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062155582 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066377929 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.076673497 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062611987 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064243881 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.065016622 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064018616 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062175076 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072677534 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066219219 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064488874 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07427022 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063759548 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066503757 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077429735 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071659495 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062463653 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.063987312 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065022628 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06480815 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067081668 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.065909473 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.064884657 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.068277207 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.069515974 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068442639 seconds)
  done (took 10.323699879 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155735986 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.142614654 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.064397999 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.138022653 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07139332 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.067545132 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.138733972 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.081657386 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.063745994 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064936779 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.062814092 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.089176895 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.085308108 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.096571404 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.067505687 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064178622 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087964833 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.094128894 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.141038464 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.135953349 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084892983 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.070321314 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065863497 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.064897129 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065307689 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072012877 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.079366097 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07133173 seconds)
  done (took 4.231092997 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072930505 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104044056 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067239629 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.085837536 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.081051926 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064094906 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.065554973 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.064708046 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079931127 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.070415751 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063672215 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.067680842 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.066886465 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.065691529 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.064635233 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070131363 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070206429 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.062313494 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067150772 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.067871777 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073459569 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.087283561 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.067148597 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063745832 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.065356584 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.062985569 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069946993 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.072326421 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.062957194 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091499202 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.060822708 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.06783036 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.076919444 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064299671 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063188732 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063893841 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.063946278 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063707402 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.063912838 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.061687568 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.061824953 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068424102 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062369959 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.068958474 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076099979 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070354122 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.064546099 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.06559098 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.06559376 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.060642116 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066232305 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066285974 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.065879076 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071237911 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067269685 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.06581136 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066407338 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091105961 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.068770111 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062919622 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063286259 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06207621 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.06449751 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070860032 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078775524 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.064273234 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.061919704 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063745712 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068061765 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076479782 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062853573 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067974268 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.060954069 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.063968154 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.065225772 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065886288 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064402343 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062170404 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063306128 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063169726 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063615597 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063124434 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.063190773 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066095427 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.061440738 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.061798667 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063844758 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.064424453 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.069335731 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062227858 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.065669892 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065018681 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06248592 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066086354 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068321194 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067947393 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081642131 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.071833002 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06364275 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061916633 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077147818 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065081158 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062628814 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069294421 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067434505 seconds)
  done (took 8.852650379 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085964816 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.064879983 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081813867 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087882666 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07367568 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069138601 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076395569 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.064549861 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078576085 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063080105 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07220195 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062103327 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074966065 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.071514464 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065153522 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.072822936 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.065913556 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082373901 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077409917 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062215007 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071260572 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07482482 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075369358 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079808619 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079286833 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080207675 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.074934691 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066857522 seconds)
  done (took 3.80874431 seconds)
done (took 37.081967899 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.766819388 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.943764669 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.766200871 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.97627355 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.823593517 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.897486855 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.862816668 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.761339937 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.887674426 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.79043319 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.031515407 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.196720146 seconds)
done (took 66.465655073 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.779116828 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.912338905 seconds)
    (2/2) benchmarking "String"...
    done (took 1.974611319 seconds)
  done (took 5.586392279 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.972380802 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.3990476 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.025427382 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.763556743 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.765763269 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.188233464 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.52796945 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.205481204 seconds)
  done (took 30.574379609 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.849220718 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.980234227 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.428608272 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.463819086 seconds)
  done (took 15.468981362 seconds)
done (took 63.176196125 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.801831288 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.762895433 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.779784737 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.793556101 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.766182927 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.763211907 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.761586318 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.764219522 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.767297807 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.813630806 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.76153043 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.762710367 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.765419718 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.813263472 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.422273601 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.827277951 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.781022056 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.768887667 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.787839186 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.788640034 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.768691467 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.767881353 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.222292672 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.952123844 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.371653332 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.054721248 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.317755673 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.149237023 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.777950214 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.765480991 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.856657722 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.055082976 seconds)
  done (took 204.010228335 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.769289013 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.646543094 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.688372235 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.77256964 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.133532308 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.945877301 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.872292054 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.18540275 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.77161704 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.798616091 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.940451462 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.769689131 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.961573884 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.713133767 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.807074183 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.859447693 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.922907646 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.969330094 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.808211767 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.916226236 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.797833261 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.776536155 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.73595657 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.906029163 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.769823119 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.859945035 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.793812166 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.780562863 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.959791287 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.913034646 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.78671169 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.786828501 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.929034228 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.640347844 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.775262035 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.790743338 seconds)
  done (took 168.962353755 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.959688924 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.778633626 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.769939508 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.825143453 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.891651311 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.772778762 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.412310616 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.778811216 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.21194639 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.77263664 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.773010223 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.772336153 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.770640105 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.772739406 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.785189145 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.850007838 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.771324581 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.786970327 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.7745696 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.801321791 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.771817055 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.771669593 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.77242138 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.771084738 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.771415346 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.770211587 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.771955196 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.91660348 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.827014392 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.011583143 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.774389238 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.773366733 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.785475134 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.348235605 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.771636137 seconds)
    (35/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.773291452 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.865224712 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.825392783 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.888014293 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.771274206 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.772708053 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.989790916 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.84652052 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.775352134 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.771445798 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.838221282 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.78447986 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.771202102 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.774464346 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.779393605 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.837400556 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.021069484 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.771815363 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.89060914 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.255605591 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.769671304 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.772177581 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.77277857 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.356376921 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.771773275 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.773137218 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.778227931 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.776644989 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.775476249 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.771750776 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.160204313 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.844289392 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.824492251 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.247007016 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.774014324 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.350995512 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.853029228 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.770206472 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.770527246 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.771647187 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.773222491 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.771056973 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.774213363 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.891999567 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.779047839 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.88561945 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.85149874 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.892860087 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.773359608 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.781241765 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.602707025 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.841296246 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.807834944 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.772822218 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.598053168 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.771449444 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.146516054 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.538822072 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.772695549 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.772436996 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.786374912 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.771966631 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.776481813 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.775799521 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.854599035 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.772810786 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.895761889 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50008897 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.266573266 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.775309449 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.770102646 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.779309215 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.852362774 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.892075906 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.772345042 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.838440722 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.778660333 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.776246303 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.850178095 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.771242158 seconds)
  done (took 401.151544284 seconds)
done (took 777.845802821 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.359640131 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.336931977 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.416630661 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.349006148 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.322955034 seconds)
  done (took 13.490131425 seconds)
done (took 15.195620762 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.786623587 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.777956047 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.830295117 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.854848765 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.796764456 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.79113949 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.853882201 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.792042289 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.825056572 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.829733934 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.859475966 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.858285451 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.797225724 seconds)
  done (took 25.362054801 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.782164719 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.919086273 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.197703177 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.813262351 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.784356006 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.998031866 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.838741988 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.90988625 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.916744949 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.001762669 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.026956192 seconds)
  done (took 22.899674545 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.782917073 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.917362599 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.001353033 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.818778787 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.786192077 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.997065629 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.848011704 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.910624997 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.929864234 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.000053735 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.010409129 seconds)
  done (took 22.723163143 seconds)
done (took 72.695395809 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.777884437 seconds)
  done (took 3.487239805 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.797399741 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.928138924 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.77783344 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.779827692 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.777468725 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.778992445 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.780026112 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.778329965 seconds)
  done (took 16.108358441 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.783178748 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.785064813 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.783390881 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.782295501 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.781780539 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.783519508 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.783766279 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.783592441 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.783265941 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.783432452 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.784220411 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.782175078 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.782418659 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.783077896 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.783453986 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.782955228 seconds)
  done (took 30.243986729 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.788806709 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.785583368 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.783212162 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.784909842 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.783274472 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.784983389 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.786356107 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.783733105 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.785948318 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.784133084 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.785618837 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.785065825 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.784122936 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.784020873 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.784430027 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.785246388 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.784884017 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.787906903 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.790585886 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.78462372 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.786343201 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.784658022 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.786613287 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.784450549 seconds)
  done (took 44.562900054 seconds)
done (took 96.12358901 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.618957792 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.618689972 seconds)
  done (took 9.950201192 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.785291439 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.785774336 seconds)
  done (took 5.289420443 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.786128416 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.785798118 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.785510778 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.786017468 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.784900511 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.784965972 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.785142388 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.786502572 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.786665037 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.786866367 seconds)
  done (took 19.570956123 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.785750831 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.786439579 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.785240557 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.784622612 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.787756886 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.788067178 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.787641498 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.78735906 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.788276583 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.78819311 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.786064512 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.785873282 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.78592566 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.786494864 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.786186899 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.786602844 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.785384243 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.786306752 seconds)
  done (took 33.872203396 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.785826859 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.787921948 seconds)
  done (took 5.287388619 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.788015712 seconds)
    (2/7) benchmarking "second"...
    done (took 1.788000039 seconds)
    (3/7) benchmarking "month"...
    done (took 1.787124664 seconds)
    (4/7) benchmarking "year"...
    done (took 1.788469717 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.788106575 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.786431338 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.78751509 seconds)
  done (took 14.227910643 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.787260612 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.929450142 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.983484294 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.38626615 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.789280211 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.791391705 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.6717379 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.791734591 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.792833113 seconds)
  done (took 19.637921108 seconds)
done (took 109.550142232 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.604314151 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.782198704 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.038834034 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.903848543 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.789828031 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.078731345 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.799580374 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.425940749 seconds)
done (took 42.138590603 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.867973462 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.782652389 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.828520432 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.825459948 seconds)
  done (took 22.152426575 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.784051039 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.094076186 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.804313449 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.649048194 seconds)
  done (took 22.063812828 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.157712264 seconds)
    (2/2) benchmarking "read"...
    done (took 2.139746401 seconds)
  done (took 6.018895014 seconds)
done (took 58.8217493 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788190593 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.78919593 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.788881284 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.788394801 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.789023787 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.78846833 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.789090279 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.789862797 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.790431241 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.789700155 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.789024749 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.788815827 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.788111525 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789095581 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78833742 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788804613 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789667777 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.789817012 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790000086 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790352867 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790095527 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.790151041 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.790486588 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.790506173 seconds)
  done (took 44.662811836 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.79272716 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.791264091 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.790888149 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.7913696 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.790239614 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.790565487 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.790178961 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.790573335 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.792098053 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.790139084 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790219275 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.790660772 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.79057734 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.792117874 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79095354 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.789950816 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.79028085 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794277408 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791557457 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.789922639 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.790884746 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789973688 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.79153433 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790054495 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.791220558 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791679663 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.791567874 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.791372269 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.792044074 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.794282107 seconds)
  done (took 55.453583475 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.791970921 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.791326263 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.792041603 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.792744506 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.793225871 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.791931455 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.79166693 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.791665836 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.791233214 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.792240578 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.792412673 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.79249817 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.791978264 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.791949298 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.791798218 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.795366206 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.792208198 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.793219834 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.793237346 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.794392392 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.791411936 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.794081036 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.793162038 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.792422892 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.791909584 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.793830938 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.793976533 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.792498926 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.793132852 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.792891466 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.793245192 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.793452431 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.797242096 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.792722279 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.792388544 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.792112208 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.79497409 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.79287454 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.793885982 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.793365237 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.79119504 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.791422931 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.791693451 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.792787942 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.79231003 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.792791612 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.792569228 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.792277572 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.794053299 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.794715266 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.793736702 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.792782068 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.791051579 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.79517291 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.79474524 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.792676148 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.79438359 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.794179871 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.792493491 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.793111991 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.795009202 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.794526697 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.794138882 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.794840212 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.793046507 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.796900886 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.794079627 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.794580532 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.794761137 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.792709574 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.794496725 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.796144764 seconds)
  done (took 130.832996449 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.794370788 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.79401415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.794129079 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793695721 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794561497 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.794000452 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.797253619 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793546911 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793739664 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.797329826 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794922998 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796200303 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794678074 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.798326416 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795779427 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.797576287 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.793851829 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79600091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.794502442 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79623 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79363444 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.795416652 seconds)
  done (took 41.21536398 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795030913 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.79610623 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.796449241 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.797872452 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.794330829 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.794753632 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.79640017 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.797111564 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797500642 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796189514 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797077968 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795680948 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.796628527 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796396606 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796805706 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796813113 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796761933 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796593789 seconds)
  done (took 34.05827496 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.797797194 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.796406543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.798029444 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.7958453 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.796708304 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.798650948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797828936 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.796964955 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.796808335 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.795414004 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.796932351 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797322588 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.798061601 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797636113 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796992259 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.797783033 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.797990126 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79833659 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797995796 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797507969 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.79630339 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797325764 seconds)
  done (took 41.266187173 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798500302 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798875856 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.798941509 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.798982409 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.799151529 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.798760323 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.799240141 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.79839307 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.798499623 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.799308522 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798889164 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.799370239 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.79793347 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798929642 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.799914899 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799509878 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.797986307 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.801651081 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799386996 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.797707262 seconds)
  done (took 37.706942555 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795253537 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794205152 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794485674 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794934676 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794976835 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.794634078 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79602534 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.795932188 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793215868 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.793565796 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793874247 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.79361576 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79631352 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793536102 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793966217 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795321744 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795394372 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79374586 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.794176558 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794879961 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.796077355 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7940534 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.795525921 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795132145 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794437839 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.795198839 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795206951 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79437769 seconds)
  done (took 51.979296501 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801510143 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800827961 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.801323796 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.801252078 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.801858289 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.798456792 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.802662019 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.801588186 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.802347375 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800462186 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.801495348 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.802384605 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.80152981 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.800669878 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.800971973 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.800994129 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805532176 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.801208259 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802787135 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800730658 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.801295727 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802213957 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.801716816 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800999226 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801247844 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.802688998 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80217878 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.802266048 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803143161 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.803289488 seconds)
  done (took 55.786223423 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.82082943 seconds)
    (2/2) benchmarking "in"...
    done (took 1.823762408 seconds)
  done (took 5.374006441 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.800683124 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801329854 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.802497988 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801464727 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.800699996 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.801504608 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.801755271 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802214722 seconds)
  done (took 16.145336414 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.80309063 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.800723545 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.803725287 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.801828245 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.796936382 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806287301 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.804733031 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.801393128 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.799684157 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.799667769 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.80303918 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.800600065 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.806891479 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.804575004 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.804283764 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.800248091 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801168341 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800548289 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.80029245 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.80338654 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802103419 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799078293 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.803430249 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.801730948 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.804631453 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.802302266 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.810119535 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.799027585 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79940119 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.806453101 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.806376551 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.803680628 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.799203451 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.801011315 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.800426727 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.806010521 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.806871017 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.79950381 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.798462314 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.80552888 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.807770071 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800894749 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.803137304 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.808666381 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.800899686 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.805964901 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.806588986 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.798946246 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.801063203 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.8042186 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.814249736 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803288216 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.804762855 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.80485958 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.803163633 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.8007468 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.80166031 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.804753512 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807709407 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.808831156 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.804687897 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.821210745 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.810369819 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.802090811 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.799681445 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810821517 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.824563813 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.802580387 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.80373723 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.807667559 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.809893556 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.80770714 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.805825427 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.809844156 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815880973 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.810088754 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.800745323 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.807209421 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.806600352 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.805001215 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80413983 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.802365784 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801730477 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.80139587 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812088449 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.830157439 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.801105394 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.802940655 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.803836087 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.805158736 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.810151298 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.805294923 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.805026082 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.806865606 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.803730429 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.806560721 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.803222867 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.802428853 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.801944185 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.813549469 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.809064488 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.809640195 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806173753 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.811643771 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.807172107 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.803569576 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803335664 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.804095819 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.811193312 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.803262861 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.804206439 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.809957668 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.80784231 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.808356906 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.809517647 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807149488 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.812500306 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.812719494 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.809819871 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.807052932 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.807972909 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.806345057 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.813011388 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.834891942 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.808778382 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.80766719 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.809885241 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.816530445 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.809178242 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.811372313 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.808360835 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.81083947 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.809161464 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.807387858 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.8114109 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.804753016 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.811287465 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.805572174 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.811651862 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.807165869 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.8102124 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.807913761 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.809390421 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.807309295 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.810163305 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.804687671 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.809956173 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.813162922 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.806315007 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.806909109 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.8101179 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.808233632 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.808376012 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.806492961 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.812399039 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.810936572 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.807347324 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.809269406 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.807910534 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.807321346 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.811343624 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.808329446 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.81551074 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.80684132 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.80667991 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.807466317 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807263907 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.805394284 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811817867 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.805783335 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.808162079 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806697589 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.811290718 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.814541608 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.810388021 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.807485251 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.810002858 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.807967794 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.811692731 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.819733391 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.811658738 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.817957796 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.812156153 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.814850204 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.814748694 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.809137172 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.808879225 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.80713151 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.806680366 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.81830301 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.813328717 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.812159392 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82984002 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.820273683 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.809600385 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.812382927 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.815407961 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.817991931 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.81508842 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.813202463 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809900735 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.812784203 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.808209653 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.807529776 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.813743397 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.811819079 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.811714807 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.813701321 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.812947466 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.809266081 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.812912326 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.808498432 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.815297271 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.811415701 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.814400665 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.808638746 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.809489124 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.816080124 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.816009862 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812596397 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.813635538 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.809887038 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815169069 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.809424219 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.814295656 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.810782618 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.812333811 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.809368829 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.81177571 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818427407 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.812005551 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.811087912 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.809742527 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.815233781 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.812598197 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.817888521 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.813531621 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.824912774 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.812845264 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.817824832 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.817446753 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.816183651 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.814355033 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.811136639 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811186478 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.813246923 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.812433044 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.812404564 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.815803655 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.819260905 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.816732706 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.812188622 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.816967032 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.815542738 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.814321512 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.81483781 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.813405129 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815508412 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.81889782 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.817867988 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.812922058 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.816917473 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.814040822 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.812664315 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.820499418 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.813587418 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.825999119 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.822814312 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.816948893 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.817621179 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.811183905 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.815082798 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.820764711 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.811819078 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819635025 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.813840699 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.814108436 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.820869117 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.812500422 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.812550749 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.819479174 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.814881029 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.815827333 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814496577 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.814268761 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.815587036 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.81899374 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815591804 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.812888767 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.816879238 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.821739074 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.818191716 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.81392309 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.818528871 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.823508884 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.818547835 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.815499632 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.823431986 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.815679253 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.814831801 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.817163627 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.820243052 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.816168122 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.817431876 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.8149657 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.819961823 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.813886936 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.816847599 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.82443826 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.817938202 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.824167422 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.81662351 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825114694 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.814702235 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.820267814 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.814730304 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.817103343 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.822563514 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.82070208 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.816567695 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.823355187 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.816380339 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.818318642 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.818191699 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.82026393 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.814932194 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.814978414 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.817912375 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.821703918 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.81892297 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.820287539 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.815823012 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.818795586 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.816345731 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.817897773 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.816868304 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.816363607 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.815736826 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.82203202 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.815228563 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.81692346 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.815487873 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.815630816 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.821668138 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.820571736 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.824177346 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.817519935 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.816927588 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820615224 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.821376734 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.823356982 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.815723375 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.816763591 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.817662121 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.822307301 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.821160563 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.822450101 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.817420209 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.818357424 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.822356866 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.81954427 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.828204389 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.825537505 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.821008409 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.819020295 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.818986248 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.820433678 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82530899 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.847955135 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817682999 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.819776155 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.830489761 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.825127152 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.82006409 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822722972 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820464612 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.825154996 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.81967626 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.817930572 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.82032918 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.82998453 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817527277 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.823261575 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.824100538 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.822452097 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.820585584 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.823708815 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.820217059 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.821904854 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.820164582 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.830851886 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.823002188 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.821044032 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.819502291 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.823980345 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.819765378 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.824328738 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.819664965 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.821045436 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.820138606 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.81967078 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.820801878 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.824485711 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.817302427 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824252358 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.829448433 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819756205 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.819818632 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.820804872 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.820323951 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.823453406 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820141322 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.820306854 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.823005856 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.824756591 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.822198805 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823654406 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.828938956 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822765555 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.825428345 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.825194866 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.826235714 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.821542389 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.819708629 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.821835367 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.829573036 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824738044 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.831141936 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.830791438 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.821272404 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.822250578 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.828449828 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.829082723 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.820354908 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.821066841 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.821278512 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.82330388 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.824181478 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.821527217 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82214105 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.820658196 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.826452639 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.826502309 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.822989187 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.821810816 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.826584765 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.824568974 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.822904252 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.827384618 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.827038651 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.825728169 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.822322805 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.821396595 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.822119654 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.824553649 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.823458757 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.827959744 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.824844051 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.824669579 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.832335714 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.82597978 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.826994681 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.823934173 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.827497692 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.825025032 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.823683459 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.822746313 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.827151277 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.826424645 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.830916439 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.831660164 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.824666477 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.826842969 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.826610504 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.822214285 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.823784245 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825166243 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.828084017 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.83192732 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.828723657 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.82358488 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.825135192 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.828048973 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.828372923 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.824795739 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.828179795 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824331866 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.827048288 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.828280323 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827044316 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.834436907 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.827798569 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.827654046 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.83775225 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.828724791 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.827402118 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.829683442 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.829876447 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.824979378 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.82614785 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.827561666 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.825308968 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.826150128 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.82853153 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.826199885 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.82445911 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.826727874 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.830731011 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.830185737 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.828298738 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.834235397 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.835515835 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.829923186 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.826497374 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.826464544 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.827596918 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.836426013 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.824285458 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.82569089 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.827789726 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.830512842 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.82849129 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.833241221 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.834454121 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.829340845 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.825561646 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.831904597 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.845220242 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.828704005 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836768597 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.860058057 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.828809204 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.827044292 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827678326 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.828900348 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.826445493 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.834779578 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.825502409 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.83353712 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.826893719 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.830464321 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.836246667 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.832917759 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.83288718 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.826447691 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.828516972 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.832182812 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.826344605 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.835094594 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.826584744 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.830823695 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.828660835 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.833015291 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.833193264 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.832594191 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.832442123 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.83020826 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.832601995 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.827494765 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.837760686 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.828558278 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.829881719 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842173804 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.841862334 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.828213246 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.832436337 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.828765096 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.832683934 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.831858479 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.836378651 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832088623 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.842042636 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.832523257 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.841038081 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.829152754 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.829998073 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829400315 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.834385417 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829105432 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.841904284 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.839219121 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.830756819 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.829549954 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.835577007 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.834890321 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.838210963 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.834812375 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.829475941 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.830082267 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.830087129 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.835937065 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.833962791 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.834227836 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.833478407 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.843713569 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.830884362 seconds)
  done (took 1085.158637952 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.83488547 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836358601 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835377103 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.835275465 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838134894 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83623962 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835864367 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833966915 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.836516563 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.835680045 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.837096668 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836309663 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.835596328 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836183991 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8369145 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.836312697 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836415092 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.836736271 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836042389 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837518776 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.83657005 seconds)
  done (took 40.321621084 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.836207122 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.836754754 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.836197784 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835200531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836777386 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.836173353 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.835906269 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836777086 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837065626 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836664868 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.83762687 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837934254 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.838170766 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.835353853 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83756224 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841657406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.836462791 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836041619 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.836877775 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.837398588 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837825499 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.83783219 seconds)
  done (took 42.179909857 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.832400898 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.832019297 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.833409502 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.838215892 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.837308987 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.833054644 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.838998635 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.836808105 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.834103571 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.835792398 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.839497326 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.847123853 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.838312595 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.837284309 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.839000268 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.832292582 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.984505598 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.833624655 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.833112452 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.837923492 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.831984018 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.841345827 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.839765823 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.838404298 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.833824847 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.833716658 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.838324172 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.838999603 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.839062011 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.836937869 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.839161516 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.839576929 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.835454932 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.837310913 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.835127132 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.835766957 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.838183772 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.836309084 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.839753519 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.840880978 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.845171602 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.869540852 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.838537851 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.834740767 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.843240271 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.840428787 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.840310071 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.838461359 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.850097387 seconds)
  done (took 91.99020656 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.840162558 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.839288354 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.839904601 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.841945843 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.841498819 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.838806378 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.839439536 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840735805 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.843134075 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.841554708 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.841744742 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.840555325 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840339677 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.839940065 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.840358614 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.841177512 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.841312362 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.840712851 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.841636051 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.841511205 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.841055518 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.839712601 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.841492702 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.840649703 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843909226 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.841548156 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.841333662 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.842529221 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.841580617 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.841930414 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.843160876 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.841475422 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.842407617 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.843187693 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.842048386 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.842045744 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.842456147 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.843664291 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.842549581 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.843301469 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.844344895 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843994017 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.843717553 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.843078875 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.843115327 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.842264527 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.843922045 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.84333083 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.843448383 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.84333305 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.844022153 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.843347646 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.842047343 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.842426063 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.84613523 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.845137202 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.844452721 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.847693857 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.844630576 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.84466935 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.843768491 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.843905409 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.84413351 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.84476869 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.843962725 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.84508375 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.844334251 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.846683328 seconds)
  done (took 127.061926264 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838584884 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.838513727 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838490486 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843264316 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839433757 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.839984293 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83967967 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.839172106 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840500948 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841752843 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840890189 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.844458112 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.839477836 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.845340882 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.842410468 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.839679335 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.839327339 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840629524 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840473589 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840633714 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.842841674 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.838646819 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.839779559 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838906499 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840812222 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.842066764 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84136084 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840143263 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840500313 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.841708567 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.842100998 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.84183321 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.84013283 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.841788086 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.84019213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.841028109 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.844516953 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842261314 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.84127599 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.84072482 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.841474953 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842826913 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.841608798 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.841635604 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841575197 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841889657 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840327045 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.842107515 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.844728967 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841204378 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.84210945 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841494209 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842892791 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842876527 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.84210088 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.847179643 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841229674 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.841742111 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842195363 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.841246232 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842744936 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.845807396 seconds)
  done (took 115.939889826 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848479623 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.847801875 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.846942738 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.846861547 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.847452655 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849672724 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849697602 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.847936508 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.847470427 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.846746752 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847285828 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849148798 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849781597 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848064568 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.848370645 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848765588 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849109941 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.848228951 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849339992 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850365906 seconds)
  done (took 38.740866603 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.84760148 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.850539997 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.849180058 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.848394742 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.848938045 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.848163413 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.849477036 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849133016 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849924145 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848271569 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.847762829 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.849605406 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849660282 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.850430851 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.849666355 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.848804311 seconds)
  done (took 31.360607032 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.84925514 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.853630263 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.844409001 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.84530258 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.848049154 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.85125495 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.849060486 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.848242196 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.84991913 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.849589821 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.850324434 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.8506148 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.849510712 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.843422888 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.849764841 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.85167782 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.852051102 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.852376319 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.850498887 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.84499631 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.851302088 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.85071732 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.851496831 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.850215462 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.851398803 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.85010213 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.849573704 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.84937178 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.850895956 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.851321885 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.850394988 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.850998932 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.850326647 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.851455528 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.845694275 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.851611271 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.850407784 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.850356928 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.851682832 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.851665404 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.8517937 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.850870538 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.852553289 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.852665407 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.850831617 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.852183166 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.851480583 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.85163482 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.851581865 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.853149741 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.853932241 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.846720458 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.852682642 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.85291184 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.85346887 seconds)
  done (took 103.552382157 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852966464 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.85192594 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.853069812 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.85287606 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.853123143 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.85279254 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.853032688 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.853118842 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.853196966 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.853484332 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855752221 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.852815706 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856594876 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.853811728 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853192729 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853048566 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.854620562 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.852816741 seconds)
  done (took 35.141488625 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.853817448 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.8543763 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.85556149 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.854476956 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.853393781 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85390003 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853076975 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.856475059 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854456789 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.853102986 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853906988 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.854627563 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854849214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.854065544 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.854888067 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855461721 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.85345626 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.855299923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.855704345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.855553428 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.855958216 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855034691 seconds)
  done (took 42.580614143 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.852334839 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.849838531 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.864316853 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.873266218 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.869822299 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.886548889 seconds)
  done (took 12.975633288 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8542456 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85511008 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854904582 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85544196 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856412518 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855603479 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855060329 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856697783 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855213106 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856188523 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855631359 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855225548 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855019289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857451201 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859891787 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857676011 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855955571 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856057573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855606532 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85662272 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855049724 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85521864 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855395942 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855741156 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856711227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85702053 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857457044 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855372378 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855909541 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856454698 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857236815 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855836024 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856635559 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856320317 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85690544 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858059671 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857781733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856709817 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856658266 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85890729 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.857130251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856350695 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861945591 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858551592 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857717115 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856802953 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858296848 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85843276 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858123605 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859464837 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858275603 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858258133 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858594835 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85827705 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858089853 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858950309 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85925385 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857428 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862274011 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85867366 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858342282 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859588604 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857745135 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860052135 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858370973 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858344668 seconds)
  done (took 124.359049199 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858813972 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858606069 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858749298 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859162487 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859446467 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858149413 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858294901 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861455701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861032444 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859526393 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85816209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859706234 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859283565 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858077003 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857673706 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858419135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860045564 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860852715 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859384125 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858793848 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860562853 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860009563 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859967934 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861846526 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864192682 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860137968 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860588143 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860734966 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860649454 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861240715 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861006655 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861917708 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860792226 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.860538617 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861518863 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860675959 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862654399 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862532859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861392752 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862063448 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865946626 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863441442 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863442195 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863473082 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862668069 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863886523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863398355 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862773699 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861920422 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862075088 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865255005 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862965354 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861513188 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864521139 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86186227 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862887863 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866001793 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863799328 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862755657 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864239507 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865114341 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864846419 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864081998 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864885542 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862152821 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864854988 seconds)
  done (took 124.651086251 seconds)
done (took 2532.218669934 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.958816259 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.903649832 seconds)
  done (took 15.64979124 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.024975535 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.977576601 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.861837513 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.918656419 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.859884502 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.886216405 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.863976246 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.859360421 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.864931989 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.862042003 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.863972554 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.046749901 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.869488998 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.860139045 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.862433564 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.953598843 seconds)
  done (took 52.228108661 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.870278371 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.86654471 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.878100826 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.867289568 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.866734222 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.879384428 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.895605281 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.871043759 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.901791508 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.879532324 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.940457671 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.875847428 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.868867983 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.916404356 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.878632362 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.88051287 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965344995 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.943428384 seconds)
  done (took 35.835589722 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.946400487 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.872577932 seconds)
  done (took 10.616453414 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.858297013 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.883174255 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.867966534 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.886735731 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.863647791 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.867508786 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.892357095 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.893909873 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.883795876 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.893658891 seconds)
  done (took 70.584679083 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.872044621 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.869051976 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.867665291 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.862020323 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.862177896 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.864691764 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.865835808 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.867025777 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.547959528 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.902027967 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.873111 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.873546857 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.865728247 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.86671559 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.869497736 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.891904845 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.980176164 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.867376383 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.868548088 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.869791748 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.865562385 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.91580452 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.877985831 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.870403903 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.898800485 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.552959345 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.874279586 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.868678044 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.974924905 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.868061867 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.86533657 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.07732303 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.870288772 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.334756472 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.151141792 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.867913409 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.875346156 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.871579573 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.869121056 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.976118031 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.866013588 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.872081894 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.825875211 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.123732499 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.963589384 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.911849918 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.223580718 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.867550239 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.866498209 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.899883544 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.873077571 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.867630249 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.882895079 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.383677026 seconds)
  done (took 132.756995381 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.866248789 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.215257242 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.030810664 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.865159559 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.145870806 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068898589 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.86319535 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909953705 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.864014068 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.094011915 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.119260418 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.967172614 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863740427 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.865140044 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.860085669 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.862070669 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.007262627 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.931495779 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.863619172 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.863114706 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891428622 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103635941 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.984514114 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.865652688 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.889994913 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068034792 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.984461399 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.964945908 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.60291154 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.86219402 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.92619506 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.865451655 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.867355695 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.863317747 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.018462503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.957351549 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944148492 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.864593327 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861816754 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.862195534 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.521089793 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063336069 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.959028114 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.989380019 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.114420175 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067735908 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.639442433 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.866447032 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.594743757 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.027014476 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.091923576 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.101919395 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.982851283 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.867941418 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.394126076 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.865396463 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.865497007 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.113132791 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08407876 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.959104072 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868029501 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.866129965 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863787275 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.101604443 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.869926058 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.958066887 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867324776 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866525201 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.959721944 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.961813148 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.092959587 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07697616 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.895438499 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.192955154 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.365760908 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.112011118 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.929575818 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115517622 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.867593615 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.865730696 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946371108 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.699541247 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.120753653 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.106358748 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.109142234 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896830997 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.586799639 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.868453893 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.090564883 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.084875516 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.115558517 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.112357771 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.104793511 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.187136016 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.866020289 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.867933535 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.10948119 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983952618 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.868998599 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.208210745 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09539347 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.408876562 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.89312617 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.170977514 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994366841 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.869404345 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.492495098 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.867490375 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.089366434 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.906774473 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.869244685 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865715726 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.084954641 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.839137151 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86825301 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.523637095 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.926281171 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.869331412 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.098677204 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.868465254 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131578677 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868618378 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097139507 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.355366976 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.897362963 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.095753662 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113402586 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.869799289 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112724742 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.106738431 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981971938 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085296898 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.567802379 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.868922688 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154824994 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.870143586 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.872897484 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.037388831 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.870770077 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.010578276 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.871296656 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.150210967 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887584081 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100079368 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873674972 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.122528247 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.899991347 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917648596 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870799881 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993960841 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.8707153 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.702967619 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025603758 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870641019 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.870285296 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.675461661 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.870563469 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020144335 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.094125759 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889055275 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.941785393 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.531708183 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869559735 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950465778 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891107912 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.260527261 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.871953474 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.124596902 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.871953976 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.870218086 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.869344683 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.102166805 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.065472663 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.871878443 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.869529981 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.76658725 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.870577244 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870279973 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.05253994 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.262040067 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869357334 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07067125 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.874346231 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998576908 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.874928246 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.936243485 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.211319073 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870736059 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.870710893 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.871565685 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.870464476 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.870152467 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.132659349 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893483069 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.38857063 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.005101995 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135897574 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.177256547 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.113919295 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.910353445 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.871793023 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.121482447 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.869822563 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.92950896 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.867913365 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.884858467 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099755195 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867898923 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.072547185 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.127956996 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.708319375 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906022791 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.859830232 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85945958 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.853691669 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.994272839 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94191429 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.853003453 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.857849848 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.962244986 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.968710063 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.060050101 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.848245516 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.924259565 seconds)
  done (took 902.176072406 seconds)
done (took 1221.638761057 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.843815051 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.844531924 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.848874665 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.840990161 seconds)
  done (took 29.152644199 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.842795313 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.841165449 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.843025036 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.837645081 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.840008379 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.84016172 seconds)
  done (took 12.815235923 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.896542545 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.839698583 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.839227504 seconds)
  done (took 21.343199716 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.916075416 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.247759044 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.979461824 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.272345792 seconds)
  done (took 10.185007531 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.839052323 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.839224486 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.839887954 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.841394249 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.840890464 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.840006717 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.839422934 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.840409898 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.842332575 seconds)
  done (took 18.332612585 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.884463277 seconds)
done (took 97.490488505 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.173655319 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.877149672 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.041241264 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.954127157 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.981540953 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.973674409 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.003887838 seconds)
    (8/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.978658609 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.129388553 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.887677195 seconds)
    (11/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.026263739 seconds)
    (12/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.967732007 seconds)
    (13/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.983621066 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.882101142 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.976031519 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.913384647 seconds)
    (17/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.356271898 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.035326774 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.905239301 seconds)
    (20/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.975631129 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.213315109 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.503032505 seconds)
    (23/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.066224904 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.06760869 seconds)
    (25/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.88088039 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.129971354 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.874622531 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.966091906 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.126487457 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.13308866 seconds)
    (31/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.078435279 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.270794705 seconds)
    (33/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.975860936 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.029143198 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.028260863 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.253967434 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.178775103 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.420730509 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.20437807 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.174155153 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.180062224 seconds)
    (42/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.350821372 seconds)
    (43/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.969263532 seconds)
    (44/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.877224285 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.051814336 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.297174201 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.080315381 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.896650608 seconds)
    (49/309) benchmarking ("sort", Int64, false)...
    done (took 5.47980061 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.894401627 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.956417296 seconds)
    (52/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.12385344 seconds)
    (53/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.864769845 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.192699364 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.261042901 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.015496346 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.030420608 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.90092106 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.642768465 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.968519329 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.268322677 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.873947723 seconds)
    (63/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.390818937 seconds)
    (64/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.727257585 seconds)
    (65/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.279140823 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.409947654 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.250091014 seconds)
    (68/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.000348304 seconds)
    (69/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.232346911 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.879536283 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.744595987 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.882524084 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.842405149 seconds)
    (74/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.900415721 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.228636207 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.031180853 seconds)
    (77/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.067121091 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.14674004 seconds)
    (79/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.884035703 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.55027591 seconds)
    (81/309) benchmarking ("sort", BigInt, false)...
    done (took 6.997512335 seconds)
    (82/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.043477897 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.502435745 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.239083394 seconds)
    (85/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.894967997 seconds)
    (86/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.58955519 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.090814275 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.888451964 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.872964984 seconds)
    (90/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 4.231666068 seconds)
    (91/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.380924419 seconds)
    (92/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.28693913 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.983327081 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.096216076 seconds)
    (95/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.06555546 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.065715744 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.965582714 seconds)
    (98/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.274851168 seconds)
    (99/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.077624128 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.902493268 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.877313882 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.139490184 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.546768676 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.200934713 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.176703024 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905135592 seconds)
    (107/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.048473654 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.249677491 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.813955966 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.060043085 seconds)
    (111/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.977564519 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.883079623 seconds)
    (113/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.119718809 seconds)
    (114/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.9870696 seconds)
    (115/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.35834403 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.879032573 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.416691037 seconds)
    (118/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.020278915 seconds)
    (119/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.985650895 seconds)
    (120/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.894017768 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.009037997 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.186992858 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.762680002 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.700877546 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.74030391 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.294333337 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.908416452 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.880143546 seconds)
    (129/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.004308756 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.986340133 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.035438506 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.895633756 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.027184445 seconds)
    (134/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.597337128 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.18924273 seconds)
    (136/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.998625712 seconds)
    (137/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.961233274 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.127343898 seconds)
    (139/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.541126949 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.010584671 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.979619571 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.112558515 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.967102725 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.882966212 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.284898247 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.207415054 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.150278167 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.178974067 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.219322922 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.960229178 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.226211949 seconds)
    (152/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.126744017 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.949242874 seconds)
    (154/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.655001578 seconds)
    (155/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.171978788 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.224293615 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.916593061 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.54045361 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.944456741 seconds)
    (160/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.655606653 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.121209831 seconds)
    (162/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.344623373 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.912541977 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.139954273 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.480997338 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.915076778 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.883541947 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.96014212 seconds)
    (169/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.370943558 seconds)
    (170/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.91129788 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.882079 seconds)
    (172/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.872413938 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.74406564 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.979042593 seconds)
    (175/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.994633251 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.882771207 seconds)
    (177/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.1829208 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.96618612 seconds)
    (179/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.884211846 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.023127227 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.986956348 seconds)
    (182/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.906855325 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.883748303 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.072577127 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.938302464 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.43536896 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.038916336 seconds)
    (188/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.677187745 seconds)
    (189/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.647768977 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.246478967 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.635033294 seconds)
    (192/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.156502572 seconds)
    (193/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.919027692 seconds)
    (194/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.308625954 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.208342871 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.911649672 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.886892491 seconds)
    (198/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.974666974 seconds)
    (199/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.962265677 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.014429357 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.88293678 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 4.128969242 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.21066448 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.602197282 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.102752335 seconds)
    (206/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.911704746 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.190777869 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.017022395 seconds)
    (209/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.97534416 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.209477772 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.961676101 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.063186755 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.105839011 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.815773903 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.06758749 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.005586426 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.778503479 seconds)
    (218/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.104278079 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.883595797 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.128473471 seconds)
    (221/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.885931174 seconds)
    (222/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.151327662 seconds)
    (223/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.021481339 seconds)
    (224/309) benchmarking ("sort", Int8, false)...
    done (took 4.853921563 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.887575282 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.816629175 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.187657334 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.539826344 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.212927958 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.279002124 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.876422607 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.887531112 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.782933696 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.115209105 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.206349465 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.917166528 seconds)
    (237/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.892972925 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.313482611 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.883546186 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.090620126 seconds)
    (241/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.912574935 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.919760568 seconds)
    (243/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.066312612 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.177394312 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.883065772 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.99450319 seconds)
    (247/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.011423437 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.473688317 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.99672079 seconds)
    (250/309) benchmarking ("sort", Float32, false)...
    done (took 5.555490334 seconds)
    (251/309) benchmarking ("sort", Float64, false)...
    done (took 5.605132015 seconds)
    (252/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.903321683 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.065740576 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.182911262 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.999906484 seconds)
    (256/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.27355361 seconds)
    (257/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.018214421 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.878730127 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.99718484 seconds)
    (260/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.946407637 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.923971176 seconds)
    (262/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.881904665 seconds)
    (263/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.216076968 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.88424486 seconds)
    (265/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.032369393 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.966495083 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.90840632 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.89503165 seconds)
    (269/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.961444653 seconds)
    (270/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.262203633 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.898778956 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.907229507 seconds)
    (273/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.338289393 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.191322586 seconds)
    (275/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.292091569 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.943619591 seconds)
    (277/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.008162384 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.96213187 seconds)
    (279/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.356905113 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.282794284 seconds)
    (281/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.274312764 seconds)
    (282/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.570697154 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.877388306 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.920468226 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.048466698 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.125376467 seconds)
    (287/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.633342667 seconds)
    (288/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.882074934 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.215278764 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.774908356 seconds)
    (291/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.224540341 seconds)
    (292/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.012619264 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.899452079 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.873599102 seconds)
    (295/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.185898949 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.266170464 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.906094166 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.998197688 seconds)
    (299/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.052217724 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.660462348 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.874687377 seconds)
    (302/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.953519979 seconds)
    (303/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.864433393 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 9.721701989 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.195399901 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.065366367 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.245217657 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.655633389 seconds)
    (309/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.107912333 seconds)
  done (took 1015.722602785 seconds)
done (took 1017.607012103 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.888963158 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.878100057 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.857967881 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.883440874 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.974445652 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.906893346 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.869472301 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.860568814 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.90858549 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.90517217 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.854364865 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.899317141 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.857729357 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.855234313 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.856499095 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872521215 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.168855083 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.89047822 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.870491329 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.867849376 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.873310931 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.852472729 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.899114224 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.892708038 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.855004275 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.859913788 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.85794624 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.866903051 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.958641828 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.849441338 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.850063474 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.859525271 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.158303551 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.874857311 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.84010097 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.861440753 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.854744552 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.856988258 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.845759702 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.870798574 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.301011503 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.848709976 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.844627063 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.841228992 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.840675886 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.848818818 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.843334247 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.847625166 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857490454 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.859798222 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.294355293 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.866281287 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.844010882 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.838368983 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.855368565 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.844899432 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.84311276 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860087117 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.863915186 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856944914 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.140030804 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.88495837 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.846356556 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.86213815 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.850522484 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.33164729 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.846549565 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.848429808 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.305475966 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.85877057 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.335168814 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.858098046 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.847480958 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.854940282 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.875472298 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.153390465 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.8749186 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.842234754 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.852882263 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.841422188 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.856798421 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858136622 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.847708628 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.843961688 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860927831 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.886391071 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.857909093 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.842940853 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.858914543 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.866513996 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.856289281 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.856752729 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.845540845 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.838262715 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.854339671 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.845009311 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.847585936 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.846628725 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.848946539 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.852084834 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.303438943 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868336026 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.839854662 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.841919158 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.842833713 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.861972526 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.302177855 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.851240481 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.86638409 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.89569265 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.843711173 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.140459267 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.883213879 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862892904 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.855651402 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.848846037 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.842216531 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.143654323 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.332313039 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.87108864 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.847734418 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.842386733 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862605751 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.843535967 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.844709161 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.155881502 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.87978634 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863326778 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.969289306 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.860508129 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.875119087 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.842539579 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.850073305 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.891076632 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866147772 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.878475388 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.849703474 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.86099266 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.863646079 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.842371177 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.855591338 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.860362699 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.84658417 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.85701369 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.845814224 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.888813947 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862554955 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863269321 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.86744552 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.96665422 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.846175303 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.147327478 seconds)
done (took 290.844032608 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.919056818 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.841516954 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.929342689 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.847335717 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.927314978 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.914946002 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.846066068 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.849115977 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.846625058 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.341023991 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.849518528 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.853481837 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.841088074 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.848465955 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.914037319 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.850599995 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.849075775 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.130645403 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.844944858 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.924920218 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.842002514 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.849213278 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.846962193 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.343041445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.844591538 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.846108025 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.922331042 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.848500211 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.132250923 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.842073406 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.844465437 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.132018319 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.922510486 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.860042095 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.854875204 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.856857558 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.930791341 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.855072691 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.908924716 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.910166505 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.933713527 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.878507468 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.845054662 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.845143165 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.849561122 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.843526182 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.849060409 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.880039257 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.84749402 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.851970741 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.133435704 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.857259599 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.854268746 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.852184431 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.84747387 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.858502378 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.846401566 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.846769884 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.922257535 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.844674859 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.910965884 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.343078244 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.343517271 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.846189933 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.844286483 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.848446672 seconds)
  done (took 182.959992895 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.910530895 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.918233858 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.908797349 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.850861591 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.8919902 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.912713663 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.849948846 seconds)
  done (took 15.013164607 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.853218857 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.849531947 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.894117343 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894183766 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.848234388 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.019340693 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.855840191 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.85419624 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.869865468 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.845481428 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.506767981 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.895942309 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.853385502 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.844123009 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.857345783 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.90234851 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.849055666 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.846017781 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.95236107 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.992603683 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.853993814 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.857777507 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.871173241 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.858439131 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.848899412 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.84454688 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.844576217 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.851025915 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849416454 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.850555889 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.84889011 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.895878651 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.851712595 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.845802797 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.847570211 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.849418656 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.842041675 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849055781 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.844326089 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.837564694 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.844650811 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.84006808 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.839961502 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.840671147 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.844084911 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.857679456 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.837283445 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.837861477 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.838407058 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.838633957 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.863079535 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.834336491 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.834304992 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.840289119 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.872114859 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.842614394 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.832529755 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.833743698 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.833648965 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.834711566 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.835017082 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.980587626 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.875454428 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.832273817 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.877057834 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.977971139 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.831635202 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.832751522 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.827067464 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.918106909 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.832273727 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.875932354 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.832265222 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.942061129 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.82898516 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.000385018 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.850443842 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.830767078 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.829183581 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.826263649 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.833649378 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.831172202 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.827147905 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.831293144 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83434068 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.830050437 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.830473916 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.825274091 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.831300316 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.829361534 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.878444423 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.828487859 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.824312297 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.967490443 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.831426704 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.933062655 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.852055121 seconds)
  done (took 202.800507723 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.833438761 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.832499218 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.82956779 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.840459295 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.827317234 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.827509361 seconds)
  done (took 12.745698465 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.830097878 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.840207895 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.833423985 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.831891211 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.827432008 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.827623158 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.830147333 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.826601855 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.830910954 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.832456335 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.824488429 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.82701154 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.826815049 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.827956223 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.832965959 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.831097265 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.833804618 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.831730809 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.835048544 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.829039262 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.965007568 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.827108506 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.828598062 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.833587798 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.832044926 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.834127683 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.838517079 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.832147374 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.83311671 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.83694899 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.831340329 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.82808503 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.832731732 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.836897833 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.841161293 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.835093152 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838050213 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.829829487 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.833725196 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.829705666 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.830208968 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.823725979 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.83179239 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.824941582 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.826359074 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.833548185 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.826163062 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.834180322 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.826660319 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.822514442 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.82427705 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.827434578 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.819025358 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.818632526 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.824595153 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823437127 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.823711631 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.823511337 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.817530403 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.818889378 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.82544133 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.819008524 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.818417828 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.826585871 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.829361766 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.817798838 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.822221877 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.823360547 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81810756 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.822011045 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.817701626 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.822337143 seconds)
  done (took 134.531319775 seconds)
done (took 549.844347302 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.064953635 seconds)
  done (took 8.808156406 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.888539822 seconds)
  done (took 8.640236225 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.767948751 seconds)
  done (took 10.517225746 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.839003133 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.838607684 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.832345563 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.826059813 seconds)
  done (took 29.09578383 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.057601099 seconds)
  done (took 8.806788126 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.831863121 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.814624321 seconds)
  done (took 15.462946785 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.831818239 seconds)
  done (took 8.580449208 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.217500646 seconds)
  done (took 8.976199866 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.837508703 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.851241576 seconds)
  done (took 15.457533242 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.820526314 seconds)
  done (took 8.56444006 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.495194275 seconds)
  done (took 9.32835482 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.835382604 seconds)
  done (took 8.596702586 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.826921117 seconds)
  done (took 8.564104194 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.924878843 seconds)
  done (took 8.665918053 seconds)
done (took 159.808802254 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.814345382 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.804496678 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.805944717 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.801533942 seconds)
  done (took 28.959793135 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.845328058 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.847121355 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.856495814 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.847047318 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.840400455 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.838158338 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.847106886 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.845950987 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.839460842 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.844116233 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.847188522 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.845026515 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.846846296 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.855471567 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.855255831 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.843408139 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.84812077 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.847312321 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.838384699 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.855090758 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.844175327 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.848581666 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.810867328 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.811713628 seconds)
  done (took 45.984390454 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.991741582 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.871815505 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.960612413 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.852605228 seconds)
  done (took 9.410193732 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.813054991 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.875035631 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.863823595 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.857747249 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.898132614 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.915211008 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.865248494 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.024537538 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.926759409 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.939100772 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.818796564 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.834875732 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.83772466 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.86175633 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.914781613 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.81261589 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.813944529 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.929843381 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.875416687 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.022844138 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.81425402 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.871814319 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.900484139 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.868185596 seconds)
  done (took 46.889174205 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.812758974 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.821112514 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.821311353 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.813826633 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.8131782 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.815363395 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.821516731 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.816479407 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.835480841 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.815789111 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.815973901 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.814530088 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.820853236 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.815452413 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.816408761 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.828807035 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.829238396 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.81574332 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.818358254 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.821048984 seconds)
  done (took 38.118869027 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.80677914 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.654348193 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.152157526 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.059255438 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.805068865 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.807644052 seconds)
  done (took 31.021734449 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.82274159 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.815553961 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.809598964 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.868294446 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.947776282 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.81876321 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.80878529 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.821249858 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.858545067 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.877301402 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.829859344 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.839140114 seconds)
  done (took 23.855256229 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.810301453 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.808121273 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.805718715 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.819683996 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.818989618 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.816878488 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.815189812 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.807491089 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.818003417 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.827569168 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.815758815 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.820414037 seconds)
  done (took 43.52724744 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.029237385 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.039301603 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.031286101 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.428205821 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.806122078 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.707140065 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.509791206 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.566315692 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.106534664 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.796136071 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.782261743 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.699030799 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.057632997 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.812927223 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.068725458 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.745836861 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.816402368 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087392471 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.818287711 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.820138384 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.117447643 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.869466038 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.031208756 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.864078018 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.03028037 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.29278599 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.068728458 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.076864404 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.151856645 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.874400569 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.028220096 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.871251749 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.82796686 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.83073624 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.816387486 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.825785448 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091481935 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.821436573 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.827622579 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.815400173 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.745998665 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.114650679 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.933294362 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.225233224 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.951402217 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.061242642 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.822587729 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.013724209 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.884957699 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.043943085 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.927597302 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.031616911 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.746151378 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.152724354 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.944786284 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.822454994 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.82443594 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.518749908 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.061122041 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.903033949 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.111837636 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.933156876 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.823383272 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.915249615 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.81850973 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.932815914 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.004391274 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.826936581 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.813703612 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.828600638 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.915857322 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.033945649 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.820118765 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821285633 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.83755541 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.823156979 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.17291577 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.390523328 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.823165072 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.377715934 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.303198284 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.793028662 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.300495942 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.870613038 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.095765281 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.040823852 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.895516878 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.066309951 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.700483916 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.825772929 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.63280735 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.90323783 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.885941439 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.821102825 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.024835533 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.093663082 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.939820775 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.821853016 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.746035069 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.834408311 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.025660729 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.299785705 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.885943419 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.820623154 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.822422732 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.827264432 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.822634474 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.840181376 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.831339395 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.742391829 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.105078601 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.928693398 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.071028881 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.810211107 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.498849478 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.085605071 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.952209535 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.434987907 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.954443204 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.824669206 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966250691 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.835552816 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.82615893 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.009386637 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.229819583 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.029361938 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.070508229 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.876098588 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.855007165 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.830618371 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.907598999 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.050598038 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.818561043 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.067526531 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.071026896 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.509307115 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.86376914 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.892383133 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.838243361 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.040003937 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.906308564 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.34338945 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.038875675 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.412468499 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.816236128 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.326133793 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.05117323 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211060097 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.841428184 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.025932553 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.860781185 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.527722862 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.75017545 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.829549989 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.164169226 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.859024494 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.90023065 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.827726523 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.827455823 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.834687084 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.909319482 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.899138841 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.901036363 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.753317875 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.827959798 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.828795884 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.826722755 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.366039985 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.491645981 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.118172499 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.826947981 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.900256272 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.827125101 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.42525058 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.831188724 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.950249131 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.841712873 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.569885045 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.851707484 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.05978687 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.231817022 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.946611957 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.826751976 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.829142908 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.528712538 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.837095846 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.526229287 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.109561618 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.822576338 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.27136358 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.890190525 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.903248449 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.844034179 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.829082869 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.831215499 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.830695261 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.030749087 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.366896658 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.123596423 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.170336227 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.914222833 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.092452305 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.018728599 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.307599737 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.508646105 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.339755554 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.056057357 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.830068755 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.831046447 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.487881735 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.837379305 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.044397673 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.03254697 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.104637443 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.122027281 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.241421162 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.835213343 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.838788583 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.072419618 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.831427784 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.253026352 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.882923004 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.155619134 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.639980713 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.088654771 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.895562839 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.841709205 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.470376678 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95820431 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.784552267 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.956935642 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.757122614 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.495668424 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129758779 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.100140848 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.809743332 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.164622519 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.125568027 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.058207053 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.46295999 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.829890423 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.880705242 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.912885147 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.834892404 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.379692648 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.876660072 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.878158219 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.835798143 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.832492989 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.827528229 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.501204218 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.909883536 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.963022383 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.569810043 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.340921244 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.747871066 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.094495921 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.88876173 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.272758992 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.878610594 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.045578009 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.837581001 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.424746147 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.885969791 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.099954215 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.791329666 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.043990655 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.03675345 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.858388758 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.838055625 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.757845244 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.701020239 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.835027514 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.036855854 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.71442102 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.835155992 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.122730962 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.465086661 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.873988797 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.834333924 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.130768153 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.208489332 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.009475434 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.840381685 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.047535101 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.956027297 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.753702574 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.31669868 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.414236529 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.534036722 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.844160494 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.035707271 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.132665983 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.152499857 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.876441045 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.911654964 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.098031742 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.816711252 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.83503344 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.3557851 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.934012955 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.076402124 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.147145164 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.359536847 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.221699726 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.073146762 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.830857018 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.042943893 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.203691868 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.080642023 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.838294388 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.935098488 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.047767562 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.116848744 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.711875377 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.544064457 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.077155228 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.84144868 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.762252468 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.043914298 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.328934864 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.191489488 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.365470347 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.04413344 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.867321299 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.319007651 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.851459811 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.770650946 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.83737936 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.785352319 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.051461343 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.060896072 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.878786352 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.395019449 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.07179841 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.243419822 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.10328036 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.879329738 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.763771509 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.556743927 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.792682148 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.884567227 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.878782804 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.909463084 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.840727015 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.040767738 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.277508119 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.883452195 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.365649178 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.0384911 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140283184 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.108498806 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.134699868 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.797505277 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110374125 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.796349287 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.481063414 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.929885986 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.930530931 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.83611115 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.840389203 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110182628 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.144836284 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.436138025 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.877590357 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.152152057 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.937993967 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.841710468 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.843281406 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.328168735 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.079599527 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.051853845 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.916617187 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.043122645 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.915703848 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.355509371 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.842653577 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.841813683 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.975989658 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.840086946 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.577067121 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.130966523 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.58052469 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.042069531 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.362803147 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.737067043 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.05304307 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.889460822 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.838641454 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.844822179 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.842156456 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.080815756 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.106802501 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.603312672 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.844411707 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.839937239 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.751302968 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.558485946 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.081263796 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.844163294 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.875474609 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.843248121 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.955660275 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.841404425 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.101223715 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.896961164 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.841126605 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.841519622 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.054319664 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.354738928 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.858443122 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.539944319 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.043267167 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.839762075 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.325698864 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.281112484 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.124266646 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.887173109 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.052648281 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.089745564 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.358605838 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.065060281 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.841529973 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.065746338 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.843950042 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111647716 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114791706 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.842977463 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.056594337 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.372125512 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137164562 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.853587469 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.786519233 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.84219928 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.101139771 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.889277427 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.840360276 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.851012621 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.380519182 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.569359494 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.313547377 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.993123025 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.145826495 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.666473418 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.600869252 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.845143933 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.846024275 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.507357448 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.587700916 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.058837298 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.155399162 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.791844629 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.045313395 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.547683308 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.841709375 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.109067291 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.769254682 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.846258175 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.48481599 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.11946561 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.777698108 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.845810391 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.442374482 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.83728102 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.929732944 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.844684015 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.970819858 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.106125953 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.203354407 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.958595202 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.484569812 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.563996695 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.784437211 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.887488409 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.65016598 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.41037093 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.560093707 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866630749 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.860760139 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.770604679 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.846730467 seconds)
  done (took 1620.07591884 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.873178397 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.901130005 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.850284651 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.841971321 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.923424225 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.907151713 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.897680694 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.938858827 seconds)
  done (took 56.900412072 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.839184783 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.852733673 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.843152162 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.840245628 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.85048374 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.839040388 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.999118749 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.849689602 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.845671419 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.84385305 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.840361607 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.839743207 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.109763277 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.860670889 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.838888482 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.838891879 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.842630101 seconds)
  done (took 73.548033309 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.841672345 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.987734584 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.893453151 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.84289483 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.319256757 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.854582615 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.685976529 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.846818428 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.847271664 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.121240241 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.136475263 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.867840489 seconds)
  done (took 89.014802542 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.847414232 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.841200542 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.842411008 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.84099931 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.840904123 seconds)
  done (took 10.989791323 seconds)
done (took 2120.098152769 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.172092794 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.900713576 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.941065312 seconds)
  done (took 5.61022072 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.988533882 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.034300252 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.146286351 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.90731011 seconds)
  done (took 9.856163708 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.095354585 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.205484593 seconds)
  done (took 6.070367719 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.20969282 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.846444312 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.214778009 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.850743322 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.84878843 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.850262399 seconds)
  done (took 22.325664217 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.848364839 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.849065591 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.849841309 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.849041742 seconds)
  done (took 9.167435156 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.843155352 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.550941785 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.843242162 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.854135203 seconds)
  done (took 20.861005342 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.98430032 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.960324807 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.988217893 seconds)
  done (took 7.702725705 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.063489604 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.6756421 seconds)
  done (took 6.50928288 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.991360479 seconds)
  done (took 3.76091978 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.877211658 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.119284991 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.342021938 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.386489969 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.458111922 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.625893598 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.167934636 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.090443487 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.290072736 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.300979 seconds)
  done (took 24.430395242 seconds)
done (took 131.504705247 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.190203361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.86139753 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.044235584 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.201642795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.065936209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.044105308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.060415245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.195531957 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.87894887 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.86378469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.201500515 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.102559022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.00709691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.858606809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.009917867 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.861612752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.074894643 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.203394325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.885012728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.123444638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.067189454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.849735154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.048877737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.859523913 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.069501608 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.998746873 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.39188417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.864447022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.032665604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.399909696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.998452988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.271116537 seconds)
  done (took 167.35904951 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.844619663 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.843669512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.84418842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.844846235 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.082368406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.843728569 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.845831275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.843913093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.031082609 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.018942485 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.844315824 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.072315381 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.848447699 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.843914602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.84422367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.844528798 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.17151256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.845287394 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.844419655 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.845713786 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.847411532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.923009674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.845747088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.934765466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.160239735 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.84582384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.84535421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.844059255 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.845805578 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.844860126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.846260799 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.845469124 seconds)
  done (took 206.454199043 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.84675327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.84442584 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.846383655 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.84620104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.84756251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.848159365 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.84501053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.845310244 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.569645748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.555961245 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.84508944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.846229532 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.849357764 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.845514298 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.844646228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.847186599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.846488223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.860801858 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.846160134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.849649663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.84681891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.512205834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.847185315 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.513566675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.847763312 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.850160272 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.851479293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.850673234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.849767145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.851187288 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.84993668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.849512688 seconds)
  done (took 219.676733654 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.099114143 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.857899135 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.858838902 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.910894539 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.85863408 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.858002062 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.85902588 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.104224245 seconds)
  done (took 19.188575867 seconds)
done (took 614.467588188 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.206748207 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.588166962 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.998040109 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.875039106 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.115769163 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.926567313 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.870950667 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.933741003 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.70226093 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.950505405 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.267557848 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.8774207 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.630107497 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.900511871 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.996068098 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.929053641 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.237607261 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.584741034 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.015088328 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.518119428 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.041397825 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.82589715 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.950326237 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.750787121 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.282691888 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.862411585 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.889837851 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.240774213 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.876945538 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.036882225 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.493688042 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.148688216 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.888455229 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.875736837 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.925613704 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.904661401 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.083142878 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.887823901 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.99447558 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.617856355 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.53352946 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.597178284 seconds)
  done (took 99.611882409 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.864455149 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.86084727 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.860587528 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.860018236 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.871054289 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.862901922 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.860063762 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.860998797 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.859192888 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.862734593 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.86082502 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.869902792 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.859896251 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.870816256 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.86174863 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.86156551 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.861803612 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.870437756 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.861634431 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.860365586 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.860900992 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.861700893 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.85798842 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.861310097 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.861287565 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.864737224 seconds)
  done (took 50.232071542 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.864298153 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.048528081 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.103858565 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.878315123 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.858220623 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.860591746 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.886838523 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.86909462 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.859080042 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.860080198 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.976279837 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.866380429 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.871223912 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.104072607 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.87553789 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.863354901 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.864626711 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.859205329 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.060493499 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.873467614 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.888876954 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.870000529 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.889741216 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.873773242 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.861705734 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.860345611 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.862278272 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.33305607 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.868930948 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.979659173 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.905589796 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.88823973 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.209143775 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.116772699 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.913684041 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.868269913 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.86436937 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.986397771 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.864355385 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.859228553 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.8881677 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.865691665 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.108101487 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.398317753 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.872924812 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.868930744 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.332701905 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.993860279 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.899548105 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.870875978 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.114270617 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.876498716 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.865242137 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.85991675 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.8968556 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.87235039 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.860881164 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.152906262 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.87496233 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.88930698 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.873317989 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.860656596 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.068158731 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.871000714 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.054550875 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.870176245 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.868867228 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.862551092 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.109817089 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.879469487 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.407245295 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.876792956 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.866134579 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.980371419 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.061380226 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.36608973 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.875884139 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.070581611 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.221628672 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.8964319 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.872638084 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.318070484 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.901105827 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.870165511 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.866498638 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.868117306 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.867320753 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.912177816 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.889461482 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.324060248 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.407256505 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.171920119 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.901763145 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.874526467 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.863990222 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.162442924 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.878612356 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.866819991 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.101851415 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.421233551 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.87885486 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.869780334 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.388024237 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.878443135 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.893195915 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.874073927 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.121801108 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.879720078 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.9155645 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.869296518 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.869884012 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.867252751 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.893295023 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.87243755 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.870355251 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.381666851 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.004915013 seconds)
  done (took 231.830627992 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.862475177 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.860978549 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.863078075 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.861149073 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.861920255 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.863250844 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.862839839 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.860992198 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.864183613 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.860834284 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.861090927 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.866004581 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.863466819 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.871205539 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.904493896 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.865286987 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.354025206 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.863897167 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.863839232 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.862266619 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.427388314 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.866940633 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.863149009 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.861799988 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.864495507 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.863673442 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.865881895 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.899285755 seconds)
  done (took 167.10460415 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.870046282 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.918816058 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.874858601 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.912154819 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.88139717 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.870510461 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.961039364 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.878939224 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.872253875 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.871299892 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.875582322 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.89762386 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.878003889 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.968239672 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.89401693 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.974963793 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.96793643 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.87718135 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.872501615 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.872546514 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.912933991 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.879489639 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.896851079 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.926141335 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.88394285 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.921782597 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.880957722 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.873582848 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.867592935 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.980254133 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.890285007 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.90414723 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.900747909 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.885745064 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982860067 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.977580222 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.972532084 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.971800091 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.871313917 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.871648037 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.873704268 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.868961645 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.926103004 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.885168865 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.868895379 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.985413313 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.890025707 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.874690452 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.874136936 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.873942481 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.882109549 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.884342327 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.902458713 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.99022282 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.919595685 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.897166766 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.964056849 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.98576007 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.867860139 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.962918711 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.875575357 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.986335845 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.891563689 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.869926899 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.8767897 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.878620654 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.922510607 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.982842536 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.969078328 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.875410355 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.96372637 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.928416007 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.886674179 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.878838294 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.875559905 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.92505172 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.976504608 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.926986173 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.928776435 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.902308137 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.878097435 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.868814685 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.870865561 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.897585037 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.881384386 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.98951255 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.979267063 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.879622401 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.875565151 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.878993602 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.875551275 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.894055082 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.929914767 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.909408711 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.973727896 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.904981215 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.906376401 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.881836966 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.889095067 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.880488876 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.903217505 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.882656976 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.887232221 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.145535573 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.90156685 seconds)
  done (took 202.303794667 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.251495826 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.91322841 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.943802625 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.137277493 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.247946974 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.752678078 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.910368722 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.919867926 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.927725314 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.048753289 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.977730612 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.960358396 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.905436664 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.893056161 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.913756976 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.931725125 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.946611226 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.211808594 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.107868544 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.438350424 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.912952815 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.181335033 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.255054725 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.276458846 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.963310712 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.310113301 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.509753535 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.012489054 seconds)
  done (took 62.566467626 seconds)
done (took 815.431110691 seconds)
SAVING RESULT...
DONE!
